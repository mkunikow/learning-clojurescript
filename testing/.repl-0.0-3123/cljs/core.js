// Compiled by ClojureScript 0.0-3123 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3123";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6175__delegate = function (args){
return console.log.apply(console,(function (){var G__6174 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6174) : cljs.core.into_array.call(null,G__6174));
})());
};
var G__6175 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6176__i = 0, G__6176__a = new Array(arguments.length -  0);
while (G__6176__i < G__6176__a.length) {G__6176__a[G__6176__i] = arguments[G__6176__i + 0]; ++G__6176__i;}
  args = new cljs.core.IndexedSeq(G__6176__a,0);
} 
return G__6175__delegate.call(this,args);};
G__6175.cljs$lang$maxFixedArity = 0;
G__6175.cljs$lang$applyTo = (function (arglist__6177){
var args = cljs.core.seq(arglist__6177);
return G__6175__delegate(args);
});
G__6175.cljs$core$IFn$_invoke$arity$variadic = G__6175__delegate;
return G__6175;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__6179 = x;
return goog.isString(G__6179);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6181 = x__$1;
return goog.typeOf(G__6181);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__4604__auto__ = ty;
if(cljs.core.truth_(and__4604__auto__)){
return ty.cljs$lang$type;
} else {
return and__4604__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6183 = obj;
return goog.typeOf(G__6183);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6185 = Symbol;
return goog.typeOf(G__6185);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__5501__auto___6187 = len;
var i_6188 = (0);
while(true){
if((i_6188 < n__5501__auto___6187)){
(new_arr[i_6188] = (arr[i_6188]));

var G__6189 = (i_6188 + (1));
i_6188 = G__6189;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6190 = (i + (1));
i = G__6190;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__6199__delegate = function (array,i,idxs){
var G__6196 = cljs$core$aget;
var G__6197 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6198 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6196,G__6197,G__6198) : cljs.core.apply.call(null,G__6196,G__6197,G__6198));
};
var G__6199 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6200__i = 0, G__6200__a = new Array(arguments.length -  2);
while (G__6200__i < G__6200__a.length) {G__6200__a[G__6200__i] = arguments[G__6200__i + 2]; ++G__6200__i;}
  idxs = new cljs.core.IndexedSeq(G__6200__a,0);
} 
return G__6199__delegate.call(this,array,i,idxs);};
G__6199.cljs$lang$maxFixedArity = 2;
G__6199.cljs$lang$applyTo = (function (arglist__6201){
var array = cljs.core.first(arglist__6201);
arglist__6201 = cljs.core.next(arglist__6201);
var i = cljs.core.first(arglist__6201);
var idxs = cljs.core.rest(arglist__6201);
return G__6199__delegate(array,i,idxs);
});
G__6199.cljs$core$IFn$_invoke$arity$variadic = G__6199__delegate;
return G__6199;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__6202 = null;
if (arguments.length > 2) {
var G__6203__i = 0, G__6203__a = new Array(arguments.length -  2);
while (G__6203__i < G__6203__a.length) {G__6203__a[G__6203__i] = arguments[G__6203__i + 2]; ++G__6203__i;}
G__6202 = new cljs.core.IndexedSeq(G__6203__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__6212__delegate = function (array,idx,idx2,idxv){
var G__6208 = cljs$core$aset;
var G__6209 = (array[idx]);
var G__6210 = idx2;
var G__6211 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6208,G__6209,G__6210,G__6211) : cljs.core.apply.call(null,G__6208,G__6209,G__6210,G__6211));
};
var G__6212 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6213__i = 0, G__6213__a = new Array(arguments.length -  3);
while (G__6213__i < G__6213__a.length) {G__6213__a[G__6213__i] = arguments[G__6213__i + 3]; ++G__6213__i;}
  idxv = new cljs.core.IndexedSeq(G__6213__a,0);
} 
return G__6212__delegate.call(this,array,idx,idx2,idxv);};
G__6212.cljs$lang$maxFixedArity = 3;
G__6212.cljs$lang$applyTo = (function (arglist__6214){
var array = cljs.core.first(arglist__6214);
arglist__6214 = cljs.core.next(arglist__6214);
var idx = cljs.core.first(arglist__6214);
arglist__6214 = cljs.core.next(arglist__6214);
var idx2 = cljs.core.first(arglist__6214);
var idxv = cljs.core.rest(arglist__6214);
return G__6212__delegate(array,idx,idx2,idxv);
});
G__6212.cljs$core$IFn$_invoke$arity$variadic = G__6212__delegate;
return G__6212;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__6215 = null;
if (arguments.length > 3) {
var G__6216__i = 0, G__6216__a = new Array(arguments.length -  3);
while (G__6216__i < G__6216__a.length) {G__6216__a[G__6216__i] = arguments[G__6216__i + 3]; ++G__6216__i;}
G__6215 = new cljs.core.IndexedSeq(G__6216__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__6222 = (function (a,x){
a.push(x);

return a;
});
var G__6223 = [];
var G__6224 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6222,G__6223,G__6224) : cljs.core.reduce.call(null,G__6222,G__6223,G__6224));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6225__i = 0, G__6225__a = new Array(arguments.length -  2);
while (G__6225__i < G__6225__a.length) {G__6225__a[G__6225__i] = arguments[G__6225__i + 2]; ++G__6225__i;}
  args = new cljs.core.IndexedSeq(G__6225__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__6226){
var obj = cljs.core.first(arglist__6226);
arglist__6226 = cljs.core.next(arglist__6226);
var s = cljs.core.first(arglist__6226);
var args = cljs.core.rest(arglist__6226);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj6228 = {};
return obj6228;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj6230 = {};
return obj6230;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6276 = x__5252__auto__;
return goog.typeOf(G__6276);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6278 = x__5252__auto__;
return goog.typeOf(G__6278);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6280 = x__5252__auto__;
return goog.typeOf(G__6280);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6282 = x__5252__auto__;
return goog.typeOf(G__6282);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6284 = x__5252__auto__;
return goog.typeOf(G__6284);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6286 = x__5252__auto__;
return goog.typeOf(G__6286);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6288 = x__5252__auto__;
return goog.typeOf(G__6288);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6290 = x__5252__auto__;
return goog.typeOf(G__6290);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6292 = x__5252__auto__;
return goog.typeOf(G__6292);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6294 = x__5252__auto__;
return goog.typeOf(G__6294);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6296 = x__5252__auto__;
return goog.typeOf(G__6296);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6298 = x__5252__auto__;
return goog.typeOf(G__6298);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6300 = x__5252__auto__;
return goog.typeOf(G__6300);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6302 = x__5252__auto__;
return goog.typeOf(G__6302);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6304 = x__5252__auto__;
return goog.typeOf(G__6304);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6306 = x__5252__auto__;
return goog.typeOf(G__6306);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6308 = x__5252__auto__;
return goog.typeOf(G__6308);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6310 = x__5252__auto__;
return goog.typeOf(G__6310);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6312 = x__5252__auto__;
return goog.typeOf(G__6312);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6314 = x__5252__auto__;
return goog.typeOf(G__6314);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6316 = x__5252__auto__;
return goog.typeOf(G__6316);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._invoke[(function (){var G__6318 = x__5252__auto__;
return goog.typeOf(G__6318);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._invoke["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj6320 = {};
return obj6320;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__4604__auto__ = value;
if(and__4604__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__4604__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__5252__auto__ = (((value == null))?null:value);
return (function (){var or__4616__auto__ = (cljs.core._clone[(function (){var G__6324 = x__5252__auto__;
return goog.typeOf(G__6324);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._clone["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj6326 = {};
return obj6326;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._count[(function (){var G__6330 = x__5252__auto__;
return goog.typeOf(G__6330);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._count["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj6332 = {};
return obj6332;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._empty[(function (){var G__6336 = x__5252__auto__;
return goog.typeOf(G__6336);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._empty["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj6338 = {};
return obj6338;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._conj[(function (){var G__6342 = x__5252__auto__;
return goog.typeOf(G__6342);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._conj["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj6344 = {};
return obj6344;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._nth[(function (){var G__6350 = x__5252__auto__;
return goog.typeOf(G__6350);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._nth["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._nth[(function (){var G__6352 = x__5252__auto__;
return goog.typeOf(G__6352);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._nth["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj6354 = {};
return obj6354;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj6356 = {};
return obj6356;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._first[(function (){var G__6360 = x__5252__auto__;
return goog.typeOf(G__6360);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._first["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._rest[(function (){var G__6364 = x__5252__auto__;
return goog.typeOf(G__6364);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._rest["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj6366 = {};
return obj6366;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._next[(function (){var G__6370 = x__5252__auto__;
return goog.typeOf(G__6370);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._next["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj6372 = {};
return obj6372;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._lookup[(function (){var G__6378 = x__5252__auto__;
return goog.typeOf(G__6378);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._lookup["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._lookup[(function (){var G__6380 = x__5252__auto__;
return goog.typeOf(G__6380);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._lookup["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj6382 = {};
return obj6382;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6386 = x__5252__auto__;
return goog.typeOf(G__6386);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._assoc[(function (){var G__6390 = x__5252__auto__;
return goog.typeOf(G__6390);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._assoc["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj6392 = {};
return obj6392;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._dissoc[(function (){var G__6396 = x__5252__auto__;
return goog.typeOf(G__6396);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._dissoc["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj6398 = {};
return obj6398;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._key[(function (){var G__6402 = x__5252__auto__;
return goog.typeOf(G__6402);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._key["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._val[(function (){var G__6406 = x__5252__auto__;
return goog.typeOf(G__6406);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._val["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj6408 = {};
return obj6408;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._disjoin[(function (){var G__6412 = x__5252__auto__;
return goog.typeOf(G__6412);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._disjoin["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj6414 = {};
return obj6414;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._peek[(function (){var G__6418 = x__5252__auto__;
return goog.typeOf(G__6418);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._peek["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._pop[(function (){var G__6422 = x__5252__auto__;
return goog.typeOf(G__6422);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._pop["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj6424 = {};
return obj6424;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._assoc_n[(function (){var G__6428 = x__5252__auto__;
return goog.typeOf(G__6428);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj6430 = {};
return obj6430;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._deref[(function (){var G__6434 = x__5252__auto__;
return goog.typeOf(G__6434);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._deref["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6436 = {};
return obj6436;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6440 = x__5252__auto__;
return goog.typeOf(G__6440);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj6442 = {};
return obj6442;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._meta[(function (){var G__6446 = x__5252__auto__;
return goog.typeOf(G__6446);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._meta["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj6448 = {};
return obj6448;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._with_meta[(function (){var G__6452 = x__5252__auto__;
return goog.typeOf(G__6452);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._with_meta["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj6454 = {};
return obj6454;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._reduce[(function (){var G__6460 = x__5252__auto__;
return goog.typeOf(G__6460);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._reduce["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._reduce[(function (){var G__6462 = x__5252__auto__;
return goog.typeOf(G__6462);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._reduce["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj6464 = {};
return obj6464;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._kv_reduce[(function (){var G__6468 = x__5252__auto__;
return goog.typeOf(G__6468);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj6470 = {};
return obj6470;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._equiv[(function (){var G__6474 = x__5252__auto__;
return goog.typeOf(G__6474);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._equiv["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj6476 = {};
return obj6476;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._hash[(function (){var G__6480 = x__5252__auto__;
return goog.typeOf(G__6480);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._hash["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj6482 = {};
return obj6482;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._seq[(function (){var G__6486 = x__5252__auto__;
return goog.typeOf(G__6486);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._seq["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj6488 = {};
return obj6488;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj6490 = {};
return obj6490;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj6492 = {};
return obj6492;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj6494 = {};
return obj6494;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._rseq[(function (){var G__6498 = x__5252__auto__;
return goog.typeOf(G__6498);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._rseq["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj6500 = {};
return obj6500;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._sorted_seq[(function (){var G__6504 = x__5252__auto__;
return goog.typeOf(G__6504);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6508 = x__5252__auto__;
return goog.typeOf(G__6508);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._entry_key[(function (){var G__6512 = x__5252__auto__;
return goog.typeOf(G__6512);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._entry_key["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._comparator[(function (){var G__6516 = x__5252__auto__;
return goog.typeOf(G__6516);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._comparator["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj6518 = {};
return obj6518;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__4604__auto__ = writer;
if(and__4604__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__4604__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__5252__auto__ = (((writer == null))?null:writer);
return (function (){var or__4616__auto__ = (cljs.core._write[(function (){var G__6522 = x__5252__auto__;
return goog.typeOf(G__6522);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._write["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__4604__auto__ = writer;
if(and__4604__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__4604__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__5252__auto__ = (((writer == null))?null:writer);
return (function (){var or__4616__auto__ = (cljs.core._flush[(function (){var G__6526 = x__5252__auto__;
return goog.typeOf(G__6526);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._flush["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj6528 = {};
return obj6528;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._pr_writer[(function (){var G__6532 = x__5252__auto__;
return goog.typeOf(G__6532);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj6534 = {};
return obj6534;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__4604__auto__ = d;
if(and__4604__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__4604__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__5252__auto__ = (((d == null))?null:d);
return (function (){var or__4616__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6538 = x__5252__auto__;
return goog.typeOf(G__6538);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj6540 = {};
return obj6540;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._notify_watches[(function (){var G__6544 = x__5252__auto__;
return goog.typeOf(G__6544);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._add_watch[(function (){var G__6548 = x__5252__auto__;
return goog.typeOf(G__6548);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._add_watch["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__4604__auto__ = this$;
if(and__4604__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__4604__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__5252__auto__ = (((this$ == null))?null:this$);
return (function (){var or__4616__auto__ = (cljs.core._remove_watch[(function (){var G__6552 = x__5252__auto__;
return goog.typeOf(G__6552);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj6554 = {};
return obj6554;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._as_transient[(function (){var G__6558 = x__5252__auto__;
return goog.typeOf(G__6558);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._as_transient["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj6560 = {};
return obj6560;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._conj_BANG_[(function (){var G__6564 = x__5252__auto__;
return goog.typeOf(G__6564);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6568 = x__5252__auto__;
return goog.typeOf(G__6568);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj6570 = {};
return obj6570;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6574 = x__5252__auto__;
return goog.typeOf(G__6574);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj6576 = {};
return obj6576;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6580 = x__5252__auto__;
return goog.typeOf(G__6580);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj6582 = {};
return obj6582;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6586 = x__5252__auto__;
return goog.typeOf(G__6586);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._pop_BANG_[(function (){var G__6590 = x__5252__auto__;
return goog.typeOf(G__6590);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj6592 = {};
return obj6592;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__4604__auto__ = tcoll;
if(and__4604__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__5252__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__4616__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6596 = x__5252__auto__;
return goog.typeOf(G__6596);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj6598 = {};
return obj6598;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__4604__auto__ = x;
if(and__4604__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__4604__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__5252__auto__ = (((x == null))?null:x);
return (function (){var or__4616__auto__ = (cljs.core._compare[(function (){var G__6602 = x__5252__auto__;
return goog.typeOf(G__6602);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._compare["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj6604 = {};
return obj6604;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._drop_first[(function (){var G__6608 = x__5252__auto__;
return goog.typeOf(G__6608);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._drop_first["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj6610 = {};
return obj6610;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._chunked_first[(function (){var G__6614 = x__5252__auto__;
return goog.typeOf(G__6614);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._chunked_rest[(function (){var G__6618 = x__5252__auto__;
return goog.typeOf(G__6618);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj6620 = {};
return obj6620;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._chunked_next[(function (){var G__6624 = x__5252__auto__;
return goog.typeOf(G__6624);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj6626 = {};
return obj6626;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__4604__auto__ = x;
if(and__4604__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__4604__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__5252__auto__ = (((x == null))?null:x);
return (function (){var or__4616__auto__ = (cljs.core._name[(function (){var G__6630 = x__5252__auto__;
return goog.typeOf(G__6630);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._name["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__4604__auto__ = x;
if(and__4604__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__4604__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__5252__auto__ = (((x == null))?null:x);
return (function (){var or__4616__auto__ = (cljs.core._namespace[(function (){var G__6634 = x__5252__auto__;
return goog.typeOf(G__6634);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._namespace["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj6636 = {};
return obj6636;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj6638 = {};
return obj6638;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._reset_BANG_[(function (){var G__6642 = x__5252__auto__;
return goog.typeOf(G__6642);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj6644 = {};
return obj6644;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._swap_BANG_[(function (){var G__6654 = x__5252__auto__;
return goog.typeOf(G__6654);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._swap_BANG_[(function (){var G__6656 = x__5252__auto__;
return goog.typeOf(G__6656);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._swap_BANG_[(function (){var G__6658 = x__5252__auto__;
return goog.typeOf(G__6658);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._swap_BANG_[(function (){var G__6660 = x__5252__auto__;
return goog.typeOf(G__6660);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj6662 = {};
return obj6662;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__4604__auto__ = o;
if(and__4604__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__4604__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__5252__auto__ = (((o == null))?null:o);
return (function (){var or__4616__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6666 = x__5252__auto__;
return goog.typeOf(G__6666);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj6668 = {};
return obj6668;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__4604__auto__ = coll;
if(and__4604__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__4604__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__5252__auto__ = (((coll == null))?null:coll);
return (function (){var or__4616__auto__ = (cljs.core._iterator[(function (){var G__6672 = x__5252__auto__;
return goog.typeOf(G__6672);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._iterator["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6675 = (4294967295);
var G__6676 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6675,G__6676) : Math.imul.call(null,G__6675,G__6676));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__6679 = a;
var G__6680 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6679,G__6680) : Math.imul.call(null,G__6679,G__6680));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6681 = (i + (2));
var G__6682 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6681;
h1 = G__6682;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6684 = {};
return obj6684;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6685 = (i + (1));
var G__6686 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6685;
hash = G__6686;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6690 = {};
return obj6690;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__6693 = o;
if(G__6693){
var bit__5283__auto__ = (G__6693.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__5283__auto__) || (G__6693.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6694 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6694) : Math.floor.call(null,G__6694));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4604__auto__ = cljs.core.not(a.ns);
if(and__4604__auto__){
return b.ns;
} else {
return and__4604__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6701 = a.ns;
var G__6702 = b.ns;
return goog.array.defaultCompare(G__6701,G__6702);
})();
if(((0) === nsc)){
var G__6703 = a.name;
var G__6704 = b.name;
return goog.array.defaultCompare(G__6703,G__6704);
} else {
return nsc;
}
}
} else {
var G__6705 = a.name;
var G__6706 = b.name;
return goog.array.defaultCompare(G__6705,G__6706);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__5032__auto__ = self__._hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6708 = null;
var G__6708__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6708__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6708 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6708__2.call(this,self__,coll);
case 3:
return G__6708__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6708.cljs$core$IFn$_invoke$arity$2 = G__6708__2;
G__6708.cljs$core$IFn$_invoke$arity$3 = G__6708__3;
return G__6708;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6707){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6707)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6756 = null;
var G__6756__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6756__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6756__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6756__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6756__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6756__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6756__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6756__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6756__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6756__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6756__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6756__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6756__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6756__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6756__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6756__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6756__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6756__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6756__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6756__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6756__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6756__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6712 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6713 = a;
var G__6714 = b;
var G__6715 = c;
var G__6716 = d;
var G__6717 = e;
var G__6718 = f;
var G__6719 = g;
var G__6720 = h;
var G__6721 = i;
var G__6722 = j;
var G__6723 = k;
var G__6724 = l;
var G__6725 = m;
var G__6726 = n;
var G__6727 = o;
var G__6728 = p;
var G__6729 = q;
var G__6730 = r;
var G__6731 = s;
var G__6732 = t;
var G__6733 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6712,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733) : cljs.core.apply.call(null,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733));
});
G__6756 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6756__1.call(this,self__);
case 2:
return G__6756__2.call(this,self__,a);
case 3:
return G__6756__3.call(this,self__,a,b);
case 4:
return G__6756__4.call(this,self__,a,b,c);
case 5:
return G__6756__5.call(this,self__,a,b,c,d);
case 6:
return G__6756__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6756__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6756__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6756__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6756__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6756__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6756__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6756__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6756__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6756__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6756__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6756__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6756__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6756__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6756__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6756__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6756__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6756.cljs$core$IFn$_invoke$arity$1 = G__6756__1;
G__6756.cljs$core$IFn$_invoke$arity$2 = G__6756__2;
G__6756.cljs$core$IFn$_invoke$arity$3 = G__6756__3;
G__6756.cljs$core$IFn$_invoke$arity$4 = G__6756__4;
G__6756.cljs$core$IFn$_invoke$arity$5 = G__6756__5;
G__6756.cljs$core$IFn$_invoke$arity$6 = G__6756__6;
G__6756.cljs$core$IFn$_invoke$arity$7 = G__6756__7;
G__6756.cljs$core$IFn$_invoke$arity$8 = G__6756__8;
G__6756.cljs$core$IFn$_invoke$arity$9 = G__6756__9;
G__6756.cljs$core$IFn$_invoke$arity$10 = G__6756__10;
G__6756.cljs$core$IFn$_invoke$arity$11 = G__6756__11;
G__6756.cljs$core$IFn$_invoke$arity$12 = G__6756__12;
G__6756.cljs$core$IFn$_invoke$arity$13 = G__6756__13;
G__6756.cljs$core$IFn$_invoke$arity$14 = G__6756__14;
G__6756.cljs$core$IFn$_invoke$arity$15 = G__6756__15;
G__6756.cljs$core$IFn$_invoke$arity$16 = G__6756__16;
G__6756.cljs$core$IFn$_invoke$arity$17 = G__6756__17;
G__6756.cljs$core$IFn$_invoke$arity$18 = G__6756__18;
G__6756.cljs$core$IFn$_invoke$arity$19 = G__6756__19;
G__6756.cljs$core$IFn$_invoke$arity$20 = G__6756__20;
G__6756.cljs$core$IFn$_invoke$arity$21 = G__6756__21;
G__6756.cljs$core$IFn$_invoke$arity$22 = G__6756__22;
return G__6756;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6711){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6711)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6734 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6735 = a;
var G__6736 = b;
var G__6737 = c;
var G__6738 = d;
var G__6739 = e;
var G__6740 = f;
var G__6741 = g;
var G__6742 = h;
var G__6743 = i;
var G__6744 = j;
var G__6745 = k;
var G__6746 = l;
var G__6747 = m;
var G__6748 = n;
var G__6749 = o;
var G__6750 = p;
var G__6751 = q;
var G__6752 = r;
var G__6753 = s;
var G__6754 = t;
var G__6755 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755) : cljs.core.apply.call(null,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__6758 = x;
if(G__6758){
var bit__5290__auto__ = null;
if(cljs.core.truth_((function (){var or__4616__auto__ = bit__5290__auto__;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return G__6758.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6758.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6758);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6758);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__6760 = value;
if(G__6760){
var bit__5290__auto__ = (G__6760.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__5290__auto__) || (G__6760.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6760.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6760);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6760);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6762 = coll;
if(G__6762){
var bit__5283__auto__ = (G__6762.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__5283__auto__) || (G__6762.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6764 = coll;
if(G__6764){
var bit__5283__auto__ = (G__6764.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5283__auto__) || (G__6764.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__6766 = coll;
if(G__6766){
var bit__5283__auto__ = (G__6766.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5283__auto__) || (G__6766.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6768 = coll;
if(G__6768){
var bit__5283__auto__ = (G__6768.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5283__auto__) || (G__6768.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__6773__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6774 = y;
var G__6775 = cljs.core.first(more);
var G__6776 = cljs.core.next(more);
x = G__6774;
y = G__6775;
more = G__6776;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6773 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6777__i = 0, G__6777__a = new Array(arguments.length -  2);
while (G__6777__i < G__6777__a.length) {G__6777__a[G__6777__i] = arguments[G__6777__i + 2]; ++G__6777__i;}
  more = new cljs.core.IndexedSeq(G__6777__a,0);
} 
return G__6773__delegate.call(this,x,y,more);};
G__6773.cljs$lang$maxFixedArity = 2;
G__6773.cljs$lang$applyTo = (function (arglist__6778){
var x = cljs.core.first(arglist__6778);
arglist__6778 = cljs.core.next(arglist__6778);
var y = cljs.core.first(arglist__6778);
var more = cljs.core.rest(arglist__6778);
return G__6773__delegate(x,y,more);
});
G__6773.cljs$core$IFn$_invoke$arity$variadic = G__6773__delegate;
return G__6773;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__6779 = null;
if (arguments.length > 2) {
var G__6780__i = 0, G__6780__a = new Array(arguments.length -  2);
while (G__6780__i < G__6780__a.length) {G__6780__a[G__6780__i] = arguments[G__6780__i + 2]; ++G__6780__i;}
G__6779 = new cljs.core.IndexedSeq(G__6780__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6781 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6781) : cljs.core.es6_iterator_seq.call(null,G__6781));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6782 = (n + (1));
var G__6783 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6784 = cljs.core.next(coll__$1);
n = G__6782;
hash_code = G__6783;
coll__$1 = G__6784;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6785 = (n + (1));
var G__6786 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6787 = cljs.core.next(coll__$1);
n = G__6785;
hash_code = G__6786;
coll__$1 = G__6787;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__6788 = this$__$1.valueOf();
var G__6789 = other.valueOf();
return goog.array.defaultCompare(G__6788,G__6789);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6790 = o;
return goog.getUid(G__6790);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6792 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6792) : cljs.core.deref.call(null,G__6792));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6799 = val;
var G__6800 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6799,G__6800) : f.call(null,G__6799,G__6800));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6805 = nval;
var G__6806 = (n + (1));
val = G__6805;
n = G__6806;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6801 = val__$1;
var G__6802 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6801,G__6802) : f.call(null,G__6801,G__6802));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6807 = nval;
var G__6808 = (n + (1));
val__$1 = G__6807;
n = G__6808;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6803 = val__$1;
var G__6804 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6803,G__6804) : f.call(null,G__6803,G__6804));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6809 = nval;
var G__6810 = (n + (1));
val__$1 = G__6809;
n = G__6810;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6817 = val;
var G__6818 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6817,G__6818) : f.call(null,G__6817,G__6818));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6823 = nval;
var G__6824 = (n + (1));
val = G__6823;
n = G__6824;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6819 = val__$1;
var G__6820 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6819,G__6820) : f.call(null,G__6819,G__6820));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6825 = nval;
var G__6826 = (n + (1));
val__$1 = G__6825;
n = G__6826;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6821 = val__$1;
var G__6822 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6821,G__6822) : f.call(null,G__6821,G__6822));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6827 = nval;
var G__6828 = (n + (1));
val__$1 = G__6827;
n = G__6828;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__6830 = x;
if(G__6830){
var bit__5290__auto__ = (G__6830.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__5290__auto__) || (G__6830.cljs$core$ICounted$)){
return true;
} else {
if((!G__6830.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6830);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6830);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__6832 = x;
if(G__6832){
var bit__5290__auto__ = (G__6832.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5290__auto__) || (G__6832.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6832.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6832);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6832);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6833 = coll__$1;
var G__6834 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6833,G__6834) : cljs.core.equiv_sequential.call(null,G__6833,G__6834));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6835 = o;
var G__6836 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6835,G__6836) : cljs.core.cons.call(null,G__6835,G__6836));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6839 = coll__$1;
var G__6840 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6839,G__6840) : cljs.core.equiv_sequential.call(null,G__6839,G__6840));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6841 = cljs.core.List.EMPTY;
var G__6842 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6841,G__6842) : cljs.core.with_meta.call(null,G__6841,G__6842));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6843 = f;
var G__6844 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6843,G__6844) : cljs.core.seq_reduce.call(null,G__6843,G__6844));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6845 = f;
var G__6846 = start;
var G__6847 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6845,G__6846,G__6847) : cljs.core.seq_reduce.call(null,G__6845,G__6846,G__6847));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6848 = o;
var G__6849 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6848,G__6849) : cljs.core.cons.call(null,G__6848,G__6849));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6850 = sn;
s = G__6850;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__6855__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6856 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6857 = cljs.core.first(xs);
var G__6858 = cljs.core.next(xs);
coll = G__6856;
x = G__6857;
xs = G__6858;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6855 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6859__i = 0, G__6859__a = new Array(arguments.length -  2);
while (G__6859__i < G__6859__a.length) {G__6859__a[G__6859__i] = arguments[G__6859__i + 2]; ++G__6859__i;}
  xs = new cljs.core.IndexedSeq(G__6859__a,0);
} 
return G__6855__delegate.call(this,coll,x,xs);};
G__6855.cljs$lang$maxFixedArity = 2;
G__6855.cljs$lang$applyTo = (function (arglist__6860){
var coll = cljs.core.first(arglist__6860);
arglist__6860 = cljs.core.next(arglist__6860);
var x = cljs.core.first(arglist__6860);
var xs = cljs.core.rest(arglist__6860);
return G__6855__delegate(coll,x,xs);
});
G__6855.cljs$core$IFn$_invoke$arity$variadic = G__6855__delegate;
return G__6855;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__6861 = null;
if (arguments.length > 2) {
var G__6862__i = 0, G__6862__a = new Array(arguments.length -  2);
while (G__6862__i < G__6862__a.length) {G__6862__a[G__6862__i] = arguments[G__6862__i + 2]; ++G__6862__i;}
G__6861 = new cljs.core.IndexedSeq(G__6862__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6863 = cljs.core.next(s);
var G__6864 = (acc + (1));
s = G__6863;
acc = G__6864;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__6866 = coll;
if(G__6866){
var bit__5283__auto__ = (G__6866.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__5283__auto__) || (G__6866.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6867 = cljs.core.next(coll);
var G__6868 = (n - (1));
coll = G__6867;
n = G__6868;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6869 = cljs.core.next(coll);
var G__6870 = (n - (1));
var G__6871 = not_found;
coll = G__6869;
n = G__6870;
not_found = G__6871;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6876 = coll;
if(G__6876){
var bit__5283__auto__ = (G__6876.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5283__auto__) || (G__6876.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6877 = coll;
if(G__6877){
var bit__5290__auto__ = (G__6877.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5290__auto__) || (G__6877.cljs$core$ISeq$)){
return true;
} else {
if((!G__6877.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6877);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6877);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6878 = coll;
if(G__6878){
var bit__5283__auto__ = (G__6878.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__5283__auto__) || (G__6878.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6879 = coll;
if(G__6879){
var bit__5290__auto__ = (G__6879.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5290__auto__) || (G__6879.cljs$core$ISeq$)){
return true;
} else {
if((!G__6879.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6879);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6879);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6880 = (n__$1 - (1));
var G__6881 = cljs.core.rest(xs);
n__$1 = G__6880;
xs = G__6881;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6884 = o;
if(G__6884){
var bit__5283__auto__ = (G__6884.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5283__auto__) || (G__6884.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6885 = o;
if(G__6885){
var bit__5283__auto__ = (G__6885.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5283__auto__) || (G__6885.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__6889__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6890 = ret;
var G__6891 = cljs.core.first(kvs);
var G__6892 = cljs.core.second(kvs);
var G__6893 = cljs.core.nnext(kvs);
coll = G__6890;
k = G__6891;
v = G__6892;
kvs = G__6893;
continue;
} else {
return ret;
}
break;
}
};
var G__6889 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6894__i = 0, G__6894__a = new Array(arguments.length -  3);
while (G__6894__i < G__6894__a.length) {G__6894__a[G__6894__i] = arguments[G__6894__i + 3]; ++G__6894__i;}
  kvs = new cljs.core.IndexedSeq(G__6894__a,0);
} 
return G__6889__delegate.call(this,coll,k,v,kvs);};
G__6889.cljs$lang$maxFixedArity = 3;
G__6889.cljs$lang$applyTo = (function (arglist__6895){
var coll = cljs.core.first(arglist__6895);
arglist__6895 = cljs.core.next(arglist__6895);
var k = cljs.core.first(arglist__6895);
arglist__6895 = cljs.core.next(arglist__6895);
var v = cljs.core.first(arglist__6895);
var kvs = cljs.core.rest(arglist__6895);
return G__6889__delegate(coll,k,v,kvs);
});
G__6889.cljs$core$IFn$_invoke$arity$variadic = G__6889__delegate;
return G__6889;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__6896 = null;
if (arguments.length > 3) {
var G__6897__i = 0, G__6897__a = new Array(arguments.length -  3);
while (G__6897__i < G__6897__a.length) {G__6897__a[G__6897__i] = arguments[G__6897__i + 3]; ++G__6897__i;}
G__6896 = new cljs.core.IndexedSeq(G__6897__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__6900__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6901 = ret;
var G__6902 = cljs.core.first(ks);
var G__6903 = cljs.core.next(ks);
coll = G__6901;
k = G__6902;
ks = G__6903;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6900 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6904__i = 0, G__6904__a = new Array(arguments.length -  2);
while (G__6904__i < G__6904__a.length) {G__6904__a[G__6904__i] = arguments[G__6904__i + 2]; ++G__6904__i;}
  ks = new cljs.core.IndexedSeq(G__6904__a,0);
} 
return G__6900__delegate.call(this,coll,k,ks);};
G__6900.cljs$lang$maxFixedArity = 2;
G__6900.cljs$lang$applyTo = (function (arglist__6905){
var coll = cljs.core.first(arglist__6905);
arglist__6905 = cljs.core.next(arglist__6905);
var k = cljs.core.first(arglist__6905);
var ks = cljs.core.rest(arglist__6905);
return G__6900__delegate(coll,k,ks);
});
G__6900.cljs$core$IFn$_invoke$arity$variadic = G__6900__delegate;
return G__6900;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__6906 = null;
if (arguments.length > 2) {
var G__6907__i = 0, G__6907__a = new Array(arguments.length -  2);
while (G__6907__i < G__6907__a.length) {G__6907__a[G__6907__i] = arguments[G__6907__i + 2]; ++G__6907__i;}
G__6906 = new cljs.core.IndexedSeq(G__6907__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__4616__auto__ = (function (){var G__6912 = f;
return goog.isFunction(G__6912);
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var G__6913 = f;
if(G__6913){
var bit__5290__auto__ = null;
if(cljs.core.truth_((function (){var or__4616__auto____$1 = bit__5290__auto__;
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
return G__6913.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6913.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6913);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6913);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7379 = null;
var G__7379__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7379__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6915 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6915) : self__.afn.call(null,G__6915));
});
var G__7379__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6916 = a;
var G__6917 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6916,G__6917) : self__.afn.call(null,G__6916,G__6917));
});
var G__7379__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6918 = a;
var G__6919 = b;
var G__6920 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6918,G__6919,G__6920) : self__.afn.call(null,G__6918,G__6919,G__6920));
});
var G__7379__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6921 = a;
var G__6922 = b;
var G__6923 = c;
var G__6924 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6921,G__6922,G__6923,G__6924) : self__.afn.call(null,G__6921,G__6922,G__6923,G__6924));
});
var G__7379__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6925 = a;
var G__6926 = b;
var G__6927 = c;
var G__6928 = d;
var G__6929 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6925,G__6926,G__6927,G__6928,G__6929) : self__.afn.call(null,G__6925,G__6926,G__6927,G__6928,G__6929));
});
var G__7379__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6930 = a;
var G__6931 = b;
var G__6932 = c;
var G__6933 = d;
var G__6934 = e;
var G__6935 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6930,G__6931,G__6932,G__6933,G__6934,G__6935) : self__.afn.call(null,G__6930,G__6931,G__6932,G__6933,G__6934,G__6935));
});
var G__7379__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6936 = a;
var G__6937 = b;
var G__6938 = c;
var G__6939 = d;
var G__6940 = e;
var G__6941 = f;
var G__6942 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942) : self__.afn.call(null,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942));
});
var G__7379__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6943 = a;
var G__6944 = b;
var G__6945 = c;
var G__6946 = d;
var G__6947 = e;
var G__6948 = f;
var G__6949 = g;
var G__6950 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950) : self__.afn.call(null,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950));
});
var G__7379__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6951 = a;
var G__6952 = b;
var G__6953 = c;
var G__6954 = d;
var G__6955 = e;
var G__6956 = f;
var G__6957 = g;
var G__6958 = h;
var G__6959 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6951,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959) : self__.afn.call(null,G__6951,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959));
});
var G__7379__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6960 = a;
var G__6961 = b;
var G__6962 = c;
var G__6963 = d;
var G__6964 = e;
var G__6965 = f;
var G__6966 = g;
var G__6967 = h;
var G__6968 = i;
var G__6969 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967,G__6968,G__6969) : self__.afn.call(null,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967,G__6968,G__6969));
});
var G__7379__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6970 = a;
var G__6971 = b;
var G__6972 = c;
var G__6973 = d;
var G__6974 = e;
var G__6975 = f;
var G__6976 = g;
var G__6977 = h;
var G__6978 = i;
var G__6979 = j;
var G__6980 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980) : self__.afn.call(null,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980));
});
var G__7379__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6981 = a;
var G__6982 = b;
var G__6983 = c;
var G__6984 = d;
var G__6985 = e;
var G__6986 = f;
var G__6987 = g;
var G__6988 = h;
var G__6989 = i;
var G__6990 = j;
var G__6991 = k;
var G__6992 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989,G__6990,G__6991,G__6992) : self__.afn.call(null,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989,G__6990,G__6991,G__6992));
});
var G__7379__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6993 = a;
var G__6994 = b;
var G__6995 = c;
var G__6996 = d;
var G__6997 = e;
var G__6998 = f;
var G__6999 = g;
var G__7000 = h;
var G__7001 = i;
var G__7002 = j;
var G__7003 = k;
var G__7004 = l;
var G__7005 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005) : self__.afn.call(null,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005));
});
var G__7379__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7006 = a;
var G__7007 = b;
var G__7008 = c;
var G__7009 = d;
var G__7010 = e;
var G__7011 = f;
var G__7012 = g;
var G__7013 = h;
var G__7014 = i;
var G__7015 = j;
var G__7016 = k;
var G__7017 = l;
var G__7018 = m;
var G__7019 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019) : self__.afn.call(null,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019));
});
var G__7379__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7020 = a;
var G__7021 = b;
var G__7022 = c;
var G__7023 = d;
var G__7024 = e;
var G__7025 = f;
var G__7026 = g;
var G__7027 = h;
var G__7028 = i;
var G__7029 = j;
var G__7030 = k;
var G__7031 = l;
var G__7032 = m;
var G__7033 = n;
var G__7034 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7020,G__7021,G__7022,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034) : self__.afn.call(null,G__7020,G__7021,G__7022,G__7023,G__7024,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034));
});
var G__7379__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7035 = a;
var G__7036 = b;
var G__7037 = c;
var G__7038 = d;
var G__7039 = e;
var G__7040 = f;
var G__7041 = g;
var G__7042 = h;
var G__7043 = i;
var G__7044 = j;
var G__7045 = k;
var G__7046 = l;
var G__7047 = m;
var G__7048 = n;
var G__7049 = o;
var G__7050 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048,G__7049,G__7050) : self__.afn.call(null,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048,G__7049,G__7050));
});
var G__7379__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7051 = a;
var G__7052 = b;
var G__7053 = c;
var G__7054 = d;
var G__7055 = e;
var G__7056 = f;
var G__7057 = g;
var G__7058 = h;
var G__7059 = i;
var G__7060 = j;
var G__7061 = k;
var G__7062 = l;
var G__7063 = m;
var G__7064 = n;
var G__7065 = o;
var G__7066 = p;
var G__7067 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066,G__7067) : self__.afn.call(null,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066,G__7067));
});
var G__7379__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7068 = a;
var G__7069 = b;
var G__7070 = c;
var G__7071 = d;
var G__7072 = e;
var G__7073 = f;
var G__7074 = g;
var G__7075 = h;
var G__7076 = i;
var G__7077 = j;
var G__7078 = k;
var G__7079 = l;
var G__7080 = m;
var G__7081 = n;
var G__7082 = o;
var G__7083 = p;
var G__7084 = q;
var G__7085 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085) : self__.afn.call(null,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085));
});
var G__7379__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7086 = a;
var G__7087 = b;
var G__7088 = c;
var G__7089 = d;
var G__7090 = e;
var G__7091 = f;
var G__7092 = g;
var G__7093 = h;
var G__7094 = i;
var G__7095 = j;
var G__7096 = k;
var G__7097 = l;
var G__7098 = m;
var G__7099 = n;
var G__7100 = o;
var G__7101 = p;
var G__7102 = q;
var G__7103 = r;
var G__7104 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104) : self__.afn.call(null,G__7086,G__7087,G__7088,G__7089,G__7090,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103,G__7104));
});
var G__7379__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7105 = a;
var G__7106 = b;
var G__7107 = c;
var G__7108 = d;
var G__7109 = e;
var G__7110 = f;
var G__7111 = g;
var G__7112 = h;
var G__7113 = i;
var G__7114 = j;
var G__7115 = k;
var G__7116 = l;
var G__7117 = m;
var G__7118 = n;
var G__7119 = o;
var G__7120 = p;
var G__7121 = q;
var G__7122 = r;
var G__7123 = s;
var G__7124 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124) : self__.afn.call(null,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124));
});
var G__7379__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__7125 = self__.afn;
var G__7126 = a;
var G__7127 = b;
var G__7128 = c;
var G__7129 = d;
var G__7130 = e;
var G__7131 = f;
var G__7132 = g;
var G__7133 = h;
var G__7134 = i;
var G__7135 = j;
var G__7136 = k;
var G__7137 = l;
var G__7138 = m;
var G__7139 = n;
var G__7140 = o;
var G__7141 = p;
var G__7142 = q;
var G__7143 = r;
var G__7144 = s;
var G__7145 = t;
var G__7146 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146) : cljs.core.apply.call(null,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146));
});
G__7379 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7379__1.call(this,self__);
case 2:
return G__7379__2.call(this,self__,a);
case 3:
return G__7379__3.call(this,self__,a,b);
case 4:
return G__7379__4.call(this,self__,a,b,c);
case 5:
return G__7379__5.call(this,self__,a,b,c,d);
case 6:
return G__7379__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7379__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7379__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7379__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7379__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7379__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7379__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7379__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7379__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7379__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7379__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7379__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7379__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7379__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7379__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7379__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7379__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7379.cljs$core$IFn$_invoke$arity$1 = G__7379__1;
G__7379.cljs$core$IFn$_invoke$arity$2 = G__7379__2;
G__7379.cljs$core$IFn$_invoke$arity$3 = G__7379__3;
G__7379.cljs$core$IFn$_invoke$arity$4 = G__7379__4;
G__7379.cljs$core$IFn$_invoke$arity$5 = G__7379__5;
G__7379.cljs$core$IFn$_invoke$arity$6 = G__7379__6;
G__7379.cljs$core$IFn$_invoke$arity$7 = G__7379__7;
G__7379.cljs$core$IFn$_invoke$arity$8 = G__7379__8;
G__7379.cljs$core$IFn$_invoke$arity$9 = G__7379__9;
G__7379.cljs$core$IFn$_invoke$arity$10 = G__7379__10;
G__7379.cljs$core$IFn$_invoke$arity$11 = G__7379__11;
G__7379.cljs$core$IFn$_invoke$arity$12 = G__7379__12;
G__7379.cljs$core$IFn$_invoke$arity$13 = G__7379__13;
G__7379.cljs$core$IFn$_invoke$arity$14 = G__7379__14;
G__7379.cljs$core$IFn$_invoke$arity$15 = G__7379__15;
G__7379.cljs$core$IFn$_invoke$arity$16 = G__7379__16;
G__7379.cljs$core$IFn$_invoke$arity$17 = G__7379__17;
G__7379.cljs$core$IFn$_invoke$arity$18 = G__7379__18;
G__7379.cljs$core$IFn$_invoke$arity$19 = G__7379__19;
G__7379.cljs$core$IFn$_invoke$arity$20 = G__7379__20;
G__7379.cljs$core$IFn$_invoke$arity$21 = G__7379__21;
G__7379.cljs$core$IFn$_invoke$arity$22 = G__7379__22;
return G__7379;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6914){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6914)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7147 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7147) : self__.afn.call(null,G__7147));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7148 = a;
var G__7149 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7148,G__7149) : self__.afn.call(null,G__7148,G__7149));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7150 = a;
var G__7151 = b;
var G__7152 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7150,G__7151,G__7152) : self__.afn.call(null,G__7150,G__7151,G__7152));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7153 = a;
var G__7154 = b;
var G__7155 = c;
var G__7156 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7153,G__7154,G__7155,G__7156) : self__.afn.call(null,G__7153,G__7154,G__7155,G__7156));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7157 = a;
var G__7158 = b;
var G__7159 = c;
var G__7160 = d;
var G__7161 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7157,G__7158,G__7159,G__7160,G__7161) : self__.afn.call(null,G__7157,G__7158,G__7159,G__7160,G__7161));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7162 = a;
var G__7163 = b;
var G__7164 = c;
var G__7165 = d;
var G__7166 = e;
var G__7167 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7162,G__7163,G__7164,G__7165,G__7166,G__7167) : self__.afn.call(null,G__7162,G__7163,G__7164,G__7165,G__7166,G__7167));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7168 = a;
var G__7169 = b;
var G__7170 = c;
var G__7171 = d;
var G__7172 = e;
var G__7173 = f;
var G__7174 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174) : self__.afn.call(null,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7175 = a;
var G__7176 = b;
var G__7177 = c;
var G__7178 = d;
var G__7179 = e;
var G__7180 = f;
var G__7181 = g;
var G__7182 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182) : self__.afn.call(null,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7183 = a;
var G__7184 = b;
var G__7185 = c;
var G__7186 = d;
var G__7187 = e;
var G__7188 = f;
var G__7189 = g;
var G__7190 = h;
var G__7191 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7183,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189,G__7190,G__7191) : self__.afn.call(null,G__7183,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189,G__7190,G__7191));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7192 = a;
var G__7193 = b;
var G__7194 = c;
var G__7195 = d;
var G__7196 = e;
var G__7197 = f;
var G__7198 = g;
var G__7199 = h;
var G__7200 = i;
var G__7201 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201) : self__.afn.call(null,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7202 = a;
var G__7203 = b;
var G__7204 = c;
var G__7205 = d;
var G__7206 = e;
var G__7207 = f;
var G__7208 = g;
var G__7209 = h;
var G__7210 = i;
var G__7211 = j;
var G__7212 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212) : self__.afn.call(null,G__7202,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7213 = a;
var G__7214 = b;
var G__7215 = c;
var G__7216 = d;
var G__7217 = e;
var G__7218 = f;
var G__7219 = g;
var G__7220 = h;
var G__7221 = i;
var G__7222 = j;
var G__7223 = k;
var G__7224 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222,G__7223,G__7224) : self__.afn.call(null,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222,G__7223,G__7224));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7225 = a;
var G__7226 = b;
var G__7227 = c;
var G__7228 = d;
var G__7229 = e;
var G__7230 = f;
var G__7231 = g;
var G__7232 = h;
var G__7233 = i;
var G__7234 = j;
var G__7235 = k;
var G__7236 = l;
var G__7237 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237) : self__.afn.call(null,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7238 = a;
var G__7239 = b;
var G__7240 = c;
var G__7241 = d;
var G__7242 = e;
var G__7243 = f;
var G__7244 = g;
var G__7245 = h;
var G__7246 = i;
var G__7247 = j;
var G__7248 = k;
var G__7249 = l;
var G__7250 = m;
var G__7251 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251) : self__.afn.call(null,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244,G__7245,G__7246,G__7247,G__7248,G__7249,G__7250,G__7251));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7252 = a;
var G__7253 = b;
var G__7254 = c;
var G__7255 = d;
var G__7256 = e;
var G__7257 = f;
var G__7258 = g;
var G__7259 = h;
var G__7260 = i;
var G__7261 = j;
var G__7262 = k;
var G__7263 = l;
var G__7264 = m;
var G__7265 = n;
var G__7266 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7252,G__7253,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263,G__7264,G__7265,G__7266) : self__.afn.call(null,G__7252,G__7253,G__7254,G__7255,G__7256,G__7257,G__7258,G__7259,G__7260,G__7261,G__7262,G__7263,G__7264,G__7265,G__7266));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7267 = a;
var G__7268 = b;
var G__7269 = c;
var G__7270 = d;
var G__7271 = e;
var G__7272 = f;
var G__7273 = g;
var G__7274 = h;
var G__7275 = i;
var G__7276 = j;
var G__7277 = k;
var G__7278 = l;
var G__7279 = m;
var G__7280 = n;
var G__7281 = o;
var G__7282 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282) : self__.afn.call(null,G__7267,G__7268,G__7269,G__7270,G__7271,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278,G__7279,G__7280,G__7281,G__7282));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7283 = a;
var G__7284 = b;
var G__7285 = c;
var G__7286 = d;
var G__7287 = e;
var G__7288 = f;
var G__7289 = g;
var G__7290 = h;
var G__7291 = i;
var G__7292 = j;
var G__7293 = k;
var G__7294 = l;
var G__7295 = m;
var G__7296 = n;
var G__7297 = o;
var G__7298 = p;
var G__7299 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298,G__7299) : self__.afn.call(null,G__7283,G__7284,G__7285,G__7286,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295,G__7296,G__7297,G__7298,G__7299));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7300 = a;
var G__7301 = b;
var G__7302 = c;
var G__7303 = d;
var G__7304 = e;
var G__7305 = f;
var G__7306 = g;
var G__7307 = h;
var G__7308 = i;
var G__7309 = j;
var G__7310 = k;
var G__7311 = l;
var G__7312 = m;
var G__7313 = n;
var G__7314 = o;
var G__7315 = p;
var G__7316 = q;
var G__7317 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316,G__7317) : self__.afn.call(null,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316,G__7317));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7318 = a;
var G__7319 = b;
var G__7320 = c;
var G__7321 = d;
var G__7322 = e;
var G__7323 = f;
var G__7324 = g;
var G__7325 = h;
var G__7326 = i;
var G__7327 = j;
var G__7328 = k;
var G__7329 = l;
var G__7330 = m;
var G__7331 = n;
var G__7332 = o;
var G__7333 = p;
var G__7334 = q;
var G__7335 = r;
var G__7336 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328,G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336) : self__.afn.call(null,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328,G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7337 = a;
var G__7338 = b;
var G__7339 = c;
var G__7340 = d;
var G__7341 = e;
var G__7342 = f;
var G__7343 = g;
var G__7344 = h;
var G__7345 = i;
var G__7346 = j;
var G__7347 = k;
var G__7348 = l;
var G__7349 = m;
var G__7350 = n;
var G__7351 = o;
var G__7352 = p;
var G__7353 = q;
var G__7354 = r;
var G__7355 = s;
var G__7356 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356) : self__.afn.call(null,G__7337,G__7338,G__7339,G__7340,G__7341,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355,G__7356));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7357 = self__.afn;
var G__7358 = a;
var G__7359 = b;
var G__7360 = c;
var G__7361 = d;
var G__7362 = e;
var G__7363 = f;
var G__7364 = g;
var G__7365 = h;
var G__7366 = i;
var G__7367 = j;
var G__7368 = k;
var G__7369 = l;
var G__7370 = m;
var G__7371 = n;
var G__7372 = o;
var G__7373 = p;
var G__7374 = q;
var G__7375 = r;
var G__7376 = s;
var G__7377 = t;
var G__7378 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378) : cljs.core.apply.call(null,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7383 = o;
if(G__7383){
var bit__5290__auto__ = (G__7383.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__5290__auto__) || (G__7383.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7383.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7383);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7383);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__4604__auto__ = !((o == null));
if(and__4604__auto__){
var G__7387 = o;
if(G__7387){
var bit__5290__auto__ = (G__7387.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__5290__auto__) || (G__7387.cljs$core$IMeta$)){
return true;
} else {
if((!G__7387.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7387);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7387);
}
} else {
return and__4604__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__7390__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7391 = ret;
var G__7392 = cljs.core.first(ks);
var G__7393 = cljs.core.next(ks);
coll = G__7391;
k = G__7392;
ks = G__7393;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7390 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7394__i = 0, G__7394__a = new Array(arguments.length -  2);
while (G__7394__i < G__7394__a.length) {G__7394__a[G__7394__i] = arguments[G__7394__i + 2]; ++G__7394__i;}
  ks = new cljs.core.IndexedSeq(G__7394__a,0);
} 
return G__7390__delegate.call(this,coll,k,ks);};
G__7390.cljs$lang$maxFixedArity = 2;
G__7390.cljs$lang$applyTo = (function (arglist__7395){
var coll = cljs.core.first(arglist__7395);
arglist__7395 = cljs.core.next(arglist__7395);
var k = cljs.core.first(arglist__7395);
var ks = cljs.core.rest(arglist__7395);
return G__7390__delegate(coll,k,ks);
});
G__7390.cljs$core$IFn$_invoke$arity$variadic = G__7390__delegate;
return G__7390;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__7396 = null;
if (arguments.length > 2) {
var G__7397__i = 0, G__7397__a = new Array(arguments.length -  2);
while (G__7397__i < G__7397__a.length) {G__7397__a[G__7397__i] = arguments[G__7397__i + 2]; ++G__7397__i;}
G__7396 = new cljs.core.IndexedSeq(G__7397__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7399 = x;
if(G__7399){
var bit__5290__auto__ = (G__7399.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__5290__auto__) || (G__7399.cljs$core$ICollection$)){
return true;
} else {
if((!G__7399.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7399);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7399);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7401 = x;
if(G__7401){
var bit__5290__auto__ = (G__7401.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__5290__auto__) || (G__7401.cljs$core$ISet$)){
return true;
} else {
if((!G__7401.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7401);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7401);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__7403 = x;
if(G__7403){
var bit__5290__auto__ = (G__7403.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__5290__auto__) || (G__7403.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7403.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7403);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7403);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__7405 = x;
if(G__7405){
var bit__5290__auto__ = (G__7405.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__5290__auto__) || (G__7405.cljs$core$ISequential$)){
return true;
} else {
if((!G__7405.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7405);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7405);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__7407 = x;
if(G__7407){
var bit__5290__auto__ = (G__7407.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__5290__auto__) || (G__7407.cljs$core$ISorted$)){
return true;
} else {
if((!G__7407.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7407);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7407);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__7409 = x;
if(G__7409){
var bit__5290__auto__ = (G__7409.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5290__auto__) || (G__7409.cljs$core$IReduce$)){
return true;
} else {
if((!G__7409.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7409);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7409);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7411 = x;
if(G__7411){
var bit__5290__auto__ = (G__7411.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__5290__auto__) || (G__7411.cljs$core$IMap$)){
return true;
} else {
if((!G__7411.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7411);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7411);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__7413 = x;
if(G__7413){
var bit__5290__auto__ = (G__7413.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__5290__auto__) || (G__7413.cljs$core$IVector$)){
return true;
} else {
if((!G__7413.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7413);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7413);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__7415 = x;
if(G__7415){
var bit__5283__auto__ = (G__7415.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__5283__auto__) || (G__7415.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj7421 = {};
return obj7421;
});
var cljs$core$js_obj__1 = (function() { 
var G__7424__delegate = function (keyvals){
var G__7422 = goog.object.create;
var G__7423 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7422,G__7423) : cljs.core.apply.call(null,G__7422,G__7423));
};
var G__7424 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7425__i = 0, G__7425__a = new Array(arguments.length -  0);
while (G__7425__i < G__7425__a.length) {G__7425__a[G__7425__i] = arguments[G__7425__i + 0]; ++G__7425__i;}
  keyvals = new cljs.core.IndexedSeq(G__7425__a,0);
} 
return G__7424__delegate.call(this,keyvals);};
G__7424.cljs$lang$maxFixedArity = 0;
G__7424.cljs$lang$applyTo = (function (arglist__7426){
var keyvals = cljs.core.seq(arglist__7426);
return G__7424__delegate(keyvals);
});
G__7424.cljs$core$IFn$_invoke$arity$variadic = G__7424__delegate;
return G__7424;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__7427 = null;
if (arguments.length > 0) {
var G__7428__i = 0, G__7428__a = new Array(arguments.length -  0);
while (G__7428__i < G__7428__a.length) {G__7428__a[G__7428__i] = arguments[G__7428__i + 0]; ++G__7428__i;}
G__7427 = new cljs.core.IndexedSeq(G__7428__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__7431_7433 = obj;
var G__7432_7434 = ((function (G__7431_7433,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7431_7433,keys))
;
goog.object.forEach(G__7431_7433,G__7432_7434);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7435 = (i__$1 + (1));
var G__7436 = (j__$1 + (1));
var G__7437 = (len__$1 - (1));
i__$1 = G__7435;
j__$1 = G__7436;
len__$1 = G__7437;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7438 = (i__$1 - (1));
var G__7439 = (j__$1 - (1));
var G__7440 = (len__$1 - (1));
i__$1 = G__7438;
j__$1 = G__7439;
len__$1 = G__7440;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7442 = {};
return obj7442;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7444 = s;
if(G__7444){
var bit__5290__auto__ = (G__7444.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5290__auto__) || (G__7444.cljs$core$ISeq$)){
return true;
} else {
if((!G__7444.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7444);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7444);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__7446 = s;
if(G__7446){
var bit__5290__auto__ = (G__7446.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__5290__auto__) || (G__7446.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7446.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7446);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7446);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__4616__auto__ = cljs.core.fn_QMARK_(f);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var G__7450 = f;
if(G__7450){
var bit__5290__auto__ = (G__7450.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__5290__auto__) || (G__7450.cljs$core$IFn$)){
return true;
} else {
if((!G__7450.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7450);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7450);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7463 = n;
return isNaN(G__7463);
})())) && (!((n === Infinity))) && (((function (){var G__7464 = n;
return parseFloat(G__7464);
})() === (function (){var G__7465 = n;
var G__7466 = (10);
return parseInt(G__7465,G__7466);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__7467__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7468 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7469 = etc;
s = G__7468;
xs = G__7469;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7467 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7470__i = 0, G__7470__a = new Array(arguments.length -  2);
while (G__7470__i < G__7470__a.length) {G__7470__a[G__7470__i] = arguments[G__7470__i + 2]; ++G__7470__i;}
  more = new cljs.core.IndexedSeq(G__7470__a,0);
} 
return G__7467__delegate.call(this,x,y,more);};
G__7467.cljs$lang$maxFixedArity = 2;
G__7467.cljs$lang$applyTo = (function (arglist__7471){
var x = cljs.core.first(arglist__7471);
arglist__7471 = cljs.core.next(arglist__7471);
var y = cljs.core.first(arglist__7471);
var more = cljs.core.rest(arglist__7471);
return G__7467__delegate(x,y,more);
});
G__7467.cljs$core$IFn$_invoke$arity$variadic = G__7467__delegate;
return G__7467;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__7472 = null;
if (arguments.length > 2) {
var G__7473__i = 0, G__7473__a = new Array(arguments.length -  2);
while (G__7473__i < G__7473__a.length) {G__7473__a[G__7473__i] = arguments[G__7473__i + 2]; ++G__7473__i;}
G__7472 = new cljs.core.IndexedSeq(G__7473__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7477 = x;
if(G__7477){
var bit__5283__auto__ = (G__7477.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__5283__auto__) || (G__7477.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7478 = x;
var G__7479 = y;
return goog.array.defaultCompare(G__7478,G__7479);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7484 = xs;
var G__7485 = ys;
var G__7486 = len;
var G__7487 = (n + (1));
xs = G__7484;
ys = G__7485;
len = G__7486;
n = G__7487;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7492 = x;
var G__7493 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7492,G__7493) : f.call(null,G__7492,G__7493));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7494 = y;
var G__7495 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7494,G__7495) : f.call(null,G__7494,G__7495));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7501 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7501) : cljs.core.to_array.call(null,G__7501));
})();
var G__7502_7504 = a;
var G__7503_7505 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7502_7504,G__7503_7505);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7511 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7511) : keyfn.call(null,G__7511));
})(),(function (){var G__7512 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7512) : keyfn.call(null,G__7512));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7518 = f;
var G__7519 = cljs.core.first(s);
var G__7520 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7518,G__7519,G__7520) : cljs.core.reduce.call(null,G__7518,G__7519,G__7520));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7521 = val__$1;
var G__7522 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7521,G__7522) : f.call(null,G__7521,G__7522));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7523 = nval;
var G__7524 = cljs.core.next(coll__$1);
val__$1 = G__7523;
coll__$1 = G__7524;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__7528 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7528) : cljs.core.to_array.call(null,G__7528));
})();
var G__7529_7531 = a;
goog.array.shuffle(G__7529_7531);

var G__7530 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7530) : cljs.core.vec.call(null,G__7530));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__7534 = coll;
if(G__7534){
var bit__5283__auto__ = (G__7534.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5283__auto__) || (G__7534.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__7535 = coll;
if(G__7535){
var bit__5283__auto__ = (G__7535.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__5283__auto__) || (G__7535.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__7544 = null;
var G__7544__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7544__1 = (function (x){
var G__7541 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7541) : cf.call(null,G__7541));
});
var G__7544__2 = (function (x,y){
var G__7542 = x;
var G__7543 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7542,G__7543) : f.call(null,G__7542,G__7543));
});
G__7544 = function(x,y){
switch(arguments.length){
case 0:
return G__7544__0.call(this);
case 1:
return G__7544__1.call(this,x);
case 2:
return G__7544__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7544.cljs$core$IFn$_invoke$arity$0 = G__7544__0;
G__7544.cljs$core$IFn$_invoke$arity$1 = G__7544__1;
G__7544.cljs$core$IFn$_invoke$arity$2 = G__7544__2;
return G__7544;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7551 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7551) : xform.call(null,G__7551));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7552 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7552) : f__$1.call(null,G__7552));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__7553__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__7553 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7554__i = 0, G__7554__a = new Array(arguments.length -  2);
while (G__7554__i < G__7554__a.length) {G__7554__a[G__7554__i] = arguments[G__7554__i + 2]; ++G__7554__i;}
  more = new cljs.core.IndexedSeq(G__7554__a,0);
} 
return G__7553__delegate.call(this,x,y,more);};
G__7553.cljs$lang$maxFixedArity = 2;
G__7553.cljs$lang$applyTo = (function (arglist__7555){
var x = cljs.core.first(arglist__7555);
arglist__7555 = cljs.core.next(arglist__7555);
var y = cljs.core.first(arglist__7555);
var more = cljs.core.rest(arglist__7555);
return G__7553__delegate(x,y,more);
});
G__7553.cljs$core$IFn$_invoke$arity$variadic = G__7553__delegate;
return G__7553;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__7556 = null;
if (arguments.length > 2) {
var G__7557__i = 0, G__7557__a = new Array(arguments.length -  2);
while (G__7557__i < G__7557__a.length) {G__7557__a[G__7557__i] = arguments[G__7557__i + 2]; ++G__7557__i;}
G__7556 = new cljs.core.IndexedSeq(G__7557__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__7558__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__7558 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7559__i = 0, G__7559__a = new Array(arguments.length -  2);
while (G__7559__i < G__7559__a.length) {G__7559__a[G__7559__i] = arguments[G__7559__i + 2]; ++G__7559__i;}
  more = new cljs.core.IndexedSeq(G__7559__a,0);
} 
return G__7558__delegate.call(this,x,y,more);};
G__7558.cljs$lang$maxFixedArity = 2;
G__7558.cljs$lang$applyTo = (function (arglist__7560){
var x = cljs.core.first(arglist__7560);
arglist__7560 = cljs.core.next(arglist__7560);
var y = cljs.core.first(arglist__7560);
var more = cljs.core.rest(arglist__7560);
return G__7558__delegate(x,y,more);
});
G__7558.cljs$core$IFn$_invoke$arity$variadic = G__7558__delegate;
return G__7558;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__7561 = null;
if (arguments.length > 2) {
var G__7562__i = 0, G__7562__a = new Array(arguments.length -  2);
while (G__7562__i < G__7562__a.length) {G__7562__a[G__7562__i] = arguments[G__7562__i + 2]; ++G__7562__i;}
G__7561 = new cljs.core.IndexedSeq(G__7562__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__7563__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__7563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7564__i = 0, G__7564__a = new Array(arguments.length -  2);
while (G__7564__i < G__7564__a.length) {G__7564__a[G__7564__i] = arguments[G__7564__i + 2]; ++G__7564__i;}
  more = new cljs.core.IndexedSeq(G__7564__a,0);
} 
return G__7563__delegate.call(this,x,y,more);};
G__7563.cljs$lang$maxFixedArity = 2;
G__7563.cljs$lang$applyTo = (function (arglist__7565){
var x = cljs.core.first(arglist__7565);
arglist__7565 = cljs.core.next(arglist__7565);
var y = cljs.core.first(arglist__7565);
var more = cljs.core.rest(arglist__7565);
return G__7563__delegate(x,y,more);
});
G__7563.cljs$core$IFn$_invoke$arity$variadic = G__7563__delegate;
return G__7563;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__7566 = null;
if (arguments.length > 2) {
var G__7567__i = 0, G__7567__a = new Array(arguments.length -  2);
while (G__7567__i < G__7567__a.length) {G__7567__a[G__7567__i] = arguments[G__7567__i + 2]; ++G__7567__i;}
G__7566 = new cljs.core.IndexedSeq(G__7567__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__7572__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7572 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7573__i = 0, G__7573__a = new Array(arguments.length -  2);
while (G__7573__i < G__7573__a.length) {G__7573__a[G__7573__i] = arguments[G__7573__i + 2]; ++G__7573__i;}
  more = new cljs.core.IndexedSeq(G__7573__a,0);
} 
return G__7572__delegate.call(this,x,y,more);};
G__7572.cljs$lang$maxFixedArity = 2;
G__7572.cljs$lang$applyTo = (function (arglist__7574){
var x = cljs.core.first(arglist__7574);
arglist__7574 = cljs.core.next(arglist__7574);
var y = cljs.core.first(arglist__7574);
var more = cljs.core.rest(arglist__7574);
return G__7572__delegate(x,y,more);
});
G__7572.cljs$core$IFn$_invoke$arity$variadic = G__7572__delegate;
return G__7572;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__7575 = null;
if (arguments.length > 2) {
var G__7576__i = 0, G__7576__a = new Array(arguments.length -  2);
while (G__7576__i < G__7576__a.length) {G__7576__a[G__7576__i] = arguments[G__7576__i + 2]; ++G__7576__i;}
G__7575 = new cljs.core.IndexedSeq(G__7576__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__7577__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7578 = y;
var G__7579 = cljs.core.first(more);
var G__7580 = cljs.core.next(more);
x = G__7578;
y = G__7579;
more = G__7580;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7577 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7581__i = 0, G__7581__a = new Array(arguments.length -  2);
while (G__7581__i < G__7581__a.length) {G__7581__a[G__7581__i] = arguments[G__7581__i + 2]; ++G__7581__i;}
  more = new cljs.core.IndexedSeq(G__7581__a,0);
} 
return G__7577__delegate.call(this,x,y,more);};
G__7577.cljs$lang$maxFixedArity = 2;
G__7577.cljs$lang$applyTo = (function (arglist__7582){
var x = cljs.core.first(arglist__7582);
arglist__7582 = cljs.core.next(arglist__7582);
var y = cljs.core.first(arglist__7582);
var more = cljs.core.rest(arglist__7582);
return G__7577__delegate(x,y,more);
});
G__7577.cljs$core$IFn$_invoke$arity$variadic = G__7577__delegate;
return G__7577;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__7583 = null;
if (arguments.length > 2) {
var G__7584__i = 0, G__7584__a = new Array(arguments.length -  2);
while (G__7584__i < G__7584__a.length) {G__7584__a[G__7584__i] = arguments[G__7584__i + 2]; ++G__7584__i;}
G__7583 = new cljs.core.IndexedSeq(G__7584__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__7585__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7586 = y;
var G__7587 = cljs.core.first(more);
var G__7588 = cljs.core.next(more);
x = G__7586;
y = G__7587;
more = G__7588;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7585 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7589__i = 0, G__7589__a = new Array(arguments.length -  2);
while (G__7589__i < G__7589__a.length) {G__7589__a[G__7589__i] = arguments[G__7589__i + 2]; ++G__7589__i;}
  more = new cljs.core.IndexedSeq(G__7589__a,0);
} 
return G__7585__delegate.call(this,x,y,more);};
G__7585.cljs$lang$maxFixedArity = 2;
G__7585.cljs$lang$applyTo = (function (arglist__7590){
var x = cljs.core.first(arglist__7590);
arglist__7590 = cljs.core.next(arglist__7590);
var y = cljs.core.first(arglist__7590);
var more = cljs.core.rest(arglist__7590);
return G__7585__delegate(x,y,more);
});
G__7585.cljs$core$IFn$_invoke$arity$variadic = G__7585__delegate;
return G__7585;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__7591 = null;
if (arguments.length > 2) {
var G__7592__i = 0, G__7592__a = new Array(arguments.length -  2);
while (G__7592__i < G__7592__a.length) {G__7592__a[G__7592__i] = arguments[G__7592__i + 2]; ++G__7592__i;}
G__7591 = new cljs.core.IndexedSeq(G__7592__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__7593__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7594 = y;
var G__7595 = cljs.core.first(more);
var G__7596 = cljs.core.next(more);
x = G__7594;
y = G__7595;
more = G__7596;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7593 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7597__i = 0, G__7597__a = new Array(arguments.length -  2);
while (G__7597__i < G__7597__a.length) {G__7597__a[G__7597__i] = arguments[G__7597__i + 2]; ++G__7597__i;}
  more = new cljs.core.IndexedSeq(G__7597__a,0);
} 
return G__7593__delegate.call(this,x,y,more);};
G__7593.cljs$lang$maxFixedArity = 2;
G__7593.cljs$lang$applyTo = (function (arglist__7598){
var x = cljs.core.first(arglist__7598);
arglist__7598 = cljs.core.next(arglist__7598);
var y = cljs.core.first(arglist__7598);
var more = cljs.core.rest(arglist__7598);
return G__7593__delegate(x,y,more);
});
G__7593.cljs$core$IFn$_invoke$arity$variadic = G__7593__delegate;
return G__7593;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__7599 = null;
if (arguments.length > 2) {
var G__7600__i = 0, G__7600__a = new Array(arguments.length -  2);
while (G__7600__i < G__7600__a.length) {G__7600__a[G__7600__i] = arguments[G__7600__i + 2]; ++G__7600__i;}
G__7599 = new cljs.core.IndexedSeq(G__7600__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__7601__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7602 = y;
var G__7603 = cljs.core.first(more);
var G__7604 = cljs.core.next(more);
x = G__7602;
y = G__7603;
more = G__7604;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7601 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7605__i = 0, G__7605__a = new Array(arguments.length -  2);
while (G__7605__i < G__7605__a.length) {G__7605__a[G__7605__i] = arguments[G__7605__i + 2]; ++G__7605__i;}
  more = new cljs.core.IndexedSeq(G__7605__a,0);
} 
return G__7601__delegate.call(this,x,y,more);};
G__7601.cljs$lang$maxFixedArity = 2;
G__7601.cljs$lang$applyTo = (function (arglist__7606){
var x = cljs.core.first(arglist__7606);
arglist__7606 = cljs.core.next(arglist__7606);
var y = cljs.core.first(arglist__7606);
var more = cljs.core.rest(arglist__7606);
return G__7601__delegate(x,y,more);
});
G__7601.cljs$core$IFn$_invoke$arity$variadic = G__7601__delegate;
return G__7601;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__7607 = null;
if (arguments.length > 2) {
var G__7608__i = 0, G__7608__a = new Array(arguments.length -  2);
while (G__7608__i < G__7608__a.length) {G__7608__a[G__7608__i] = arguments[G__7608__i + 2]; ++G__7608__i;}
G__7607 = new cljs.core.IndexedSeq(G__7608__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4928__auto__ = x;
var y__4929__auto__ = y;
return ((x__4928__auto__ > y__4929__auto__) ? x__4928__auto__ : y__4929__auto__);
});
var cljs$core$max__3 = (function() { 
var G__7609__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4928__auto__ = x;
var y__4929__auto__ = y;
return ((x__4928__auto__ > y__4929__auto__) ? x__4928__auto__ : y__4929__auto__);
})(),more);
};
var G__7609 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7610__i = 0, G__7610__a = new Array(arguments.length -  2);
while (G__7610__i < G__7610__a.length) {G__7610__a[G__7610__i] = arguments[G__7610__i + 2]; ++G__7610__i;}
  more = new cljs.core.IndexedSeq(G__7610__a,0);
} 
return G__7609__delegate.call(this,x,y,more);};
G__7609.cljs$lang$maxFixedArity = 2;
G__7609.cljs$lang$applyTo = (function (arglist__7611){
var x = cljs.core.first(arglist__7611);
arglist__7611 = cljs.core.next(arglist__7611);
var y = cljs.core.first(arglist__7611);
var more = cljs.core.rest(arglist__7611);
return G__7609__delegate(x,y,more);
});
G__7609.cljs$core$IFn$_invoke$arity$variadic = G__7609__delegate;
return G__7609;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__7612 = null;
if (arguments.length > 2) {
var G__7613__i = 0, G__7613__a = new Array(arguments.length -  2);
while (G__7613__i < G__7613__a.length) {G__7613__a[G__7613__i] = arguments[G__7613__i + 2]; ++G__7613__i;}
G__7612 = new cljs.core.IndexedSeq(G__7613__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4935__auto__ = x;
var y__4936__auto__ = y;
return ((x__4935__auto__ < y__4936__auto__) ? x__4935__auto__ : y__4936__auto__);
});
var cljs$core$min__3 = (function() { 
var G__7614__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4935__auto__ = x;
var y__4936__auto__ = y;
return ((x__4935__auto__ < y__4936__auto__) ? x__4935__auto__ : y__4936__auto__);
})(),more);
};
var G__7614 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7615__i = 0, G__7615__a = new Array(arguments.length -  2);
while (G__7615__i < G__7615__a.length) {G__7615__a[G__7615__i] = arguments[G__7615__i + 2]; ++G__7615__i;}
  more = new cljs.core.IndexedSeq(G__7615__a,0);
} 
return G__7614__delegate.call(this,x,y,more);};
G__7614.cljs$lang$maxFixedArity = 2;
G__7614.cljs$lang$applyTo = (function (arglist__7616){
var x = cljs.core.first(arglist__7616);
arglist__7616 = cljs.core.next(arglist__7616);
var y = cljs.core.first(arglist__7616);
var more = cljs.core.rest(arglist__7616);
return G__7614__delegate(x,y,more);
});
G__7614.cljs$core$IFn$_invoke$arity$variadic = G__7614__delegate;
return G__7614;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__7617 = null;
if (arguments.length > 2) {
var G__7618__i = 0, G__7618__a = new Array(arguments.length -  2);
while (G__7618__i < G__7618__a.length) {G__7618__a[G__7618__i] = arguments[G__7618__i + 2]; ++G__7618__i;}
G__7617 = new cljs.core.IndexedSeq(G__7618__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__7619__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__7619 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7620__i = 0, G__7620__a = new Array(arguments.length -  2);
while (G__7620__i < G__7620__a.length) {G__7620__a[G__7620__i] = arguments[G__7620__i + 2]; ++G__7620__i;}
  more = new cljs.core.IndexedSeq(G__7620__a,0);
} 
return G__7619__delegate.call(this,x,y,more);};
G__7619.cljs$lang$maxFixedArity = 2;
G__7619.cljs$lang$applyTo = (function (arglist__7621){
var x = cljs.core.first(arglist__7621);
arglist__7621 = cljs.core.next(arglist__7621);
var y = cljs.core.first(arglist__7621);
var more = cljs.core.rest(arglist__7621);
return G__7619__delegate(x,y,more);
});
G__7619.cljs$core$IFn$_invoke$arity$variadic = G__7619__delegate;
return G__7619;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__7622 = null;
if (arguments.length > 2) {
var G__7623__i = 0, G__7623__a = new Array(arguments.length -  2);
while (G__7623__i < G__7623__a.length) {G__7623__a[G__7623__i] = arguments[G__7623__i + 2]; ++G__7623__i;}
G__7622 = new cljs.core.IndexedSeq(G__7623__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__7624__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__7624 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7625__i = 0, G__7625__a = new Array(arguments.length -  2);
while (G__7625__i < G__7625__a.length) {G__7625__a[G__7625__i] = arguments[G__7625__i + 2]; ++G__7625__i;}
  more = new cljs.core.IndexedSeq(G__7625__a,0);
} 
return G__7624__delegate.call(this,x,y,more);};
G__7624.cljs$lang$maxFixedArity = 2;
G__7624.cljs$lang$applyTo = (function (arglist__7626){
var x = cljs.core.first(arglist__7626);
arglist__7626 = cljs.core.next(arglist__7626);
var y = cljs.core.first(arglist__7626);
var more = cljs.core.rest(arglist__7626);
return G__7624__delegate(x,y,more);
});
G__7624.cljs$core$IFn$_invoke$arity$variadic = G__7624__delegate;
return G__7624;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__7627 = null;
if (arguments.length > 2) {
var G__7628__i = 0, G__7628__a = new Array(arguments.length -  2);
while (G__7628__i < G__7628__a.length) {G__7628__a[G__7628__i] = arguments[G__7628__i + 2]; ++G__7628__i;}
G__7627 = new cljs.core.IndexedSeq(G__7628__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__7633__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7633 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7634__i = 0, G__7634__a = new Array(arguments.length -  2);
while (G__7634__i < G__7634__a.length) {G__7634__a[G__7634__i] = arguments[G__7634__i + 2]; ++G__7634__i;}
  more = new cljs.core.IndexedSeq(G__7634__a,0);
} 
return G__7633__delegate.call(this,x,y,more);};
G__7633.cljs$lang$maxFixedArity = 2;
G__7633.cljs$lang$applyTo = (function (arglist__7635){
var x = cljs.core.first(arglist__7635);
arglist__7635 = cljs.core.next(arglist__7635);
var y = cljs.core.first(arglist__7635);
var more = cljs.core.rest(arglist__7635);
return G__7633__delegate(x,y,more);
});
G__7633.cljs$core$IFn$_invoke$arity$variadic = G__7633__delegate;
return G__7633;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__7636 = null;
if (arguments.length > 2) {
var G__7637__i = 0, G__7637__a = new Array(arguments.length -  2);
while (G__7637__i < G__7637__a.length) {G__7637__a[G__7637__i] = arguments[G__7637__i + 2]; ++G__7637__i;}
G__7636 = new cljs.core.IndexedSeq(G__7637__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__7638__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__7638 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7639__i = 0, G__7639__a = new Array(arguments.length -  2);
while (G__7639__i < G__7639__a.length) {G__7639__a[G__7639__i] = arguments[G__7639__i + 2]; ++G__7639__i;}
  more = new cljs.core.IndexedSeq(G__7639__a,0);
} 
return G__7638__delegate.call(this,x,y,more);};
G__7638.cljs$lang$maxFixedArity = 2;
G__7638.cljs$lang$applyTo = (function (arglist__7640){
var x = cljs.core.first(arglist__7640);
arglist__7640 = cljs.core.next(arglist__7640);
var y = cljs.core.first(arglist__7640);
var more = cljs.core.rest(arglist__7640);
return G__7638__delegate(x,y,more);
});
G__7638.cljs$core$IFn$_invoke$arity$variadic = G__7638__delegate;
return G__7638;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__7641 = null;
if (arguments.length > 2) {
var G__7642__i = 0, G__7642__a = new Array(arguments.length -  2);
while (G__7642__i < G__7642__a.length) {G__7642__a[G__7642__i] = arguments[G__7642__i + 2]; ++G__7642__i;}
G__7641 = new cljs.core.IndexedSeq(G__7642__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__7643__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__7643 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7644__i = 0, G__7644__a = new Array(arguments.length -  2);
while (G__7644__i < G__7644__a.length) {G__7644__a[G__7644__i] = arguments[G__7644__i + 2]; ++G__7644__i;}
  more = new cljs.core.IndexedSeq(G__7644__a,0);
} 
return G__7643__delegate.call(this,x,y,more);};
G__7643.cljs$lang$maxFixedArity = 2;
G__7643.cljs$lang$applyTo = (function (arglist__7645){
var x = cljs.core.first(arglist__7645);
arglist__7645 = cljs.core.next(arglist__7645);
var y = cljs.core.first(arglist__7645);
var more = cljs.core.rest(arglist__7645);
return G__7643__delegate(x,y,more);
});
G__7643.cljs$core$IFn$_invoke$arity$variadic = G__7643__delegate;
return G__7643;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__7646 = null;
if (arguments.length > 2) {
var G__7647__i = 0, G__7647__a = new Array(arguments.length -  2);
while (G__7647__i < G__7647__a.length) {G__7647__a[G__7647__i] = arguments[G__7647__i + 2]; ++G__7647__i;}
G__7646 = new cljs.core.IndexedSeq(G__7647__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__7650 = x;
var G__7651 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7650,G__7651) : cljs.core.mod.call(null,G__7650,G__7651));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__7652__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__7652 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7653__i = 0, G__7653__a = new Array(arguments.length -  2);
while (G__7653__i < G__7653__a.length) {G__7653__a[G__7653__i] = arguments[G__7653__i + 2]; ++G__7653__i;}
  more = new cljs.core.IndexedSeq(G__7653__a,0);
} 
return G__7652__delegate.call(this,x,y,more);};
G__7652.cljs$lang$maxFixedArity = 2;
G__7652.cljs$lang$applyTo = (function (arglist__7654){
var x = cljs.core.first(arglist__7654);
arglist__7654 = cljs.core.next(arglist__7654);
var y = cljs.core.first(arglist__7654);
var more = cljs.core.rest(arglist__7654);
return G__7652__delegate(x,y,more);
});
G__7652.cljs$core$IFn$_invoke$arity$variadic = G__7652__delegate;
return G__7652;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__7655 = null;
if (arguments.length > 2) {
var G__7656__i = 0, G__7656__a = new Array(arguments.length -  2);
while (G__7656__i < G__7656__a.length) {G__7656__a[G__7656__i] = arguments[G__7656__i + 2]; ++G__7656__i;}
G__7655 = new cljs.core.IndexedSeq(G__7656__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__7657__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__7657 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7658__i = 0, G__7658__a = new Array(arguments.length -  2);
while (G__7658__i < G__7658__a.length) {G__7658__a[G__7658__i] = arguments[G__7658__i + 2]; ++G__7658__i;}
  more = new cljs.core.IndexedSeq(G__7658__a,0);
} 
return G__7657__delegate.call(this,x,y,more);};
G__7657.cljs$lang$maxFixedArity = 2;
G__7657.cljs$lang$applyTo = (function (arglist__7659){
var x = cljs.core.first(arglist__7659);
arglist__7659 = cljs.core.next(arglist__7659);
var y = cljs.core.first(arglist__7659);
var more = cljs.core.rest(arglist__7659);
return G__7657__delegate(x,y,more);
});
G__7657.cljs$core$IFn$_invoke$arity$variadic = G__7657__delegate;
return G__7657;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__7660 = null;
if (arguments.length > 2) {
var G__7661__i = 0, G__7661__a = new Array(arguments.length -  2);
while (G__7661__i < G__7661__a.length) {G__7661__a[G__7661__i] = arguments[G__7661__i + 2]; ++G__7661__i;}
G__7660 = new cljs.core.IndexedSeq(G__7661__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__7664 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7664) : Math.floor.call(null,G__7664));
} else {
var G__7665 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7665) : Math.ceil.call(null,G__7665));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__7666__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__7666 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7667__i = 0, G__7667__a = new Array(arguments.length -  2);
while (G__7667__i < G__7667__a.length) {G__7667__a[G__7667__i] = arguments[G__7667__i + 2]; ++G__7667__i;}
  more = new cljs.core.IndexedSeq(G__7667__a,0);
} 
return G__7666__delegate.call(this,x,y,more);};
G__7666.cljs$lang$maxFixedArity = 2;
G__7666.cljs$lang$applyTo = (function (arglist__7668){
var x = cljs.core.first(arglist__7668);
arglist__7668 = cljs.core.next(arglist__7668);
var y = cljs.core.first(arglist__7668);
var more = cljs.core.rest(arglist__7668);
return G__7666__delegate(x,y,more);
});
G__7666.cljs$core$IFn$_invoke$arity$variadic = G__7666__delegate;
return G__7666;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__7669 = null;
if (arguments.length > 2) {
var G__7670__i = 0, G__7670__a = new Array(arguments.length -  2);
while (G__7670__i < G__7670__a.length) {G__7670__a[G__7670__i] = arguments[G__7670__i + 2]; ++G__7670__i;}
G__7669 = new cljs.core.IndexedSeq(G__7670__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7669);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__7671__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__7671 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7672__i = 0, G__7672__a = new Array(arguments.length -  2);
while (G__7672__i < G__7672__a.length) {G__7672__a[G__7672__i] = arguments[G__7672__i + 2]; ++G__7672__i;}
  more = new cljs.core.IndexedSeq(G__7672__a,0);
} 
return G__7671__delegate.call(this,x,y,more);};
G__7671.cljs$lang$maxFixedArity = 2;
G__7671.cljs$lang$applyTo = (function (arglist__7673){
var x = cljs.core.first(arglist__7673);
arglist__7673 = cljs.core.next(arglist__7673);
var y = cljs.core.first(arglist__7673);
var more = cljs.core.rest(arglist__7673);
return G__7671__delegate(x,y,more);
});
G__7671.cljs$core$IFn$_invoke$arity$variadic = G__7671__delegate;
return G__7671;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__7674 = null;
if (arguments.length > 2) {
var G__7675__i = 0, G__7675__a = new Array(arguments.length -  2);
while (G__7675__i < G__7675__a.length) {G__7675__a[G__7675__i] = arguments[G__7675__i + 2]; ++G__7675__i;}
G__7674 = new cljs.core.IndexedSeq(G__7675__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__7676__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__7676 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7677__i = 0, G__7677__a = new Array(arguments.length -  2);
while (G__7677__i < G__7677__a.length) {G__7677__a[G__7677__i] = arguments[G__7677__i + 2]; ++G__7677__i;}
  more = new cljs.core.IndexedSeq(G__7677__a,0);
} 
return G__7676__delegate.call(this,x,y,more);};
G__7676.cljs$lang$maxFixedArity = 2;
G__7676.cljs$lang$applyTo = (function (arglist__7678){
var x = cljs.core.first(arglist__7678);
arglist__7678 = cljs.core.next(arglist__7678);
var y = cljs.core.first(arglist__7678);
var more = cljs.core.rest(arglist__7678);
return G__7676__delegate(x,y,more);
});
G__7676.cljs$core$IFn$_invoke$arity$variadic = G__7676__delegate;
return G__7676;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__7679 = null;
if (arguments.length > 2) {
var G__7680__i = 0, G__7680__a = new Array(arguments.length -  2);
while (G__7680__i < G__7680__a.length) {G__7680__a[G__7680__i] = arguments[G__7680__i + 2]; ++G__7680__i;}
G__7679 = new cljs.core.IndexedSeq(G__7680__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__7681__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__7681 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7682__i = 0, G__7682__a = new Array(arguments.length -  2);
while (G__7682__i < G__7682__a.length) {G__7682__a[G__7682__i] = arguments[G__7682__i + 2]; ++G__7682__i;}
  more = new cljs.core.IndexedSeq(G__7682__a,0);
} 
return G__7681__delegate.call(this,x,y,more);};
G__7681.cljs$lang$maxFixedArity = 2;
G__7681.cljs$lang$applyTo = (function (arglist__7683){
var x = cljs.core.first(arglist__7683);
arglist__7683 = cljs.core.next(arglist__7683);
var y = cljs.core.first(arglist__7683);
var more = cljs.core.rest(arglist__7683);
return G__7681__delegate(x,y,more);
});
G__7681.cljs$core$IFn$_invoke$arity$variadic = G__7681__delegate;
return G__7681;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__7684 = null;
if (arguments.length > 2) {
var G__7685__i = 0, G__7685__a = new Array(arguments.length -  2);
while (G__7685__i < G__7685__a.length) {G__7685__a[G__7685__i] = arguments[G__7685__i + 2]; ++G__7685__i;}
G__7684 = new cljs.core.IndexedSeq(G__7685__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__7690__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7691 = y;
var G__7692 = cljs.core.first(more);
var G__7693 = cljs.core.next(more);
x = G__7691;
y = G__7692;
more = G__7693;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7690 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7694__i = 0, G__7694__a = new Array(arguments.length -  2);
while (G__7694__i < G__7694__a.length) {G__7694__a[G__7694__i] = arguments[G__7694__i + 2]; ++G__7694__i;}
  more = new cljs.core.IndexedSeq(G__7694__a,0);
} 
return G__7690__delegate.call(this,x,y,more);};
G__7690.cljs$lang$maxFixedArity = 2;
G__7690.cljs$lang$applyTo = (function (arglist__7695){
var x = cljs.core.first(arglist__7695);
arglist__7695 = cljs.core.next(arglist__7695);
var y = cljs.core.first(arglist__7695);
var more = cljs.core.rest(arglist__7695);
return G__7690__delegate(x,y,more);
});
G__7690.cljs$core$IFn$_invoke$arity$variadic = G__7690__delegate;
return G__7690;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__7696 = null;
if (arguments.length > 2) {
var G__7697__i = 0, G__7697__a = new Array(arguments.length -  2);
while (G__7697__i < G__7697__a.length) {G__7697__a[G__7697__i] = arguments[G__7697__i + 2]; ++G__7697__i;}
G__7696 = new cljs.core.IndexedSeq(G__7697__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7698 = (n__$1 - (1));
var G__7699 = cljs.core.next(xs);
n__$1 = G__7698;
xs = G__7699;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7703 = x;
return goog.string.buildString(G__7703);
}
});
var cljs$core$str__2 = (function() { 
var G__7704__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7705 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7706 = cljs.core.next(more);
sb = G__7705;
more = G__7706;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7704 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7707__i = 0, G__7707__a = new Array(arguments.length -  1);
while (G__7707__i < G__7707__a.length) {G__7707__a[G__7707__i] = arguments[G__7707__i + 1]; ++G__7707__i;}
  ys = new cljs.core.IndexedSeq(G__7707__a,0);
} 
return G__7704__delegate.call(this,x,ys);};
G__7704.cljs$lang$maxFixedArity = 1;
G__7704.cljs$lang$applyTo = (function (arglist__7708){
var x = cljs.core.first(arglist__7708);
var ys = cljs.core.rest(arglist__7708);
return G__7704__delegate(x,ys);
});
G__7704.cljs$core$IFn$_invoke$arity$variadic = G__7704__delegate;
return G__7704;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__7709 = null;
if (arguments.length > 1) {
var G__7710__i = 0, G__7710__a = new Array(arguments.length -  1);
while (G__7710__i < G__7710__a.length) {G__7710__a[G__7710__i] = arguments[G__7710__i + 1]; ++G__7710__i;}
G__7709 = new cljs.core.IndexedSeq(G__7710__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7711 = cljs.core.next(xs);
var G__7712 = cljs.core.next(ys);
xs = G__7711;
ys = G__7712;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7713 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7714 = cljs.core.next(s);
res = G__7713;
s = G__7714;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7719 = ((h + (cljs.core.hash((function (){var G__7717 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7717) : cljs.core.key.call(null,G__7717));
})()) ^ cljs.core.hash((function (){var G__7718 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7718) : cljs.core.val.call(null,G__7718));
})()))) % (4503599627370496));
var G__7720 = cljs.core.next(s);
h = G__7719;
s = G__7720;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7721 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7722 = cljs.core.next(s__$1);
h = G__7721;
s__$1 = G__7722;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__7733_7743 = cljs.core.seq(fn_map);
var chunk__7734_7744 = null;
var count__7735_7745 = (0);
var i__7736_7746 = (0);
while(true){
if((i__7736_7746 < count__7735_7745)){
var vec__7737_7747 = chunk__7734_7744.cljs$core$IIndexed$_nth$arity$2(null,i__7736_7746);
var key_name_7748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7737_7747,(0),null);
var f_7749 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7737_7747,(1),null);
var str_name_7750 = (function (){var G__7738 = key_name_7748;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7738) : cljs.core.name.call(null,G__7738));
})();
(obj[str_name_7750] = f_7749);

var G__7751 = seq__7733_7743;
var G__7752 = chunk__7734_7744;
var G__7753 = count__7735_7745;
var G__7754 = (i__7736_7746 + (1));
seq__7733_7743 = G__7751;
chunk__7734_7744 = G__7752;
count__7735_7745 = G__7753;
i__7736_7746 = G__7754;
continue;
} else {
var temp__4126__auto___7755 = cljs.core.seq(seq__7733_7743);
if(temp__4126__auto___7755){
var seq__7733_7756__$1 = temp__4126__auto___7755;
if(cljs.core.chunked_seq_QMARK_(seq__7733_7756__$1)){
var c__5401__auto___7757 = (function (){var G__7739 = seq__7733_7756__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7739) : cljs.core.chunk_first.call(null,G__7739));
})();
var G__7758 = (function (){var G__7740 = seq__7733_7756__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7740) : cljs.core.chunk_rest.call(null,G__7740));
})();
var G__7759 = c__5401__auto___7757;
var G__7760 = cljs.core.count(c__5401__auto___7757);
var G__7761 = (0);
seq__7733_7743 = G__7758;
chunk__7734_7744 = G__7759;
count__7735_7745 = G__7760;
i__7736_7746 = G__7761;
continue;
} else {
var vec__7741_7762 = cljs.core.first(seq__7733_7756__$1);
var key_name_7763 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7741_7762,(0),null);
var f_7764 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7741_7762,(1),null);
var str_name_7765 = (function (){var G__7742 = key_name_7763;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7742) : cljs.core.name.call(null,G__7742));
})();
(obj[str_name_7765] = f_7764);

var G__7766 = cljs.core.next(seq__7733_7756__$1);
var G__7767 = null;
var G__7768 = (0);
var G__7769 = (0);
seq__7733_7743 = G__7766;
chunk__7734_7744 = G__7767;
count__7735_7745 = G__7768;
i__7736_7746 = G__7769;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__7771 = coll;
if(G__7771){
var bit__5290__auto__ = (G__7771.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__5290__auto__) || (G__7771.cljs$core$IReversible$)){
return true;
} else {
if((!G__7771.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7771);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7771);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7772 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7772;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7773 = (i - (1));
var G__7774 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7773;
r = G__7774;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7775__i = 0, G__7775__a = new Array(arguments.length -  0);
while (G__7775__i < G__7775__a.length) {G__7775__a[G__7775__i] = arguments[G__7775__i + 0]; ++G__7775__i;}
  xs = new cljs.core.IndexedSeq(G__7775__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__7776){
var xs = cljs.core.seq(arglist__7776);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__4616__auto__ = (coll == null);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var G__7780 = coll;
if(G__7780){
var bit__5283__auto__ = (G__7780.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__5283__auto__) || (G__7780.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__7782 = x;
if(G__7782){
var bit__5290__auto__ = (G__7782.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__5290__auto__) || (G__7782.cljs$core$IList$)){
return true;
} else {
if((!G__7782.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7782);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7782);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__4604__auto__ = cljs.core.not(a.ns);
if(and__4604__auto__){
return b.ns;
} else {
return and__4604__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7789 = a.ns;
var G__7790 = b.ns;
return goog.array.defaultCompare(G__7789,G__7790);
})();
if(((0) === nsc)){
var G__7791 = a.name;
var G__7792 = b.name;
return goog.array.defaultCompare(G__7791,G__7792);
} else {
return nsc;
}
}
} else {
var G__7793 = a.name;
var G__7794 = b.name;
return goog.array.defaultCompare(G__7793,G__7794);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__5032__auto__ = self__._hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7796 = null;
var G__7796__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7796__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7796 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7796__2.call(this,self__,coll);
case 3:
return G__7796__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7796.cljs$core$IFn$_invoke$arity$2 = G__7796__2;
G__7796.cljs$core$IFn$_invoke$arity$3 = G__7796__3;
return G__7796;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7795){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7795)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__7798 = x;
if(G__7798){
var bit__5283__auto__ = (G__7798.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__5283__auto__) || (G__7798.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7800 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7800) : cljs.core.name.call(null,G__7800));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7801 = ls.sval();
ls = G__7801;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__7803 = s;
if(G__7803){
var bit__5283__auto__ = (G__7803.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__5283__auto__) || (G__7803.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7804 = cljs.core.next(s__$1);
s__$1 = G__7804;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7805 = (0);
var xs_7806 = cljs.core.seq(coll);
while(true){
if(xs_7806){
(ret[i_7805] = cljs.core.to_array(cljs.core.first(xs_7806)));

var G__7807 = (i_7805 + (1));
var G__7808 = cljs.core.next(xs_7806);
i_7805 = G__7807;
xs_7806 = G__7808;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7811 = (i + (1));
var G__7812 = cljs.core.next(s__$1);
i = G__7811;
s__$1 = G__7812;
continue;
} else {
return a;
}
break;
}
} else {
var n__5501__auto___7813 = size;
var i_7814 = (0);
while(true){
if((i_7814 < n__5501__auto___7813)){
(a[i_7814] = init_val_or_seq);

var G__7815 = (i_7814 + (1));
i_7814 = G__7815;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7818 = (i + (1));
var G__7819 = cljs.core.next(s__$1);
i = G__7818;
s__$1 = G__7819;
continue;
} else {
return a;
}
break;
}
} else {
var n__5501__auto___7820 = size;
var i_7821 = (0);
while(true){
if((i_7821 < n__5501__auto___7820)){
(a[i_7821] = init_val_or_seq);

var G__7822 = (i_7821 + (1));
i_7821 = G__7822;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7825 = (i + (1));
var G__7826 = cljs.core.next(s__$1);
i = G__7825;
s__$1 = G__7826;
continue;
} else {
return a;
}
break;
}
} else {
var n__5501__auto___7827 = size;
var i_7828 = (0);
while(true){
if((i_7828 < n__5501__auto___7827)){
(a[i_7828] = init_val_or_seq);

var G__7829 = (i_7828 + (1));
i_7828 = G__7829;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7832 = (i + (1));
var G__7833 = cljs.core.next(s__$1);
i = G__7832;
s__$1 = G__7833;
continue;
} else {
return a;
}
break;
}
} else {
var n__5501__auto___7834 = size;
var i_7835 = (0);
while(true){
if((i_7835 < n__5501__auto___7834)){
(a[i_7835] = init_val_or_seq);

var G__7836 = (i_7835 + (1));
i_7835 = G__7836;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7837 = cljs.core.next(s__$1);
var G__7838 = (i - (1));
var G__7839 = (sum + (1));
s__$1 = G__7837;
i = G__7838;
sum = G__7839;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__7859__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7859 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7860__i = 0, G__7860__a = new Array(arguments.length -  2);
while (G__7860__i < G__7860__a.length) {G__7860__a[G__7860__i] = arguments[G__7860__i + 2]; ++G__7860__i;}
  zs = new cljs.core.IndexedSeq(G__7860__a,0);
} 
return G__7859__delegate.call(this,x,y,zs);};
G__7859.cljs$lang$maxFixedArity = 2;
G__7859.cljs$lang$applyTo = (function (arglist__7861){
var x = cljs.core.first(arglist__7861);
arglist__7861 = cljs.core.next(arglist__7861);
var y = cljs.core.first(arglist__7861);
var zs = cljs.core.rest(arglist__7861);
return G__7859__delegate(x,y,zs);
});
G__7859.cljs$core$IFn$_invoke$arity$variadic = G__7859__delegate;
return G__7859;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__7862 = null;
if (arguments.length > 2) {
var G__7863__i = 0, G__7863__a = new Array(arguments.length -  2);
while (G__7863__i < G__7863__a.length) {G__7863__a[G__7863__i] = arguments[G__7863__i + 2]; ++G__7863__i;}
G__7862 = new cljs.core.IndexedSeq(G__7863__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__7864__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7864 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7865__i = 0, G__7865__a = new Array(arguments.length -  4);
while (G__7865__i < G__7865__a.length) {G__7865__a[G__7865__i] = arguments[G__7865__i + 4]; ++G__7865__i;}
  more = new cljs.core.IndexedSeq(G__7865__a,0);
} 
return G__7864__delegate.call(this,a,b,c,d,more);};
G__7864.cljs$lang$maxFixedArity = 4;
G__7864.cljs$lang$applyTo = (function (arglist__7866){
var a = cljs.core.first(arglist__7866);
arglist__7866 = cljs.core.next(arglist__7866);
var b = cljs.core.first(arglist__7866);
arglist__7866 = cljs.core.next(arglist__7866);
var c = cljs.core.first(arglist__7866);
arglist__7866 = cljs.core.next(arglist__7866);
var d = cljs.core.first(arglist__7866);
var more = cljs.core.rest(arglist__7866);
return G__7864__delegate(a,b,c,d,more);
});
G__7864.cljs$core$IFn$_invoke$arity$variadic = G__7864__delegate;
return G__7864;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__7867 = null;
if (arguments.length > 4) {
var G__7868__i = 0, G__7868__a = new Array(arguments.length -  4);
while (G__7868__i < G__7868__a.length) {G__7868__a[G__7868__i] = arguments[G__7868__i + 4]; ++G__7868__i;}
G__7867 = new cljs.core.IndexedSeq(G__7868__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7867);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__7869__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7870 = ntcoll;
var G__7871 = cljs.core.first(vals);
var G__7872 = cljs.core.next(vals);
tcoll = G__7870;
val = G__7871;
vals = G__7872;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7869 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7873__i = 0, G__7873__a = new Array(arguments.length -  2);
while (G__7873__i < G__7873__a.length) {G__7873__a[G__7873__i] = arguments[G__7873__i + 2]; ++G__7873__i;}
  vals = new cljs.core.IndexedSeq(G__7873__a,0);
} 
return G__7869__delegate.call(this,tcoll,val,vals);};
G__7869.cljs$lang$maxFixedArity = 2;
G__7869.cljs$lang$applyTo = (function (arglist__7874){
var tcoll = cljs.core.first(arglist__7874);
arglist__7874 = cljs.core.next(arglist__7874);
var val = cljs.core.first(arglist__7874);
var vals = cljs.core.rest(arglist__7874);
return G__7869__delegate(tcoll,val,vals);
});
G__7869.cljs$core$IFn$_invoke$arity$variadic = G__7869__delegate;
return G__7869;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__7875 = null;
if (arguments.length > 2) {
var G__7876__i = 0, G__7876__a = new Array(arguments.length -  2);
while (G__7876__i < G__7876__a.length) {G__7876__a[G__7876__i] = arguments[G__7876__i + 2]; ++G__7876__i;}
G__7875 = new cljs.core.IndexedSeq(G__7876__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__7877__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7878 = ntcoll;
var G__7879 = cljs.core.first(kvs);
var G__7880 = cljs.core.second(kvs);
var G__7881 = cljs.core.nnext(kvs);
tcoll = G__7878;
key = G__7879;
val = G__7880;
kvs = G__7881;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7877 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7882__i = 0, G__7882__a = new Array(arguments.length -  3);
while (G__7882__i < G__7882__a.length) {G__7882__a[G__7882__i] = arguments[G__7882__i + 3]; ++G__7882__i;}
  kvs = new cljs.core.IndexedSeq(G__7882__a,0);
} 
return G__7877__delegate.call(this,tcoll,key,val,kvs);};
G__7877.cljs$lang$maxFixedArity = 3;
G__7877.cljs$lang$applyTo = (function (arglist__7883){
var tcoll = cljs.core.first(arglist__7883);
arglist__7883 = cljs.core.next(arglist__7883);
var key = cljs.core.first(arglist__7883);
arglist__7883 = cljs.core.next(arglist__7883);
var val = cljs.core.first(arglist__7883);
var kvs = cljs.core.rest(arglist__7883);
return G__7877__delegate(tcoll,key,val,kvs);
});
G__7877.cljs$core$IFn$_invoke$arity$variadic = G__7877__delegate;
return G__7877;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7884 = null;
if (arguments.length > 3) {
var G__7885__i = 0, G__7885__a = new Array(arguments.length -  3);
while (G__7885__i < G__7885__a.length) {G__7885__a[G__7885__i] = arguments[G__7885__i + 3]; ++G__7885__i;}
G__7884 = new cljs.core.IndexedSeq(G__7885__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__7886__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7887 = ntcoll;
var G__7888 = cljs.core.first(ks);
var G__7889 = cljs.core.next(ks);
tcoll = G__7887;
key = G__7888;
ks = G__7889;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7886 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7890__i = 0, G__7890__a = new Array(arguments.length -  2);
while (G__7890__i < G__7890__a.length) {G__7890__a[G__7890__i] = arguments[G__7890__i + 2]; ++G__7890__i;}
  ks = new cljs.core.IndexedSeq(G__7890__a,0);
} 
return G__7886__delegate.call(this,tcoll,key,ks);};
G__7886.cljs$lang$maxFixedArity = 2;
G__7886.cljs$lang$applyTo = (function (arglist__7891){
var tcoll = cljs.core.first(arglist__7891);
arglist__7891 = cljs.core.next(arglist__7891);
var key = cljs.core.first(arglist__7891);
var ks = cljs.core.rest(arglist__7891);
return G__7886__delegate(tcoll,key,ks);
});
G__7886.cljs$core$IFn$_invoke$arity$variadic = G__7886__delegate;
return G__7886;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7892 = null;
if (arguments.length > 2) {
var G__7893__i = 0, G__7893__a = new Array(arguments.length -  2);
while (G__7893__i < G__7893__a.length) {G__7893__a[G__7893__i] = arguments[G__7893__i + 2]; ++G__7893__i;}
G__7892 = new cljs.core.IndexedSeq(G__7893__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__7894__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7895 = ntcoll;
var G__7896 = cljs.core.first(vals);
var G__7897 = cljs.core.next(vals);
tcoll = G__7895;
val = G__7896;
vals = G__7897;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7894 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7898__i = 0, G__7898__a = new Array(arguments.length -  2);
while (G__7898__i < G__7898__a.length) {G__7898__a[G__7898__i] = arguments[G__7898__i + 2]; ++G__7898__i;}
  vals = new cljs.core.IndexedSeq(G__7898__a,0);
} 
return G__7894__delegate.call(this,tcoll,val,vals);};
G__7894.cljs$lang$maxFixedArity = 2;
G__7894.cljs$lang$applyTo = (function (arglist__7899){
var tcoll = cljs.core.first(arglist__7899);
arglist__7899 = cljs.core.next(arglist__7899);
var val = cljs.core.first(arglist__7899);
var vals = cljs.core.rest(arglist__7899);
return G__7894__delegate(tcoll,val,vals);
});
G__7894.cljs$core$IFn$_invoke$arity$variadic = G__7894__delegate;
return G__7894;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__7900 = null;
if (arguments.length > 2) {
var G__7901__i = 0, G__7901__a = new Array(arguments.length -  2);
while (G__7901__i < G__7901__a.length) {G__7901__a[G__7901__i] = arguments[G__7901__i + 2]; ++G__7901__i;}
G__7900 = new cljs.core.IndexedSeq(G__7901__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a5545 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a5545);
} else {
var G__8112 = a5545;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8112) : f.call(null,G__8112));
}
} else {
var b5546 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a5545,b5546);
} else {
var G__8113 = a5545;
var G__8114 = b5546;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8113,G__8114) : f.call(null,G__8113,G__8114));
}
} else {
var c5547 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a5545,b5546,c5547);
} else {
var G__8115 = a5545;
var G__8116 = b5546;
var G__8117 = c5547;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8115,G__8116,G__8117) : f.call(null,G__8115,G__8116,G__8117));
}
} else {
var d5548 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a5545,b5546,c5547,d5548);
} else {
var G__8118 = a5545;
var G__8119 = b5546;
var G__8120 = c5547;
var G__8121 = d5548;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8118,G__8119,G__8120,G__8121) : f.call(null,G__8118,G__8119,G__8120,G__8121));
}
} else {
var e5549 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a5545,b5546,c5547,d5548,e5549);
} else {
var G__8122 = a5545;
var G__8123 = b5546;
var G__8124 = c5547;
var G__8125 = d5548;
var G__8126 = e5549;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8122,G__8123,G__8124,G__8125,G__8126) : f.call(null,G__8122,G__8123,G__8124,G__8125,G__8126));
}
} else {
var f5550 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a5545,b5546,c5547,d5548,e5549,f5550);
} else {
var G__8127 = a5545;
var G__8128 = b5546;
var G__8129 = c5547;
var G__8130 = d5548;
var G__8131 = e5549;
var G__8132 = f5550;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8127,G__8128,G__8129,G__8130,G__8131,G__8132) : f.call(null,G__8127,G__8128,G__8129,G__8130,G__8131,G__8132));
}
} else {
var g5551 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a5545,b5546,c5547,d5548,e5549,f5550,g5551);
} else {
var G__8133 = a5545;
var G__8134 = b5546;
var G__8135 = c5547;
var G__8136 = d5548;
var G__8137 = e5549;
var G__8138 = f5550;
var G__8139 = g5551;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139) : f.call(null,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139));
}
} else {
var h5552 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552);
} else {
var G__8140 = a5545;
var G__8141 = b5546;
var G__8142 = c5547;
var G__8143 = d5548;
var G__8144 = e5549;
var G__8145 = f5550;
var G__8146 = g5551;
var G__8147 = h5552;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147) : f.call(null,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147));
}
} else {
var i5553 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553);
} else {
var G__8148 = a5545;
var G__8149 = b5546;
var G__8150 = c5547;
var G__8151 = d5548;
var G__8152 = e5549;
var G__8153 = f5550;
var G__8154 = g5551;
var G__8155 = h5552;
var G__8156 = i5553;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156) : f.call(null,G__8148,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156));
}
} else {
var j5554 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554);
} else {
var G__8157 = a5545;
var G__8158 = b5546;
var G__8159 = c5547;
var G__8160 = d5548;
var G__8161 = e5549;
var G__8162 = f5550;
var G__8163 = g5551;
var G__8164 = h5552;
var G__8165 = i5553;
var G__8166 = j5554;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166) : f.call(null,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166));
}
} else {
var k5555 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555);
} else {
var G__8167 = a5545;
var G__8168 = b5546;
var G__8169 = c5547;
var G__8170 = d5548;
var G__8171 = e5549;
var G__8172 = f5550;
var G__8173 = g5551;
var G__8174 = h5552;
var G__8175 = i5553;
var G__8176 = j5554;
var G__8177 = k5555;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8167,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177) : f.call(null,G__8167,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177));
}
} else {
var l5556 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556);
} else {
var G__8178 = a5545;
var G__8179 = b5546;
var G__8180 = c5547;
var G__8181 = d5548;
var G__8182 = e5549;
var G__8183 = f5550;
var G__8184 = g5551;
var G__8185 = h5552;
var G__8186 = i5553;
var G__8187 = j5554;
var G__8188 = k5555;
var G__8189 = l5556;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189) : f.call(null,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187,G__8188,G__8189));
}
} else {
var m5557 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557);
} else {
var G__8190 = a5545;
var G__8191 = b5546;
var G__8192 = c5547;
var G__8193 = d5548;
var G__8194 = e5549;
var G__8195 = f5550;
var G__8196 = g5551;
var G__8197 = h5552;
var G__8198 = i5553;
var G__8199 = j5554;
var G__8200 = k5555;
var G__8201 = l5556;
var G__8202 = m5557;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202) : f.call(null,G__8190,G__8191,G__8192,G__8193,G__8194,G__8195,G__8196,G__8197,G__8198,G__8199,G__8200,G__8201,G__8202));
}
} else {
var n5558 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558);
} else {
var G__8203 = a5545;
var G__8204 = b5546;
var G__8205 = c5547;
var G__8206 = d5548;
var G__8207 = e5549;
var G__8208 = f5550;
var G__8209 = g5551;
var G__8210 = h5552;
var G__8211 = i5553;
var G__8212 = j5554;
var G__8213 = k5555;
var G__8214 = l5556;
var G__8215 = m5557;
var G__8216 = n5558;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216) : f.call(null,G__8203,G__8204,G__8205,G__8206,G__8207,G__8208,G__8209,G__8210,G__8211,G__8212,G__8213,G__8214,G__8215,G__8216));
}
} else {
var o5559 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558,o5559);
} else {
var G__8217 = a5545;
var G__8218 = b5546;
var G__8219 = c5547;
var G__8220 = d5548;
var G__8221 = e5549;
var G__8222 = f5550;
var G__8223 = g5551;
var G__8224 = h5552;
var G__8225 = i5553;
var G__8226 = j5554;
var G__8227 = k5555;
var G__8228 = l5556;
var G__8229 = m5557;
var G__8230 = n5558;
var G__8231 = o5559;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231) : f.call(null,G__8217,G__8218,G__8219,G__8220,G__8221,G__8222,G__8223,G__8224,G__8225,G__8226,G__8227,G__8228,G__8229,G__8230,G__8231));
}
} else {
var p5560 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558,o5559,p5560);
} else {
var G__8232 = a5545;
var G__8233 = b5546;
var G__8234 = c5547;
var G__8235 = d5548;
var G__8236 = e5549;
var G__8237 = f5550;
var G__8238 = g5551;
var G__8239 = h5552;
var G__8240 = i5553;
var G__8241 = j5554;
var G__8242 = k5555;
var G__8243 = l5556;
var G__8244 = m5557;
var G__8245 = n5558;
var G__8246 = o5559;
var G__8247 = p5560;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8232,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246,G__8247) : f.call(null,G__8232,G__8233,G__8234,G__8235,G__8236,G__8237,G__8238,G__8239,G__8240,G__8241,G__8242,G__8243,G__8244,G__8245,G__8246,G__8247));
}
} else {
var q5561 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558,o5559,p5560,q5561);
} else {
var G__8248 = a5545;
var G__8249 = b5546;
var G__8250 = c5547;
var G__8251 = d5548;
var G__8252 = e5549;
var G__8253 = f5550;
var G__8254 = g5551;
var G__8255 = h5552;
var G__8256 = i5553;
var G__8257 = j5554;
var G__8258 = k5555;
var G__8259 = l5556;
var G__8260 = m5557;
var G__8261 = n5558;
var G__8262 = o5559;
var G__8263 = p5560;
var G__8264 = q5561;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261,G__8262,G__8263,G__8264) : f.call(null,G__8248,G__8249,G__8250,G__8251,G__8252,G__8253,G__8254,G__8255,G__8256,G__8257,G__8258,G__8259,G__8260,G__8261,G__8262,G__8263,G__8264));
}
} else {
var r5562 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558,o5559,p5560,q5561,r5562);
} else {
var G__8265 = a5545;
var G__8266 = b5546;
var G__8267 = c5547;
var G__8268 = d5548;
var G__8269 = e5549;
var G__8270 = f5550;
var G__8271 = g5551;
var G__8272 = h5552;
var G__8273 = i5553;
var G__8274 = j5554;
var G__8275 = k5555;
var G__8276 = l5556;
var G__8277 = m5557;
var G__8278 = n5558;
var G__8279 = o5559;
var G__8280 = p5560;
var G__8281 = q5561;
var G__8282 = r5562;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281,G__8282) : f.call(null,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270,G__8271,G__8272,G__8273,G__8274,G__8275,G__8276,G__8277,G__8278,G__8279,G__8280,G__8281,G__8282));
}
} else {
var s5563 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558,o5559,p5560,q5561,r5562,s5563);
} else {
var G__8283 = a5545;
var G__8284 = b5546;
var G__8285 = c5547;
var G__8286 = d5548;
var G__8287 = e5549;
var G__8288 = f5550;
var G__8289 = g5551;
var G__8290 = h5552;
var G__8291 = i5553;
var G__8292 = j5554;
var G__8293 = k5555;
var G__8294 = l5556;
var G__8295 = m5557;
var G__8296 = n5558;
var G__8297 = o5559;
var G__8298 = p5560;
var G__8299 = q5561;
var G__8300 = r5562;
var G__8301 = s5563;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301) : f.call(null,G__8283,G__8284,G__8285,G__8286,G__8287,G__8288,G__8289,G__8290,G__8291,G__8292,G__8293,G__8294,G__8295,G__8296,G__8297,G__8298,G__8299,G__8300,G__8301));
}
} else {
var t5564 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a5545,b5546,c5547,d5548,e5549,f5550,g5551,h5552,i5553,j5554,k5555,l5556,m5557,n5558,o5559,p5560,q5561,r5562,s5563,t5564);
} else {
var G__8302 = a5545;
var G__8303 = b5546;
var G__8304 = c5547;
var G__8305 = d5548;
var G__8306 = e5549;
var G__8307 = f5550;
var G__8308 = g5551;
var G__8309 = h5552;
var G__8310 = i5553;
var G__8311 = j5554;
var G__8312 = k5555;
var G__8313 = l5556;
var G__8314 = m5557;
var G__8315 = n5558;
var G__8316 = o5559;
var G__8317 = p5560;
var G__8318 = q5561;
var G__8319 = r5562;
var G__8320 = s5563;
var G__8321 = t5564;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321) : f.call(null,G__8302,G__8303,G__8304,G__8305,G__8306,G__8307,G__8308,G__8309,G__8310,G__8311,G__8312,G__8313,G__8314,G__8315,G__8316,G__8317,G__8318,G__8319,G__8320,G__8321));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__8322__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8322 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8323__i = 0, G__8323__a = new Array(arguments.length -  5);
while (G__8323__i < G__8323__a.length) {G__8323__a[G__8323__i] = arguments[G__8323__i + 5]; ++G__8323__i;}
  args = new cljs.core.IndexedSeq(G__8323__a,0);
} 
return G__8322__delegate.call(this,f,a,b,c,d,args);};
G__8322.cljs$lang$maxFixedArity = 5;
G__8322.cljs$lang$applyTo = (function (arglist__8324){
var f = cljs.core.first(arglist__8324);
arglist__8324 = cljs.core.next(arglist__8324);
var a = cljs.core.first(arglist__8324);
arglist__8324 = cljs.core.next(arglist__8324);
var b = cljs.core.first(arglist__8324);
arglist__8324 = cljs.core.next(arglist__8324);
var c = cljs.core.first(arglist__8324);
arglist__8324 = cljs.core.next(arglist__8324);
var d = cljs.core.first(arglist__8324);
var args = cljs.core.rest(arglist__8324);
return G__8322__delegate(f,a,b,c,d,args);
});
G__8322.cljs$core$IFn$_invoke$arity$variadic = G__8322__delegate;
return G__8322;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__8325 = null;
if (arguments.length > 5) {
var G__8326__i = 0, G__8326__a = new Array(arguments.length -  5);
while (G__8326__i < G__8326__a.length) {G__8326__a[G__8326__i] = arguments[G__8326__i + 5]; ++G__8326__i;}
G__8325 = new cljs.core.IndexedSeq(G__8326__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8325);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8342 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8342) : f.call(null,G__8342));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8343 = cljs.core.meta(obj);
var G__8344 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8343,G__8344) : f.call(null,G__8343,G__8344));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8345 = cljs.core.meta(obj);
var G__8346 = a;
var G__8347 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8345,G__8346,G__8347) : f.call(null,G__8345,G__8346,G__8347));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8348 = cljs.core.meta(obj);
var G__8349 = a;
var G__8350 = b;
var G__8351 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8348,G__8349,G__8350,G__8351) : f.call(null,G__8348,G__8349,G__8350,G__8351));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8352 = cljs.core.meta(obj);
var G__8353 = a;
var G__8354 = b;
var G__8355 = c;
var G__8356 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8352,G__8353,G__8354,G__8355,G__8356) : f.call(null,G__8352,G__8353,G__8354,G__8355,G__8356));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__8357__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8357 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8358__i = 0, G__8358__a = new Array(arguments.length -  6);
while (G__8358__i < G__8358__a.length) {G__8358__a[G__8358__i] = arguments[G__8358__i + 6]; ++G__8358__i;}
  args = new cljs.core.IndexedSeq(G__8358__a,0);
} 
return G__8357__delegate.call(this,obj,f,a,b,c,d,args);};
G__8357.cljs$lang$maxFixedArity = 6;
G__8357.cljs$lang$applyTo = (function (arglist__8359){
var obj = cljs.core.first(arglist__8359);
arglist__8359 = cljs.core.next(arglist__8359);
var f = cljs.core.first(arglist__8359);
arglist__8359 = cljs.core.next(arglist__8359);
var a = cljs.core.first(arglist__8359);
arglist__8359 = cljs.core.next(arglist__8359);
var b = cljs.core.first(arglist__8359);
arglist__8359 = cljs.core.next(arglist__8359);
var c = cljs.core.first(arglist__8359);
arglist__8359 = cljs.core.next(arglist__8359);
var d = cljs.core.first(arglist__8359);
var args = cljs.core.rest(arglist__8359);
return G__8357__delegate(obj,f,a,b,c,d,args);
});
G__8357.cljs$core$IFn$_invoke$arity$variadic = G__8357__delegate;
return G__8357;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8360 = null;
if (arguments.length > 6) {
var G__8361__i = 0, G__8361__a = new Array(arguments.length -  6);
while (G__8361__i < G__8361__a.length) {G__8361__a[G__8361__i] = arguments[G__8361__i + 6]; ++G__8361__i;}
G__8360 = new cljs.core.IndexedSeq(G__8361__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8360);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__8362__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8362 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8363__i = 0, G__8363__a = new Array(arguments.length -  2);
while (G__8363__i < G__8363__a.length) {G__8363__a[G__8363__i] = arguments[G__8363__i + 2]; ++G__8363__i;}
  more = new cljs.core.IndexedSeq(G__8363__a,0);
} 
return G__8362__delegate.call(this,x,y,more);};
G__8362.cljs$lang$maxFixedArity = 2;
G__8362.cljs$lang$applyTo = (function (arglist__8364){
var x = cljs.core.first(arglist__8364);
arglist__8364 = cljs.core.next(arglist__8364);
var y = cljs.core.first(arglist__8364);
var more = cljs.core.rest(arglist__8364);
return G__8362__delegate(x,y,more);
});
G__8362.cljs$core$IFn$_invoke$arity$variadic = G__8362__delegate;
return G__8362;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__8365 = null;
if (arguments.length > 2) {
var G__8366__i = 0, G__8366__a = new Array(arguments.length -  2);
while (G__8366__i < G__8366__a.length) {G__8366__a[G__8366__i] = arguments[G__8366__i + 2]; ++G__8366__i;}
G__8365 = new cljs.core.IndexedSeq(G__8366__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t8370 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8370 = (function (nil_iter,meta8371){
this.nil_iter = nil_iter;
this.meta8371 = meta8371;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8370.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8370.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8370.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8370.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8372){
var self__ = this;
var _8372__$1 = this;
return self__.meta8371;
});

cljs.core.t8370.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8372,meta8371__$1){
var self__ = this;
var _8372__$1 = this;
return (new cljs.core.t8370(self__.nil_iter,meta8371__$1));
});

cljs.core.t8370.cljs$lang$type = true;

cljs.core.t8370.cljs$lang$ctorStr = "cljs.core/t8370";

cljs.core.t8370.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/t8370");
});

cljs.core.__GT_t8370 = (function cljs$core$nil_iter_$___GT_t8370(nil_iter__$1,meta8371){
return (new cljs.core.t8370(nil_iter__$1,meta8371));
});

}

return (new cljs.core.t8370(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4604__auto__ = !((lt.stepper == null));
if(and__4604__auto__){
return self__.iter.hasNext();
} else {
return and__4604__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8373 = lt;
var G__8374 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8373,G__8374) : self__.xform.call(null,G__8373,G__8374));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8375 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8375) : self__.xform.call(null,G__8375));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8377 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8377) : xform.call(null,G__8377));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8379 = cljs.core.next(iters__$1);
iters__$1 = G__8379;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__5501__auto___8380 = self__.iters.length;
var i_8381 = (0);
while(true){
if((i_8381 < n__5501__auto___8380)){
(self__.nexts[i_8381] = (self__.iters[i_8381]).next());

var G__8382 = (i_8381 + (1));
i_8381 = G__8382;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__4604__auto__ = !((lt.stepper == null));
if(and__4604__auto__){
return this$.hasNext();
} else {
return and__4604__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8378 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8378) : self__.xform.call(null,G__8378));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8387 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8387) : xform.call(null,G__8387));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8388_8392 = cljs.core.seq(colls);
var chunk__8389_8393 = null;
var count__8390_8394 = (0);
var i__8391_8395 = (0);
while(true){
if((i__8391_8395 < count__8390_8394)){
var coll_8396 = chunk__8389_8393.cljs$core$IIndexed$_nth$arity$2(null,i__8391_8395);
iters.push(cljs.core.iter(coll_8396));

var G__8397 = seq__8388_8392;
var G__8398 = chunk__8389_8393;
var G__8399 = count__8390_8394;
var G__8400 = (i__8391_8395 + (1));
seq__8388_8392 = G__8397;
chunk__8389_8393 = G__8398;
count__8390_8394 = G__8399;
i__8391_8395 = G__8400;
continue;
} else {
var temp__4126__auto___8401 = cljs.core.seq(seq__8388_8392);
if(temp__4126__auto___8401){
var seq__8388_8402__$1 = temp__4126__auto___8401;
if(cljs.core.chunked_seq_QMARK_(seq__8388_8402__$1)){
var c__5401__auto___8403 = cljs.core.chunk_first(seq__8388_8402__$1);
var G__8404 = cljs.core.chunk_rest(seq__8388_8402__$1);
var G__8405 = c__5401__auto___8403;
var G__8406 = cljs.core.count(c__5401__auto___8403);
var G__8407 = (0);
seq__8388_8392 = G__8404;
chunk__8389_8393 = G__8405;
count__8390_8394 = G__8406;
i__8391_8395 = G__8407;
continue;
} else {
var coll_8408 = cljs.core.first(seq__8388_8402__$1);
iters.push(cljs.core.iter(coll_8408));

var G__8409 = cljs.core.next(seq__8388_8402__$1);
var G__8410 = null;
var G__8411 = (0);
var G__8412 = (0);
seq__8388_8392 = G__8409;
chunk__8389_8393 = G__8410;
count__8390_8394 = G__8411;
i__8391_8395 = G__8412;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__4616__auto__ = cljs.core.seq(coll);
if(or__4616__auto__){
return or__4616__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__8413__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8413 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8414__i = 0, G__8414__a = new Array(arguments.length -  2);
while (G__8414__i < G__8414__a.length) {G__8414__a[G__8414__i] = arguments[G__8414__i + 2]; ++G__8414__i;}
  colls = new cljs.core.IndexedSeq(G__8414__a,0);
} 
return G__8413__delegate.call(this,xform,coll,colls);};
G__8413.cljs$lang$maxFixedArity = 2;
G__8413.cljs$lang$applyTo = (function (arglist__8415){
var xform = cljs.core.first(arglist__8415);
arglist__8415 = cljs.core.next(arglist__8415);
var coll = cljs.core.first(arglist__8415);
var colls = cljs.core.rest(arglist__8415);
return G__8413__delegate(xform,coll,colls);
});
G__8413.cljs$core$IFn$_invoke$arity$variadic = G__8413__delegate;
return G__8413;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__8416 = null;
if (arguments.length > 2) {
var G__8417__i = 0, G__8417__a = new Array(arguments.length -  2);
while (G__8417__i < G__8417__a.length) {G__8417__a[G__8417__i] = arguments[G__8417__i + 2]; ++G__8417__i;}
G__8416 = new cljs.core.IndexedSeq(G__8417__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8419 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8419) : pred.call(null,G__8419));
})())){
var G__8420 = pred;
var G__8421 = cljs.core.next(coll);
pred = G__8420;
coll = G__8421;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__4616__auto__ = (function (){var G__8425 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8425) : pred.call(null,G__8425));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var G__8426 = pred;
var G__8427 = cljs.core.next(coll);
pred = G__8426;
coll = G__8427;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__8434 = null;
var G__8434__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8434__1 = (function (x){
return cljs.core.not((function (){var G__8431 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8431) : f.call(null,G__8431));
})());
});
var G__8434__2 = (function (x,y){
return cljs.core.not((function (){var G__8432 = x;
var G__8433 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8432,G__8433) : f.call(null,G__8432,G__8433));
})());
});
var G__8434__3 = (function() { 
var G__8435__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8435 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8436__i = 0, G__8436__a = new Array(arguments.length -  2);
while (G__8436__i < G__8436__a.length) {G__8436__a[G__8436__i] = arguments[G__8436__i + 2]; ++G__8436__i;}
  zs = new cljs.core.IndexedSeq(G__8436__a,0);
} 
return G__8435__delegate.call(this,x,y,zs);};
G__8435.cljs$lang$maxFixedArity = 2;
G__8435.cljs$lang$applyTo = (function (arglist__8437){
var x = cljs.core.first(arglist__8437);
arglist__8437 = cljs.core.next(arglist__8437);
var y = cljs.core.first(arglist__8437);
var zs = cljs.core.rest(arglist__8437);
return G__8435__delegate(x,y,zs);
});
G__8435.cljs$core$IFn$_invoke$arity$variadic = G__8435__delegate;
return G__8435;
})()
;
G__8434 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8434__0.call(this);
case 1:
return G__8434__1.call(this,x);
case 2:
return G__8434__2.call(this,x,y);
default:
var G__8438 = null;
if (arguments.length > 2) {
var G__8439__i = 0, G__8439__a = new Array(arguments.length -  2);
while (G__8439__i < G__8439__a.length) {G__8439__a[G__8439__i] = arguments[G__8439__i + 2]; ++G__8439__i;}
G__8438 = new cljs.core.IndexedSeq(G__8439__a,0);
}
return G__8434__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8434.cljs$lang$maxFixedArity = 2;
G__8434.cljs$lang$applyTo = G__8434__3.cljs$lang$applyTo;
G__8434.cljs$core$IFn$_invoke$arity$0 = G__8434__0;
G__8434.cljs$core$IFn$_invoke$arity$1 = G__8434__1;
G__8434.cljs$core$IFn$_invoke$arity$2 = G__8434__2;
G__8434.cljs$core$IFn$_invoke$arity$variadic = G__8434__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8434;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__8440__delegate = function (args){
return x;
};
var G__8440 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8441__i = 0, G__8441__a = new Array(arguments.length -  0);
while (G__8441__i < G__8441__a.length) {G__8441__a[G__8441__i] = arguments[G__8441__i + 0]; ++G__8441__i;}
  args = new cljs.core.IndexedSeq(G__8441__a,0);
} 
return G__8440__delegate.call(this,args);};
G__8440.cljs$lang$maxFixedArity = 0;
G__8440.cljs$lang$applyTo = (function (arglist__8442){
var args = cljs.core.seq(arglist__8442);
return G__8440__delegate(args);
});
G__8440.cljs$core$IFn$_invoke$arity$variadic = G__8440__delegate;
return G__8440;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__8497 = null;
var G__8497__0 = (function (){
var G__8470 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8470) : f.call(null,G__8470));
});
var G__8497__1 = (function (x){
var G__8471 = (function (){var G__8472 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8472) : g.call(null,G__8472));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8471) : f.call(null,G__8471));
});
var G__8497__2 = (function (x,y){
var G__8473 = (function (){var G__8474 = x;
var G__8475 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8474,G__8475) : g.call(null,G__8474,G__8475));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8473) : f.call(null,G__8473));
});
var G__8497__3 = (function (x,y,z){
var G__8476 = (function (){var G__8477 = x;
var G__8478 = y;
var G__8479 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8477,G__8478,G__8479) : g.call(null,G__8477,G__8478,G__8479));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8476) : f.call(null,G__8476));
});
var G__8497__4 = (function() { 
var G__8498__delegate = function (x,y,z,args){
var G__8480 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8480) : f.call(null,G__8480));
};
var G__8498 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8499__i = 0, G__8499__a = new Array(arguments.length -  3);
while (G__8499__i < G__8499__a.length) {G__8499__a[G__8499__i] = arguments[G__8499__i + 3]; ++G__8499__i;}
  args = new cljs.core.IndexedSeq(G__8499__a,0);
} 
return G__8498__delegate.call(this,x,y,z,args);};
G__8498.cljs$lang$maxFixedArity = 3;
G__8498.cljs$lang$applyTo = (function (arglist__8500){
var x = cljs.core.first(arglist__8500);
arglist__8500 = cljs.core.next(arglist__8500);
var y = cljs.core.first(arglist__8500);
arglist__8500 = cljs.core.next(arglist__8500);
var z = cljs.core.first(arglist__8500);
var args = cljs.core.rest(arglist__8500);
return G__8498__delegate(x,y,z,args);
});
G__8498.cljs$core$IFn$_invoke$arity$variadic = G__8498__delegate;
return G__8498;
})()
;
G__8497 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8497__0.call(this);
case 1:
return G__8497__1.call(this,x);
case 2:
return G__8497__2.call(this,x,y);
case 3:
return G__8497__3.call(this,x,y,z);
default:
var G__8501 = null;
if (arguments.length > 3) {
var G__8502__i = 0, G__8502__a = new Array(arguments.length -  3);
while (G__8502__i < G__8502__a.length) {G__8502__a[G__8502__i] = arguments[G__8502__i + 3]; ++G__8502__i;}
G__8501 = new cljs.core.IndexedSeq(G__8502__a,0);
}
return G__8497__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8501);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8497.cljs$lang$maxFixedArity = 3;
G__8497.cljs$lang$applyTo = G__8497__4.cljs$lang$applyTo;
G__8497.cljs$core$IFn$_invoke$arity$0 = G__8497__0;
G__8497.cljs$core$IFn$_invoke$arity$1 = G__8497__1;
G__8497.cljs$core$IFn$_invoke$arity$2 = G__8497__2;
G__8497.cljs$core$IFn$_invoke$arity$3 = G__8497__3;
G__8497.cljs$core$IFn$_invoke$arity$variadic = G__8497__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8497;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__8503 = null;
var G__8503__0 = (function (){
var G__8481 = (function (){var G__8482 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8482) : g.call(null,G__8482));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8481) : f.call(null,G__8481));
});
var G__8503__1 = (function (x){
var G__8483 = (function (){var G__8484 = (function (){var G__8485 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8485) : h.call(null,G__8485));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8484) : g.call(null,G__8484));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8483) : f.call(null,G__8483));
});
var G__8503__2 = (function (x,y){
var G__8486 = (function (){var G__8487 = (function (){var G__8488 = x;
var G__8489 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8488,G__8489) : h.call(null,G__8488,G__8489));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8487) : g.call(null,G__8487));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8486) : f.call(null,G__8486));
});
var G__8503__3 = (function (x,y,z){
var G__8490 = (function (){var G__8491 = (function (){var G__8492 = x;
var G__8493 = y;
var G__8494 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8492,G__8493,G__8494) : h.call(null,G__8492,G__8493,G__8494));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8491) : g.call(null,G__8491));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8490) : f.call(null,G__8490));
});
var G__8503__4 = (function() { 
var G__8504__delegate = function (x,y,z,args){
var G__8495 = (function (){var G__8496 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8496) : g.call(null,G__8496));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8495) : f.call(null,G__8495));
};
var G__8504 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8505__i = 0, G__8505__a = new Array(arguments.length -  3);
while (G__8505__i < G__8505__a.length) {G__8505__a[G__8505__i] = arguments[G__8505__i + 3]; ++G__8505__i;}
  args = new cljs.core.IndexedSeq(G__8505__a,0);
} 
return G__8504__delegate.call(this,x,y,z,args);};
G__8504.cljs$lang$maxFixedArity = 3;
G__8504.cljs$lang$applyTo = (function (arglist__8506){
var x = cljs.core.first(arglist__8506);
arglist__8506 = cljs.core.next(arglist__8506);
var y = cljs.core.first(arglist__8506);
arglist__8506 = cljs.core.next(arglist__8506);
var z = cljs.core.first(arglist__8506);
var args = cljs.core.rest(arglist__8506);
return G__8504__delegate(x,y,z,args);
});
G__8504.cljs$core$IFn$_invoke$arity$variadic = G__8504__delegate;
return G__8504;
})()
;
G__8503 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8503__0.call(this);
case 1:
return G__8503__1.call(this,x);
case 2:
return G__8503__2.call(this,x,y);
case 3:
return G__8503__3.call(this,x,y,z);
default:
var G__8507 = null;
if (arguments.length > 3) {
var G__8508__i = 0, G__8508__a = new Array(arguments.length -  3);
while (G__8508__i < G__8508__a.length) {G__8508__a[G__8508__i] = arguments[G__8508__i + 3]; ++G__8508__i;}
G__8507 = new cljs.core.IndexedSeq(G__8508__a,0);
}
return G__8503__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8503.cljs$lang$maxFixedArity = 3;
G__8503.cljs$lang$applyTo = G__8503__4.cljs$lang$applyTo;
G__8503.cljs$core$IFn$_invoke$arity$0 = G__8503__0;
G__8503.cljs$core$IFn$_invoke$arity$1 = G__8503__1;
G__8503.cljs$core$IFn$_invoke$arity$2 = G__8503__2;
G__8503.cljs$core$IFn$_invoke$arity$3 = G__8503__3;
G__8503.cljs$core$IFn$_invoke$arity$variadic = G__8503__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8503;
})()
});
var cljs$core$comp__4 = (function() { 
var G__8509__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8510__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8511 = cljs.core.first(fs__$2).call(null,ret);
var G__8512 = cljs.core.next(fs__$2);
ret = G__8511;
fs__$2 = G__8512;
continue;
} else {
return ret;
}
break;
}
};
var G__8510 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8513__i = 0, G__8513__a = new Array(arguments.length -  0);
while (G__8513__i < G__8513__a.length) {G__8513__a[G__8513__i] = arguments[G__8513__i + 0]; ++G__8513__i;}
  args = new cljs.core.IndexedSeq(G__8513__a,0);
} 
return G__8510__delegate.call(this,args);};
G__8510.cljs$lang$maxFixedArity = 0;
G__8510.cljs$lang$applyTo = (function (arglist__8514){
var args = cljs.core.seq(arglist__8514);
return G__8510__delegate(args);
});
G__8510.cljs$core$IFn$_invoke$arity$variadic = G__8510__delegate;
return G__8510;
})()
;
;})(fs__$1))
};
var G__8509 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8515__i = 0, G__8515__a = new Array(arguments.length -  3);
while (G__8515__i < G__8515__a.length) {G__8515__a[G__8515__i] = arguments[G__8515__i + 3]; ++G__8515__i;}
  fs = new cljs.core.IndexedSeq(G__8515__a,0);
} 
return G__8509__delegate.call(this,f1,f2,f3,fs);};
G__8509.cljs$lang$maxFixedArity = 3;
G__8509.cljs$lang$applyTo = (function (arglist__8516){
var f1 = cljs.core.first(arglist__8516);
arglist__8516 = cljs.core.next(arglist__8516);
var f2 = cljs.core.first(arglist__8516);
arglist__8516 = cljs.core.next(arglist__8516);
var f3 = cljs.core.first(arglist__8516);
var fs = cljs.core.rest(arglist__8516);
return G__8509__delegate(f1,f2,f3,fs);
});
G__8509.cljs$core$IFn$_invoke$arity$variadic = G__8509__delegate;
return G__8509;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__8517 = null;
if (arguments.length > 3) {
var G__8518__i = 0, G__8518__a = new Array(arguments.length -  3);
while (G__8518__i < G__8518__a.length) {G__8518__a[G__8518__i] = arguments[G__8518__i + 3]; ++G__8518__i;}
G__8517 = new cljs.core.IndexedSeq(G__8518__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__8603 = null;
var G__8603__0 = (function (){
var G__8561 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8561) : f.call(null,G__8561));
});
var G__8603__1 = (function (x){
var G__8562 = arg1;
var G__8563 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8562,G__8563) : f.call(null,G__8562,G__8563));
});
var G__8603__2 = (function (x,y){
var G__8564 = arg1;
var G__8565 = x;
var G__8566 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8564,G__8565,G__8566) : f.call(null,G__8564,G__8565,G__8566));
});
var G__8603__3 = (function (x,y,z){
var G__8567 = arg1;
var G__8568 = x;
var G__8569 = y;
var G__8570 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8567,G__8568,G__8569,G__8570) : f.call(null,G__8567,G__8568,G__8569,G__8570));
});
var G__8603__4 = (function() { 
var G__8604__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8604 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8605__i = 0, G__8605__a = new Array(arguments.length -  3);
while (G__8605__i < G__8605__a.length) {G__8605__a[G__8605__i] = arguments[G__8605__i + 3]; ++G__8605__i;}
  args = new cljs.core.IndexedSeq(G__8605__a,0);
} 
return G__8604__delegate.call(this,x,y,z,args);};
G__8604.cljs$lang$maxFixedArity = 3;
G__8604.cljs$lang$applyTo = (function (arglist__8606){
var x = cljs.core.first(arglist__8606);
arglist__8606 = cljs.core.next(arglist__8606);
var y = cljs.core.first(arglist__8606);
arglist__8606 = cljs.core.next(arglist__8606);
var z = cljs.core.first(arglist__8606);
var args = cljs.core.rest(arglist__8606);
return G__8604__delegate(x,y,z,args);
});
G__8604.cljs$core$IFn$_invoke$arity$variadic = G__8604__delegate;
return G__8604;
})()
;
G__8603 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8603__0.call(this);
case 1:
return G__8603__1.call(this,x);
case 2:
return G__8603__2.call(this,x,y);
case 3:
return G__8603__3.call(this,x,y,z);
default:
var G__8607 = null;
if (arguments.length > 3) {
var G__8608__i = 0, G__8608__a = new Array(arguments.length -  3);
while (G__8608__i < G__8608__a.length) {G__8608__a[G__8608__i] = arguments[G__8608__i + 3]; ++G__8608__i;}
G__8607 = new cljs.core.IndexedSeq(G__8608__a,0);
}
return G__8603__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8603.cljs$lang$maxFixedArity = 3;
G__8603.cljs$lang$applyTo = G__8603__4.cljs$lang$applyTo;
G__8603.cljs$core$IFn$_invoke$arity$0 = G__8603__0;
G__8603.cljs$core$IFn$_invoke$arity$1 = G__8603__1;
G__8603.cljs$core$IFn$_invoke$arity$2 = G__8603__2;
G__8603.cljs$core$IFn$_invoke$arity$3 = G__8603__3;
G__8603.cljs$core$IFn$_invoke$arity$variadic = G__8603__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8603;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8609 = null;
var G__8609__0 = (function (){
var G__8571 = arg1;
var G__8572 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8571,G__8572) : f.call(null,G__8571,G__8572));
});
var G__8609__1 = (function (x){
var G__8573 = arg1;
var G__8574 = arg2;
var G__8575 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8573,G__8574,G__8575) : f.call(null,G__8573,G__8574,G__8575));
});
var G__8609__2 = (function (x,y){
var G__8576 = arg1;
var G__8577 = arg2;
var G__8578 = x;
var G__8579 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8576,G__8577,G__8578,G__8579) : f.call(null,G__8576,G__8577,G__8578,G__8579));
});
var G__8609__3 = (function (x,y,z){
var G__8580 = arg1;
var G__8581 = arg2;
var G__8582 = x;
var G__8583 = y;
var G__8584 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8580,G__8581,G__8582,G__8583,G__8584) : f.call(null,G__8580,G__8581,G__8582,G__8583,G__8584));
});
var G__8609__4 = (function() { 
var G__8610__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8610 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8611__i = 0, G__8611__a = new Array(arguments.length -  3);
while (G__8611__i < G__8611__a.length) {G__8611__a[G__8611__i] = arguments[G__8611__i + 3]; ++G__8611__i;}
  args = new cljs.core.IndexedSeq(G__8611__a,0);
} 
return G__8610__delegate.call(this,x,y,z,args);};
G__8610.cljs$lang$maxFixedArity = 3;
G__8610.cljs$lang$applyTo = (function (arglist__8612){
var x = cljs.core.first(arglist__8612);
arglist__8612 = cljs.core.next(arglist__8612);
var y = cljs.core.first(arglist__8612);
arglist__8612 = cljs.core.next(arglist__8612);
var z = cljs.core.first(arglist__8612);
var args = cljs.core.rest(arglist__8612);
return G__8610__delegate(x,y,z,args);
});
G__8610.cljs$core$IFn$_invoke$arity$variadic = G__8610__delegate;
return G__8610;
})()
;
G__8609 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8609__0.call(this);
case 1:
return G__8609__1.call(this,x);
case 2:
return G__8609__2.call(this,x,y);
case 3:
return G__8609__3.call(this,x,y,z);
default:
var G__8613 = null;
if (arguments.length > 3) {
var G__8614__i = 0, G__8614__a = new Array(arguments.length -  3);
while (G__8614__i < G__8614__a.length) {G__8614__a[G__8614__i] = arguments[G__8614__i + 3]; ++G__8614__i;}
G__8613 = new cljs.core.IndexedSeq(G__8614__a,0);
}
return G__8609__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8609.cljs$lang$maxFixedArity = 3;
G__8609.cljs$lang$applyTo = G__8609__4.cljs$lang$applyTo;
G__8609.cljs$core$IFn$_invoke$arity$0 = G__8609__0;
G__8609.cljs$core$IFn$_invoke$arity$1 = G__8609__1;
G__8609.cljs$core$IFn$_invoke$arity$2 = G__8609__2;
G__8609.cljs$core$IFn$_invoke$arity$3 = G__8609__3;
G__8609.cljs$core$IFn$_invoke$arity$variadic = G__8609__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8609;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8615 = null;
var G__8615__0 = (function (){
var G__8585 = arg1;
var G__8586 = arg2;
var G__8587 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8585,G__8586,G__8587) : f.call(null,G__8585,G__8586,G__8587));
});
var G__8615__1 = (function (x){
var G__8588 = arg1;
var G__8589 = arg2;
var G__8590 = arg3;
var G__8591 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8588,G__8589,G__8590,G__8591) : f.call(null,G__8588,G__8589,G__8590,G__8591));
});
var G__8615__2 = (function (x,y){
var G__8592 = arg1;
var G__8593 = arg2;
var G__8594 = arg3;
var G__8595 = x;
var G__8596 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8592,G__8593,G__8594,G__8595,G__8596) : f.call(null,G__8592,G__8593,G__8594,G__8595,G__8596));
});
var G__8615__3 = (function (x,y,z){
var G__8597 = arg1;
var G__8598 = arg2;
var G__8599 = arg3;
var G__8600 = x;
var G__8601 = y;
var G__8602 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8597,G__8598,G__8599,G__8600,G__8601,G__8602) : f.call(null,G__8597,G__8598,G__8599,G__8600,G__8601,G__8602));
});
var G__8615__4 = (function() { 
var G__8616__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8616 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8617__i = 0, G__8617__a = new Array(arguments.length -  3);
while (G__8617__i < G__8617__a.length) {G__8617__a[G__8617__i] = arguments[G__8617__i + 3]; ++G__8617__i;}
  args = new cljs.core.IndexedSeq(G__8617__a,0);
} 
return G__8616__delegate.call(this,x,y,z,args);};
G__8616.cljs$lang$maxFixedArity = 3;
G__8616.cljs$lang$applyTo = (function (arglist__8618){
var x = cljs.core.first(arglist__8618);
arglist__8618 = cljs.core.next(arglist__8618);
var y = cljs.core.first(arglist__8618);
arglist__8618 = cljs.core.next(arglist__8618);
var z = cljs.core.first(arglist__8618);
var args = cljs.core.rest(arglist__8618);
return G__8616__delegate(x,y,z,args);
});
G__8616.cljs$core$IFn$_invoke$arity$variadic = G__8616__delegate;
return G__8616;
})()
;
G__8615 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8615__0.call(this);
case 1:
return G__8615__1.call(this,x);
case 2:
return G__8615__2.call(this,x,y);
case 3:
return G__8615__3.call(this,x,y,z);
default:
var G__8619 = null;
if (arguments.length > 3) {
var G__8620__i = 0, G__8620__a = new Array(arguments.length -  3);
while (G__8620__i < G__8620__a.length) {G__8620__a[G__8620__i] = arguments[G__8620__i + 3]; ++G__8620__i;}
G__8619 = new cljs.core.IndexedSeq(G__8620__a,0);
}
return G__8615__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8615.cljs$lang$maxFixedArity = 3;
G__8615.cljs$lang$applyTo = G__8615__4.cljs$lang$applyTo;
G__8615.cljs$core$IFn$_invoke$arity$0 = G__8615__0;
G__8615.cljs$core$IFn$_invoke$arity$1 = G__8615__1;
G__8615.cljs$core$IFn$_invoke$arity$2 = G__8615__2;
G__8615.cljs$core$IFn$_invoke$arity$3 = G__8615__3;
G__8615.cljs$core$IFn$_invoke$arity$variadic = G__8615__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8615;
})()
});
var cljs$core$partial__5 = (function() { 
var G__8621__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8622__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8622 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8623__i = 0, G__8623__a = new Array(arguments.length -  0);
while (G__8623__i < G__8623__a.length) {G__8623__a[G__8623__i] = arguments[G__8623__i + 0]; ++G__8623__i;}
  args = new cljs.core.IndexedSeq(G__8623__a,0);
} 
return G__8622__delegate.call(this,args);};
G__8622.cljs$lang$maxFixedArity = 0;
G__8622.cljs$lang$applyTo = (function (arglist__8624){
var args = cljs.core.seq(arglist__8624);
return G__8622__delegate(args);
});
G__8622.cljs$core$IFn$_invoke$arity$variadic = G__8622__delegate;
return G__8622;
})()
;
};
var G__8621 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8625__i = 0, G__8625__a = new Array(arguments.length -  4);
while (G__8625__i < G__8625__a.length) {G__8625__a[G__8625__i] = arguments[G__8625__i + 4]; ++G__8625__i;}
  more = new cljs.core.IndexedSeq(G__8625__a,0);
} 
return G__8621__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8621.cljs$lang$maxFixedArity = 4;
G__8621.cljs$lang$applyTo = (function (arglist__8626){
var f = cljs.core.first(arglist__8626);
arglist__8626 = cljs.core.next(arglist__8626);
var arg1 = cljs.core.first(arglist__8626);
arglist__8626 = cljs.core.next(arglist__8626);
var arg2 = cljs.core.first(arglist__8626);
arglist__8626 = cljs.core.next(arglist__8626);
var arg3 = cljs.core.first(arglist__8626);
var more = cljs.core.rest(arglist__8626);
return G__8621__delegate(f,arg1,arg2,arg3,more);
});
G__8621.cljs$core$IFn$_invoke$arity$variadic = G__8621__delegate;
return G__8621;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8627 = null;
if (arguments.length > 4) {
var G__8628__i = 0, G__8628__a = new Array(arguments.length -  4);
while (G__8628__i < G__8628__a.length) {G__8628__a[G__8628__i] = arguments[G__8628__i + 4]; ++G__8628__i;}
G__8627 = new cljs.core.IndexedSeq(G__8628__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__8661 = null;
var G__8661__1 = (function (a){
var G__8645 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8645) : f.call(null,G__8645));
});
var G__8661__2 = (function (a,b){
var G__8646 = (((a == null))?x:a);
var G__8647 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8646,G__8647) : f.call(null,G__8646,G__8647));
});
var G__8661__3 = (function (a,b,c){
var G__8648 = (((a == null))?x:a);
var G__8649 = b;
var G__8650 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8648,G__8649,G__8650) : f.call(null,G__8648,G__8649,G__8650));
});
var G__8661__4 = (function() { 
var G__8662__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8662 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8663__i = 0, G__8663__a = new Array(arguments.length -  3);
while (G__8663__i < G__8663__a.length) {G__8663__a[G__8663__i] = arguments[G__8663__i + 3]; ++G__8663__i;}
  ds = new cljs.core.IndexedSeq(G__8663__a,0);
} 
return G__8662__delegate.call(this,a,b,c,ds);};
G__8662.cljs$lang$maxFixedArity = 3;
G__8662.cljs$lang$applyTo = (function (arglist__8664){
var a = cljs.core.first(arglist__8664);
arglist__8664 = cljs.core.next(arglist__8664);
var b = cljs.core.first(arglist__8664);
arglist__8664 = cljs.core.next(arglist__8664);
var c = cljs.core.first(arglist__8664);
var ds = cljs.core.rest(arglist__8664);
return G__8662__delegate(a,b,c,ds);
});
G__8662.cljs$core$IFn$_invoke$arity$variadic = G__8662__delegate;
return G__8662;
})()
;
G__8661 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8661__1.call(this,a);
case 2:
return G__8661__2.call(this,a,b);
case 3:
return G__8661__3.call(this,a,b,c);
default:
var G__8665 = null;
if (arguments.length > 3) {
var G__8666__i = 0, G__8666__a = new Array(arguments.length -  3);
while (G__8666__i < G__8666__a.length) {G__8666__a[G__8666__i] = arguments[G__8666__i + 3]; ++G__8666__i;}
G__8665 = new cljs.core.IndexedSeq(G__8666__a,0);
}
return G__8661__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8661.cljs$lang$maxFixedArity = 3;
G__8661.cljs$lang$applyTo = G__8661__4.cljs$lang$applyTo;
G__8661.cljs$core$IFn$_invoke$arity$1 = G__8661__1;
G__8661.cljs$core$IFn$_invoke$arity$2 = G__8661__2;
G__8661.cljs$core$IFn$_invoke$arity$3 = G__8661__3;
G__8661.cljs$core$IFn$_invoke$arity$variadic = G__8661__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8661;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__8667 = null;
var G__8667__2 = (function (a,b){
var G__8651 = (((a == null))?x:a);
var G__8652 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8651,G__8652) : f.call(null,G__8651,G__8652));
});
var G__8667__3 = (function (a,b,c){
var G__8653 = (((a == null))?x:a);
var G__8654 = (((b == null))?y:b);
var G__8655 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8653,G__8654,G__8655) : f.call(null,G__8653,G__8654,G__8655));
});
var G__8667__4 = (function() { 
var G__8668__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8668 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8669__i = 0, G__8669__a = new Array(arguments.length -  3);
while (G__8669__i < G__8669__a.length) {G__8669__a[G__8669__i] = arguments[G__8669__i + 3]; ++G__8669__i;}
  ds = new cljs.core.IndexedSeq(G__8669__a,0);
} 
return G__8668__delegate.call(this,a,b,c,ds);};
G__8668.cljs$lang$maxFixedArity = 3;
G__8668.cljs$lang$applyTo = (function (arglist__8670){
var a = cljs.core.first(arglist__8670);
arglist__8670 = cljs.core.next(arglist__8670);
var b = cljs.core.first(arglist__8670);
arglist__8670 = cljs.core.next(arglist__8670);
var c = cljs.core.first(arglist__8670);
var ds = cljs.core.rest(arglist__8670);
return G__8668__delegate(a,b,c,ds);
});
G__8668.cljs$core$IFn$_invoke$arity$variadic = G__8668__delegate;
return G__8668;
})()
;
G__8667 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8667__2.call(this,a,b);
case 3:
return G__8667__3.call(this,a,b,c);
default:
var G__8671 = null;
if (arguments.length > 3) {
var G__8672__i = 0, G__8672__a = new Array(arguments.length -  3);
while (G__8672__i < G__8672__a.length) {G__8672__a[G__8672__i] = arguments[G__8672__i + 3]; ++G__8672__i;}
G__8671 = new cljs.core.IndexedSeq(G__8672__a,0);
}
return G__8667__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8667.cljs$lang$maxFixedArity = 3;
G__8667.cljs$lang$applyTo = G__8667__4.cljs$lang$applyTo;
G__8667.cljs$core$IFn$_invoke$arity$2 = G__8667__2;
G__8667.cljs$core$IFn$_invoke$arity$3 = G__8667__3;
G__8667.cljs$core$IFn$_invoke$arity$variadic = G__8667__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8667;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__8673 = null;
var G__8673__2 = (function (a,b){
var G__8656 = (((a == null))?x:a);
var G__8657 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8656,G__8657) : f.call(null,G__8656,G__8657));
});
var G__8673__3 = (function (a,b,c){
var G__8658 = (((a == null))?x:a);
var G__8659 = (((b == null))?y:b);
var G__8660 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8658,G__8659,G__8660) : f.call(null,G__8658,G__8659,G__8660));
});
var G__8673__4 = (function() { 
var G__8674__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8674 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8675__i = 0, G__8675__a = new Array(arguments.length -  3);
while (G__8675__i < G__8675__a.length) {G__8675__a[G__8675__i] = arguments[G__8675__i + 3]; ++G__8675__i;}
  ds = new cljs.core.IndexedSeq(G__8675__a,0);
} 
return G__8674__delegate.call(this,a,b,c,ds);};
G__8674.cljs$lang$maxFixedArity = 3;
G__8674.cljs$lang$applyTo = (function (arglist__8676){
var a = cljs.core.first(arglist__8676);
arglist__8676 = cljs.core.next(arglist__8676);
var b = cljs.core.first(arglist__8676);
arglist__8676 = cljs.core.next(arglist__8676);
var c = cljs.core.first(arglist__8676);
var ds = cljs.core.rest(arglist__8676);
return G__8674__delegate(a,b,c,ds);
});
G__8674.cljs$core$IFn$_invoke$arity$variadic = G__8674__delegate;
return G__8674;
})()
;
G__8673 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8673__2.call(this,a,b);
case 3:
return G__8673__3.call(this,a,b,c);
default:
var G__8677 = null;
if (arguments.length > 3) {
var G__8678__i = 0, G__8678__a = new Array(arguments.length -  3);
while (G__8678__i < G__8678__a.length) {G__8678__a[G__8678__i] = arguments[G__8678__i + 3]; ++G__8678__i;}
G__8677 = new cljs.core.IndexedSeq(G__8678__a,0);
}
return G__8673__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8673.cljs$lang$maxFixedArity = 3;
G__8673.cljs$lang$applyTo = G__8673__4.cljs$lang$applyTo;
G__8673.cljs$core$IFn$_invoke$arity$2 = G__8673__2;
G__8673.cljs$core$IFn$_invoke$arity$3 = G__8673__3;
G__8673.cljs$core$IFn$_invoke$arity$variadic = G__8673__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8673;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8709 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8709) : cljs.core.volatile_BANG_.call(null,G__8709));
})();
return ((function (i){
return (function() {
var G__8739 = null;
var G__8739__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8739__1 = (function (result){
var G__8710 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8710) : rf.call(null,G__8710));
});
var G__8739__2 = (function (result,input){
var G__8711 = result;
var G__8712 = (function (){var G__8713 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8714 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8713,G__8714) : f.call(null,G__8713,G__8714));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8711,G__8712) : rf.call(null,G__8711,G__8712));
});
G__8739 = function(result,input){
switch(arguments.length){
case 0:
return G__8739__0.call(this);
case 1:
return G__8739__1.call(this,result);
case 2:
return G__8739__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8739.cljs$core$IFn$_invoke$arity$0 = G__8739__0;
G__8739.cljs$core$IFn$_invoke$arity$1 = G__8739__1;
G__8739.cljs$core$IFn$_invoke$arity$2 = G__8739__2;
return G__8739;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5501__auto___8740 = size;
var i_8741 = (0);
while(true){
if((i_8741 < n__5501__auto___8740)){
cljs.core.chunk_append(b,(function (){var G__8735 = (idx + i_8741);
var G__8736 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8741);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8735,G__8736) : f.call(null,G__8735,G__8736));
})());

var G__8742 = (i_8741 + (1));
i_8741 = G__8742;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8737 = idx;
var G__8738 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8737,G__8738) : f.call(null,G__8737,G__8738));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8761 = null;
var G__8761__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8761__1 = (function (result){
var G__8755 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8755) : rf.call(null,G__8755));
});
var G__8761__2 = (function (result,input){
var v = (function (){var G__8756 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8756) : f.call(null,G__8756));
})();
if((v == null)){
return result;
} else {
var G__8757 = result;
var G__8758 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8757,G__8758) : rf.call(null,G__8757,G__8758));
}
});
G__8761 = function(result,input){
switch(arguments.length){
case 0:
return G__8761__0.call(this);
case 1:
return G__8761__1.call(this,result);
case 2:
return G__8761__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8761.cljs$core$IFn$_invoke$arity$0 = G__8761__0;
G__8761.cljs$core$IFn$_invoke$arity$1 = G__8761__1;
G__8761.cljs$core$IFn$_invoke$arity$2 = G__8761__2;
return G__8761;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5501__auto___8762 = size;
var i_8763 = (0);
while(true){
if((i_8763 < n__5501__auto___8762)){
var x_8764 = (function (){var G__8759 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8763);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8759) : f.call(null,G__8759));
})();
if((x_8764 == null)){
} else {
cljs.core.chunk_append(b,x_8764);
}

var G__8765 = (i_8763 + (1));
i_8763 = G__8765;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8760 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8760) : f.call(null,G__8760));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8766 = this$__$1;
return goog.getUid(G__8766);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8767 = cljs.core.seq(self__.watches);
var chunk__8768 = null;
var count__8769 = (0);
var i__8770 = (0);
while(true){
if((i__8770 < count__8769)){
var vec__8771 = chunk__8768.cljs$core$IIndexed$_nth$arity$2(null,i__8770);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8771,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8771,(1),null);
var G__8772_8781 = key;
var G__8773_8782 = this$__$1;
var G__8774_8783 = oldval;
var G__8775_8784 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8772_8781,G__8773_8782,G__8774_8783,G__8775_8784) : f.call(null,G__8772_8781,G__8773_8782,G__8774_8783,G__8775_8784));

var G__8785 = seq__8767;
var G__8786 = chunk__8768;
var G__8787 = count__8769;
var G__8788 = (i__8770 + (1));
seq__8767 = G__8785;
chunk__8768 = G__8786;
count__8769 = G__8787;
i__8770 = G__8788;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8767);
if(temp__4126__auto__){
var seq__8767__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8767__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__8767__$1);
var G__8789 = cljs.core.chunk_rest(seq__8767__$1);
var G__8790 = c__5401__auto__;
var G__8791 = cljs.core.count(c__5401__auto__);
var G__8792 = (0);
seq__8767 = G__8789;
chunk__8768 = G__8790;
count__8769 = G__8791;
i__8770 = G__8792;
continue;
} else {
var vec__8776 = cljs.core.first(seq__8767__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8776,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8776,(1),null);
var G__8777_8793 = key;
var G__8778_8794 = this$__$1;
var G__8779_8795 = oldval;
var G__8780_8796 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8777_8793,G__8778_8794,G__8779_8795,G__8780_8796) : f.call(null,G__8777_8793,G__8778_8794,G__8779_8795,G__8780_8796));

var G__8797 = cljs.core.next(seq__8767__$1);
var G__8798 = null;
var G__8799 = (0);
var G__8800 = (0);
seq__8767 = G__8797;
chunk__8768 = G__8798;
count__8769 = G__8799;
i__8770 = G__8800;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__8804__delegate = function (x,p__8801){
var map__8803 = p__8801;
var map__8803__$1 = ((cljs.core.seq_QMARK_(map__8803))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8803):map__8803);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8803__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8803__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8804 = function (x,var_args){
var p__8801 = null;
if (arguments.length > 1) {
var G__8805__i = 0, G__8805__a = new Array(arguments.length -  1);
while (G__8805__i < G__8805__a.length) {G__8805__a[G__8805__i] = arguments[G__8805__i + 1]; ++G__8805__i;}
  p__8801 = new cljs.core.IndexedSeq(G__8805__a,0);
} 
return G__8804__delegate.call(this,x,p__8801);};
G__8804.cljs$lang$maxFixedArity = 1;
G__8804.cljs$lang$applyTo = (function (arglist__8806){
var x = cljs.core.first(arglist__8806);
var p__8801 = cljs.core.rest(arglist__8806);
return G__8804__delegate(x,p__8801);
});
G__8804.cljs$core$IFn$_invoke$arity$variadic = G__8804__delegate;
return G__8804;
})()
;
cljs$core$atom = function(x,var_args){
var p__8801 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__8807 = null;
if (arguments.length > 1) {
var G__8808__i = 0, G__8808__a = new Array(arguments.length -  1);
while (G__8808__i < G__8808__a.length) {G__8808__a[G__8808__i] = arguments[G__8808__i + 1]; ++G__8808__i;}
G__8807 = new cljs.core.IndexedSeq(G__8808__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8811 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8811) : validate.call(null,G__8811));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8812 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8812) : cljs.core.pr_str.call(null,G__8812));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8819 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8819) : f.call(null,G__8819));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8820 = a.state;
var G__8821 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8820,G__8821) : f.call(null,G__8820,G__8821));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8822 = a.state;
var G__8823 = x;
var G__8824 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8822,G__8823,G__8824) : f.call(null,G__8822,G__8823,G__8824));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__8825__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8825 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8826__i = 0, G__8826__a = new Array(arguments.length -  4);
while (G__8826__i < G__8826__a.length) {G__8826__a[G__8826__i] = arguments[G__8826__i + 4]; ++G__8826__i;}
  more = new cljs.core.IndexedSeq(G__8826__a,0);
} 
return G__8825__delegate.call(this,a,f,x,y,more);};
G__8825.cljs$lang$maxFixedArity = 4;
G__8825.cljs$lang$applyTo = (function (arglist__8827){
var a = cljs.core.first(arglist__8827);
arglist__8827 = cljs.core.next(arglist__8827);
var f = cljs.core.first(arglist__8827);
arglist__8827 = cljs.core.next(arglist__8827);
var x = cljs.core.first(arglist__8827);
arglist__8827 = cljs.core.next(arglist__8827);
var y = cljs.core.first(arglist__8827);
var more = cljs.core.rest(arglist__8827);
return G__8825__delegate(a,f,x,y,more);
});
G__8825.cljs$core$IFn$_invoke$arity$variadic = G__8825__delegate;
return G__8825;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__8828 = null;
if (arguments.length > 4) {
var G__8829__i = 0, G__8829__a = new Array(arguments.length -  4);
while (G__8829__i < G__8829__a.length) {G__8829__a[G__8829__i] = arguments[G__8829__i + 4]; ++G__8829__i;}
G__8828 = new cljs.core.IndexedSeq(G__8829__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8828);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8896 = null;
var G__8896__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8896__1 = (function (result){
var G__8863 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8863) : rf.call(null,G__8863));
});
var G__8896__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8864 = i;
var G__8865 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8864,G__8865) : f.call(null,G__8864,G__8865));
})();
if((v == null)){
return result;
} else {
var G__8866 = result;
var G__8867 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8866,G__8867) : rf.call(null,G__8866,G__8867));
}
});
G__8896 = function(result,input){
switch(arguments.length){
case 0:
return G__8896__0.call(this);
case 1:
return G__8896__1.call(this,result);
case 2:
return G__8896__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8896.cljs$core$IFn$_invoke$arity$0 = G__8896__0;
G__8896.cljs$core$IFn$_invoke$arity$1 = G__8896__1;
G__8896.cljs$core$IFn$_invoke$arity$2 = G__8896__2;
return G__8896;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5501__auto___8897 = size;
var i_8898 = (0);
while(true){
if((i_8898 < n__5501__auto___8897)){
var x_8899 = (function (){var G__8892 = (idx + i_8898);
var G__8893 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8898);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8892,G__8893) : f.call(null,G__8892,G__8893));
})();
if((x_8899 == null)){
} else {
cljs.core.chunk_append(b,x_8899);
}

var G__8900 = (i_8898 + (1));
i_8898 = G__8900;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8894 = idx;
var G__8895 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8894,G__8895) : f.call(null,G__8894,G__8895));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__9114 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9114) : p.call(null,G__9114));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9116 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9116) : p.call(null,G__9116));
})();
if(cljs.core.truth_(and__4604__auto__)){
var G__9117 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9117) : p.call(null,G__9117));
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9119 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9119) : p.call(null,G__9119));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9121 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9121) : p.call(null,G__9121));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var G__9122 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9122) : p.call(null,G__9122));
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__9291__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9291 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9292__i = 0, G__9292__a = new Array(arguments.length -  3);
while (G__9292__i < G__9292__a.length) {G__9292__a[G__9292__i] = arguments[G__9292__i + 3]; ++G__9292__i;}
  args = new cljs.core.IndexedSeq(G__9292__a,0);
} 
return G__9291__delegate.call(this,x,y,z,args);};
G__9291.cljs$lang$maxFixedArity = 3;
G__9291.cljs$lang$applyTo = (function (arglist__9293){
var x = cljs.core.first(arglist__9293);
arglist__9293 = cljs.core.next(arglist__9293);
var y = cljs.core.first(arglist__9293);
arglist__9293 = cljs.core.next(arglist__9293);
var z = cljs.core.first(arglist__9293);
var args = cljs.core.rest(arglist__9293);
return G__9291__delegate(x,y,z,args);
});
G__9291.cljs$core$IFn$_invoke$arity$variadic = G__9291__delegate;
return G__9291;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__9294 = null;
if (arguments.length > 3) {
var G__9295__i = 0, G__9295__a = new Array(arguments.length -  3);
while (G__9295__i < G__9295__a.length) {G__9295__a[G__9295__i] = arguments[G__9295__i + 3]; ++G__9295__i;}
G__9294 = new cljs.core.IndexedSeq(G__9295__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9154 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9154) : p1.call(null,G__9154));
})();
if(cljs.core.truth_(and__4604__auto__)){
var G__9155 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9155) : p2.call(null,G__9155));
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9157 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9157) : p1.call(null,G__9157));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9159 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9159) : p1.call(null,G__9159));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var and__4604__auto____$2 = (function (){var G__9161 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9161) : p2.call(null,G__9161));
})();
if(cljs.core.truth_(and__4604__auto____$2)){
var G__9162 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9162) : p2.call(null,G__9162));
} else {
return and__4604__auto____$2;
}
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9164 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9164) : p1.call(null,G__9164));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9166 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9166) : p1.call(null,G__9166));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var and__4604__auto____$2 = (function (){var G__9168 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9168) : p1.call(null,G__9168));
})();
if(cljs.core.truth_(and__4604__auto____$2)){
var and__4604__auto____$3 = (function (){var G__9170 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9170) : p2.call(null,G__9170));
})();
if(cljs.core.truth_(and__4604__auto____$3)){
var and__4604__auto____$4 = (function (){var G__9172 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9172) : p2.call(null,G__9172));
})();
if(cljs.core.truth_(and__4604__auto____$4)){
var G__9173 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9173) : p2.call(null,G__9173));
} else {
return and__4604__auto____$4;
}
} else {
return and__4604__auto____$3;
}
} else {
return and__4604__auto____$2;
}
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__9296__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8901_SHARP_){
var and__4604__auto__ = (function (){var G__9178 = p1__8901_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9178) : p1.call(null,G__9178));
})();
if(cljs.core.truth_(and__4604__auto__)){
var G__9179 = p1__8901_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9179) : p2.call(null,G__9179));
} else {
return and__4604__auto__;
}
}),args)));
};
var G__9296 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9297__i = 0, G__9297__a = new Array(arguments.length -  3);
while (G__9297__i < G__9297__a.length) {G__9297__a[G__9297__i] = arguments[G__9297__i + 3]; ++G__9297__i;}
  args = new cljs.core.IndexedSeq(G__9297__a,0);
} 
return G__9296__delegate.call(this,x,y,z,args);};
G__9296.cljs$lang$maxFixedArity = 3;
G__9296.cljs$lang$applyTo = (function (arglist__9298){
var x = cljs.core.first(arglist__9298);
arglist__9298 = cljs.core.next(arglist__9298);
var y = cljs.core.first(arglist__9298);
arglist__9298 = cljs.core.next(arglist__9298);
var z = cljs.core.first(arglist__9298);
var args = cljs.core.rest(arglist__9298);
return G__9296__delegate(x,y,z,args);
});
G__9296.cljs$core$IFn$_invoke$arity$variadic = G__9296__delegate;
return G__9296;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__9299 = null;
if (arguments.length > 3) {
var G__9300__i = 0, G__9300__a = new Array(arguments.length -  3);
while (G__9300__i < G__9300__a.length) {G__9300__a[G__9300__i] = arguments[G__9300__i + 3]; ++G__9300__i;}
G__9299 = new cljs.core.IndexedSeq(G__9300__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9225 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9225) : p1.call(null,G__9225));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9227 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9227) : p2.call(null,G__9227));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var G__9228 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9228) : p3.call(null,G__9228));
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9230 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9230) : p1.call(null,G__9230));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9232 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9232) : p2.call(null,G__9232));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var and__4604__auto____$2 = (function (){var G__9234 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9234) : p3.call(null,G__9234));
})();
if(cljs.core.truth_(and__4604__auto____$2)){
var and__4604__auto____$3 = (function (){var G__9236 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9236) : p1.call(null,G__9236));
})();
if(cljs.core.truth_(and__4604__auto____$3)){
var and__4604__auto____$4 = (function (){var G__9238 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9238) : p2.call(null,G__9238));
})();
if(cljs.core.truth_(and__4604__auto____$4)){
var G__9239 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9239) : p3.call(null,G__9239));
} else {
return and__4604__auto____$4;
}
} else {
return and__4604__auto____$3;
}
} else {
return and__4604__auto____$2;
}
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__4604__auto__ = (function (){var G__9241 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9241) : p1.call(null,G__9241));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9243 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9243) : p2.call(null,G__9243));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var and__4604__auto____$2 = (function (){var G__9245 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9245) : p3.call(null,G__9245));
})();
if(cljs.core.truth_(and__4604__auto____$2)){
var and__4604__auto____$3 = (function (){var G__9247 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9247) : p1.call(null,G__9247));
})();
if(cljs.core.truth_(and__4604__auto____$3)){
var and__4604__auto____$4 = (function (){var G__9249 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9249) : p2.call(null,G__9249));
})();
if(cljs.core.truth_(and__4604__auto____$4)){
var and__4604__auto____$5 = (function (){var G__9251 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9251) : p3.call(null,G__9251));
})();
if(cljs.core.truth_(and__4604__auto____$5)){
var and__4604__auto____$6 = (function (){var G__9253 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9253) : p1.call(null,G__9253));
})();
if(cljs.core.truth_(and__4604__auto____$6)){
var and__4604__auto____$7 = (function (){var G__9255 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9255) : p2.call(null,G__9255));
})();
if(cljs.core.truth_(and__4604__auto____$7)){
var G__9256 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9256) : p3.call(null,G__9256));
} else {
return and__4604__auto____$7;
}
} else {
return and__4604__auto____$6;
}
} else {
return and__4604__auto____$5;
}
} else {
return and__4604__auto____$4;
}
} else {
return and__4604__auto____$3;
}
} else {
return and__4604__auto____$2;
}
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__9301__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8902_SHARP_){
var and__4604__auto__ = (function (){var G__9263 = p1__8902_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9263) : p1.call(null,G__9263));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9265 = p1__8902_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9265) : p2.call(null,G__9265));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var G__9266 = p1__8902_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9266) : p3.call(null,G__9266));
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
}),args)));
};
var G__9301 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9302__i = 0, G__9302__a = new Array(arguments.length -  3);
while (G__9302__i < G__9302__a.length) {G__9302__a[G__9302__i] = arguments[G__9302__i + 3]; ++G__9302__i;}
  args = new cljs.core.IndexedSeq(G__9302__a,0);
} 
return G__9301__delegate.call(this,x,y,z,args);};
G__9301.cljs$lang$maxFixedArity = 3;
G__9301.cljs$lang$applyTo = (function (arglist__9303){
var x = cljs.core.first(arglist__9303);
arglist__9303 = cljs.core.next(arglist__9303);
var y = cljs.core.first(arglist__9303);
arglist__9303 = cljs.core.next(arglist__9303);
var z = cljs.core.first(arglist__9303);
var args = cljs.core.rest(arglist__9303);
return G__9301__delegate(x,y,z,args);
});
G__9301.cljs$core$IFn$_invoke$arity$variadic = G__9301__delegate;
return G__9301;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__9304 = null;
if (arguments.length > 3) {
var G__9305__i = 0, G__9305__a = new Array(arguments.length -  3);
while (G__9305__i < G__9305__a.length) {G__9305__a[G__9305__i] = arguments[G__9305__i + 3]; ++G__9305__i;}
G__9304 = new cljs.core.IndexedSeq(G__9305__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__9306__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8903_SHARP_){
var G__9282 = x;
return (p1__8903_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8903_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9282) : p1__8903_SHARP_.call(null,G__9282));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8904_SHARP_){
var and__4604__auto__ = (function (){var G__9284 = x;
return (p1__8904_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8904_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9284) : p1__8904_SHARP_.call(null,G__9284));
})();
if(cljs.core.truth_(and__4604__auto__)){
var G__9285 = y;
return (p1__8904_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8904_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9285) : p1__8904_SHARP_.call(null,G__9285));
} else {
return and__4604__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8905_SHARP_){
var and__4604__auto__ = (function (){var G__9287 = x;
return (p1__8905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9287) : p1__8905_SHARP_.call(null,G__9287));
})();
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__9289 = y;
return (p1__8905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9289) : p1__8905_SHARP_.call(null,G__9289));
})();
if(cljs.core.truth_(and__4604__auto____$1)){
var G__9290 = z;
return (p1__8905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9290) : p1__8905_SHARP_.call(null,G__9290));
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__9307__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8906_SHARP_){
return cljs.core.every_QMARK_(p1__8906_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9307 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9308__i = 0, G__9308__a = new Array(arguments.length -  3);
while (G__9308__i < G__9308__a.length) {G__9308__a[G__9308__i] = arguments[G__9308__i + 3]; ++G__9308__i;}
  args = new cljs.core.IndexedSeq(G__9308__a,0);
} 
return G__9307__delegate.call(this,x,y,z,args);};
G__9307.cljs$lang$maxFixedArity = 3;
G__9307.cljs$lang$applyTo = (function (arglist__9309){
var x = cljs.core.first(arglist__9309);
arglist__9309 = cljs.core.next(arglist__9309);
var y = cljs.core.first(arglist__9309);
arglist__9309 = cljs.core.next(arglist__9309);
var z = cljs.core.first(arglist__9309);
var args = cljs.core.rest(arglist__9309);
return G__9307__delegate(x,y,z,args);
});
G__9307.cljs$core$IFn$_invoke$arity$variadic = G__9307__delegate;
return G__9307;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__9310 = null;
if (arguments.length > 3) {
var G__9311__i = 0, G__9311__a = new Array(arguments.length -  3);
while (G__9311__i < G__9311__a.length) {G__9311__a[G__9311__i] = arguments[G__9311__i + 3]; ++G__9311__i;}
G__9310 = new cljs.core.IndexedSeq(G__9311__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__9306 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9312__i = 0, G__9312__a = new Array(arguments.length -  3);
while (G__9312__i < G__9312__a.length) {G__9312__a[G__9312__i] = arguments[G__9312__i + 3]; ++G__9312__i;}
  ps = new cljs.core.IndexedSeq(G__9312__a,0);
} 
return G__9306__delegate.call(this,p1,p2,p3,ps);};
G__9306.cljs$lang$maxFixedArity = 3;
G__9306.cljs$lang$applyTo = (function (arglist__9313){
var p1 = cljs.core.first(arglist__9313);
arglist__9313 = cljs.core.next(arglist__9313);
var p2 = cljs.core.first(arglist__9313);
arglist__9313 = cljs.core.next(arglist__9313);
var p3 = cljs.core.first(arglist__9313);
var ps = cljs.core.rest(arglist__9313);
return G__9306__delegate(p1,p2,p3,ps);
});
G__9306.cljs$core$IFn$_invoke$arity$variadic = G__9306__delegate;
return G__9306;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__9314 = null;
if (arguments.length > 3) {
var G__9315__i = 0, G__9315__a = new Array(arguments.length -  3);
while (G__9315__i < G__9315__a.length) {G__9315__a[G__9315__i] = arguments[G__9315__i + 3]; ++G__9315__i;}
G__9314 = new cljs.core.IndexedSeq(G__9315__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__9521 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9521) : p.call(null,G__9521));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__4616__auto__ = (function (){var G__9523 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9523) : p.call(null,G__9523));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var G__9524 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9524) : p.call(null,G__9524));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__4616__auto__ = (function (){var G__9526 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9526) : p.call(null,G__9526));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9528 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9528) : p.call(null,G__9528));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var G__9529 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9529) : p.call(null,G__9529));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__9690__delegate = function (x,y,z,args){
var or__4616__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9690 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9691__i = 0, G__9691__a = new Array(arguments.length -  3);
while (G__9691__i < G__9691__a.length) {G__9691__a[G__9691__i] = arguments[G__9691__i + 3]; ++G__9691__i;}
  args = new cljs.core.IndexedSeq(G__9691__a,0);
} 
return G__9690__delegate.call(this,x,y,z,args);};
G__9690.cljs$lang$maxFixedArity = 3;
G__9690.cljs$lang$applyTo = (function (arglist__9692){
var x = cljs.core.first(arglist__9692);
arglist__9692 = cljs.core.next(arglist__9692);
var y = cljs.core.first(arglist__9692);
arglist__9692 = cljs.core.next(arglist__9692);
var z = cljs.core.first(arglist__9692);
var args = cljs.core.rest(arglist__9692);
return G__9690__delegate(x,y,z,args);
});
G__9690.cljs$core$IFn$_invoke$arity$variadic = G__9690__delegate;
return G__9690;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__9693 = null;
if (arguments.length > 3) {
var G__9694__i = 0, G__9694__a = new Array(arguments.length -  3);
while (G__9694__i < G__9694__a.length) {G__9694__a[G__9694__i] = arguments[G__9694__i + 3]; ++G__9694__i;}
G__9693 = new cljs.core.IndexedSeq(G__9694__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9693);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__4616__auto__ = (function (){var G__9561 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9561) : p1.call(null,G__9561));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var G__9562 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9562) : p2.call(null,G__9562));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__4616__auto__ = (function (){var G__9564 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9564) : p1.call(null,G__9564));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9566 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9566) : p1.call(null,G__9566));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var or__4616__auto____$2 = (function (){var G__9568 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9568) : p2.call(null,G__9568));
})();
if(cljs.core.truth_(or__4616__auto____$2)){
return or__4616__auto____$2;
} else {
var G__9569 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9569) : p2.call(null,G__9569));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__4616__auto__ = (function (){var G__9571 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9571) : p1.call(null,G__9571));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9573 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9573) : p1.call(null,G__9573));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var or__4616__auto____$2 = (function (){var G__9575 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9575) : p1.call(null,G__9575));
})();
if(cljs.core.truth_(or__4616__auto____$2)){
return or__4616__auto____$2;
} else {
var or__4616__auto____$3 = (function (){var G__9577 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9577) : p2.call(null,G__9577));
})();
if(cljs.core.truth_(or__4616__auto____$3)){
return or__4616__auto____$3;
} else {
var or__4616__auto____$4 = (function (){var G__9579 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9579) : p2.call(null,G__9579));
})();
if(cljs.core.truth_(or__4616__auto____$4)){
return or__4616__auto____$4;
} else {
var G__9580 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9580) : p2.call(null,G__9580));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__9695__delegate = function (x,y,z,args){
var or__4616__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.some(((function (or__4616__auto__){
return (function (p1__9316_SHARP_){
var or__4616__auto____$1 = (function (){var G__9582 = p1__9316_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9582) : p1.call(null,G__9582));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var G__9583 = p1__9316_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9583) : p2.call(null,G__9583));
}
});})(or__4616__auto__))
,args);
}
};
var G__9695 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9696__i = 0, G__9696__a = new Array(arguments.length -  3);
while (G__9696__i < G__9696__a.length) {G__9696__a[G__9696__i] = arguments[G__9696__i + 3]; ++G__9696__i;}
  args = new cljs.core.IndexedSeq(G__9696__a,0);
} 
return G__9695__delegate.call(this,x,y,z,args);};
G__9695.cljs$lang$maxFixedArity = 3;
G__9695.cljs$lang$applyTo = (function (arglist__9697){
var x = cljs.core.first(arglist__9697);
arglist__9697 = cljs.core.next(arglist__9697);
var y = cljs.core.first(arglist__9697);
arglist__9697 = cljs.core.next(arglist__9697);
var z = cljs.core.first(arglist__9697);
var args = cljs.core.rest(arglist__9697);
return G__9695__delegate(x,y,z,args);
});
G__9695.cljs$core$IFn$_invoke$arity$variadic = G__9695__delegate;
return G__9695;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__9698 = null;
if (arguments.length > 3) {
var G__9699__i = 0, G__9699__a = new Array(arguments.length -  3);
while (G__9699__i < G__9699__a.length) {G__9699__a[G__9699__i] = arguments[G__9699__i + 3]; ++G__9699__i;}
G__9698 = new cljs.core.IndexedSeq(G__9699__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__4616__auto__ = (function (){var G__9629 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9629) : p1.call(null,G__9629));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9631 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9631) : p2.call(null,G__9631));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var G__9632 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9632) : p3.call(null,G__9632));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__4616__auto__ = (function (){var G__9634 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9634) : p1.call(null,G__9634));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9636 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9636) : p2.call(null,G__9636));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var or__4616__auto____$2 = (function (){var G__9638 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9638) : p3.call(null,G__9638));
})();
if(cljs.core.truth_(or__4616__auto____$2)){
return or__4616__auto____$2;
} else {
var or__4616__auto____$3 = (function (){var G__9640 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9640) : p1.call(null,G__9640));
})();
if(cljs.core.truth_(or__4616__auto____$3)){
return or__4616__auto____$3;
} else {
var or__4616__auto____$4 = (function (){var G__9642 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9642) : p2.call(null,G__9642));
})();
if(cljs.core.truth_(or__4616__auto____$4)){
return or__4616__auto____$4;
} else {
var G__9643 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9643) : p3.call(null,G__9643));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__4616__auto__ = (function (){var G__9645 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9645) : p1.call(null,G__9645));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9647 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9647) : p2.call(null,G__9647));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var or__4616__auto____$2 = (function (){var G__9649 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9649) : p3.call(null,G__9649));
})();
if(cljs.core.truth_(or__4616__auto____$2)){
return or__4616__auto____$2;
} else {
var or__4616__auto____$3 = (function (){var G__9651 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9651) : p1.call(null,G__9651));
})();
if(cljs.core.truth_(or__4616__auto____$3)){
return or__4616__auto____$3;
} else {
var or__4616__auto____$4 = (function (){var G__9653 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9653) : p2.call(null,G__9653));
})();
if(cljs.core.truth_(or__4616__auto____$4)){
return or__4616__auto____$4;
} else {
var or__4616__auto____$5 = (function (){var G__9655 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9655) : p3.call(null,G__9655));
})();
if(cljs.core.truth_(or__4616__auto____$5)){
return or__4616__auto____$5;
} else {
var or__4616__auto____$6 = (function (){var G__9657 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9657) : p1.call(null,G__9657));
})();
if(cljs.core.truth_(or__4616__auto____$6)){
return or__4616__auto____$6;
} else {
var or__4616__auto____$7 = (function (){var G__9659 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9659) : p2.call(null,G__9659));
})();
if(cljs.core.truth_(or__4616__auto____$7)){
return or__4616__auto____$7;
} else {
var G__9660 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9660) : p3.call(null,G__9660));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__9700__delegate = function (x,y,z,args){
var or__4616__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.some(((function (or__4616__auto__){
return (function (p1__9317_SHARP_){
var or__4616__auto____$1 = (function (){var G__9662 = p1__9317_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9662) : p1.call(null,G__9662));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var or__4616__auto____$2 = (function (){var G__9664 = p1__9317_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9664) : p2.call(null,G__9664));
})();
if(cljs.core.truth_(or__4616__auto____$2)){
return or__4616__auto____$2;
} else {
var G__9665 = p1__9317_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9665) : p3.call(null,G__9665));
}
}
});})(or__4616__auto__))
,args);
}
};
var G__9700 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9701__i = 0, G__9701__a = new Array(arguments.length -  3);
while (G__9701__i < G__9701__a.length) {G__9701__a[G__9701__i] = arguments[G__9701__i + 3]; ++G__9701__i;}
  args = new cljs.core.IndexedSeq(G__9701__a,0);
} 
return G__9700__delegate.call(this,x,y,z,args);};
G__9700.cljs$lang$maxFixedArity = 3;
G__9700.cljs$lang$applyTo = (function (arglist__9702){
var x = cljs.core.first(arglist__9702);
arglist__9702 = cljs.core.next(arglist__9702);
var y = cljs.core.first(arglist__9702);
arglist__9702 = cljs.core.next(arglist__9702);
var z = cljs.core.first(arglist__9702);
var args = cljs.core.rest(arglist__9702);
return G__9700__delegate(x,y,z,args);
});
G__9700.cljs$core$IFn$_invoke$arity$variadic = G__9700__delegate;
return G__9700;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__9703 = null;
if (arguments.length > 3) {
var G__9704__i = 0, G__9704__a = new Array(arguments.length -  3);
while (G__9704__i < G__9704__a.length) {G__9704__a[G__9704__i] = arguments[G__9704__i + 3]; ++G__9704__i;}
G__9703 = new cljs.core.IndexedSeq(G__9704__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__9705__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9318_SHARP_){
var G__9681 = x;
return (p1__9318_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9318_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9681) : p1__9318_SHARP_.call(null,G__9681));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9319_SHARP_){
var or__4616__auto__ = (function (){var G__9683 = x;
return (p1__9319_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9319_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9683) : p1__9319_SHARP_.call(null,G__9683));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var G__9684 = y;
return (p1__9319_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9319_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9684) : p1__9319_SHARP_.call(null,G__9684));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9320_SHARP_){
var or__4616__auto__ = (function (){var G__9686 = x;
return (p1__9320_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9320_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9686) : p1__9320_SHARP_.call(null,G__9686));
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var G__9688 = y;
return (p1__9320_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9320_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9688) : p1__9320_SHARP_.call(null,G__9688));
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var G__9689 = z;
return (p1__9320_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9320_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9689) : p1__9320_SHARP_.call(null,G__9689));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__9706__delegate = function (x,y,z,args){
var or__4616__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.some(((function (or__4616__auto__,ps__$1){
return (function (p1__9321_SHARP_){
return cljs.core.some(p1__9321_SHARP_,args);
});})(or__4616__auto__,ps__$1))
,ps__$1);
}
};
var G__9706 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9707__i = 0, G__9707__a = new Array(arguments.length -  3);
while (G__9707__i < G__9707__a.length) {G__9707__a[G__9707__i] = arguments[G__9707__i + 3]; ++G__9707__i;}
  args = new cljs.core.IndexedSeq(G__9707__a,0);
} 
return G__9706__delegate.call(this,x,y,z,args);};
G__9706.cljs$lang$maxFixedArity = 3;
G__9706.cljs$lang$applyTo = (function (arglist__9708){
var x = cljs.core.first(arglist__9708);
arglist__9708 = cljs.core.next(arglist__9708);
var y = cljs.core.first(arglist__9708);
arglist__9708 = cljs.core.next(arglist__9708);
var z = cljs.core.first(arglist__9708);
var args = cljs.core.rest(arglist__9708);
return G__9706__delegate(x,y,z,args);
});
G__9706.cljs$core$IFn$_invoke$arity$variadic = G__9706__delegate;
return G__9706;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__9709 = null;
if (arguments.length > 3) {
var G__9710__i = 0, G__9710__a = new Array(arguments.length -  3);
while (G__9710__i < G__9710__a.length) {G__9710__a[G__9710__i] = arguments[G__9710__i + 3]; ++G__9710__i;}
G__9709 = new cljs.core.IndexedSeq(G__9710__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__9705 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9711__i = 0, G__9711__a = new Array(arguments.length -  3);
while (G__9711__i < G__9711__a.length) {G__9711__a[G__9711__i] = arguments[G__9711__i + 3]; ++G__9711__i;}
  ps = new cljs.core.IndexedSeq(G__9711__a,0);
} 
return G__9705__delegate.call(this,p1,p2,p3,ps);};
G__9705.cljs$lang$maxFixedArity = 3;
G__9705.cljs$lang$applyTo = (function (arglist__9712){
var p1 = cljs.core.first(arglist__9712);
arglist__9712 = cljs.core.next(arglist__9712);
var p2 = cljs.core.first(arglist__9712);
arglist__9712 = cljs.core.next(arglist__9712);
var p3 = cljs.core.first(arglist__9712);
var ps = cljs.core.rest(arglist__9712);
return G__9705__delegate(p1,p2,p3,ps);
});
G__9705.cljs$core$IFn$_invoke$arity$variadic = G__9705__delegate;
return G__9705;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__9713 = null;
if (arguments.length > 3) {
var G__9714__i = 0, G__9714__a = new Array(arguments.length -  3);
while (G__9714__i < G__9714__a.length) {G__9714__a[G__9714__i] = arguments[G__9714__i + 3]; ++G__9714__i;}
G__9713 = new cljs.core.IndexedSeq(G__9714__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__9769 = null;
var G__9769__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9769__1 = (function (result){
var G__9755 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9755) : rf.call(null,G__9755));
});
var G__9769__2 = (function (result,input){
var G__9756 = result;
var G__9757 = (function (){var G__9758 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9758) : f.call(null,G__9758));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9756,G__9757) : rf.call(null,G__9756,G__9757));
});
var G__9769__3 = (function() { 
var G__9770__delegate = function (result,input,inputs){
var G__9759 = result;
var G__9760 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9759,G__9760) : rf.call(null,G__9759,G__9760));
};
var G__9770 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9771__i = 0, G__9771__a = new Array(arguments.length -  2);
while (G__9771__i < G__9771__a.length) {G__9771__a[G__9771__i] = arguments[G__9771__i + 2]; ++G__9771__i;}
  inputs = new cljs.core.IndexedSeq(G__9771__a,0);
} 
return G__9770__delegate.call(this,result,input,inputs);};
G__9770.cljs$lang$maxFixedArity = 2;
G__9770.cljs$lang$applyTo = (function (arglist__9772){
var result = cljs.core.first(arglist__9772);
arglist__9772 = cljs.core.next(arglist__9772);
var input = cljs.core.first(arglist__9772);
var inputs = cljs.core.rest(arglist__9772);
return G__9770__delegate(result,input,inputs);
});
G__9770.cljs$core$IFn$_invoke$arity$variadic = G__9770__delegate;
return G__9770;
})()
;
G__9769 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9769__0.call(this);
case 1:
return G__9769__1.call(this,result);
case 2:
return G__9769__2.call(this,result,input);
default:
var G__9773 = null;
if (arguments.length > 2) {
var G__9774__i = 0, G__9774__a = new Array(arguments.length -  2);
while (G__9774__i < G__9774__a.length) {G__9774__a[G__9774__i] = arguments[G__9774__i + 2]; ++G__9774__i;}
G__9773 = new cljs.core.IndexedSeq(G__9774__a,0);
}
return G__9769__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9769.cljs$lang$maxFixedArity = 2;
G__9769.cljs$lang$applyTo = G__9769__3.cljs$lang$applyTo;
G__9769.cljs$core$IFn$_invoke$arity$0 = G__9769__0;
G__9769.cljs$core$IFn$_invoke$arity$1 = G__9769__1;
G__9769.cljs$core$IFn$_invoke$arity$2 = G__9769__2;
G__9769.cljs$core$IFn$_invoke$arity$variadic = G__9769__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9769;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5501__auto___9775 = size;
var i_9776 = (0);
while(true){
if((i_9776 < n__5501__auto___9775)){
cljs.core.chunk_append(b,(function (){var G__9761 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9776);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9761) : f.call(null,G__9761));
})());

var G__9777 = (i_9776 + (1));
i_9776 = G__9777;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9762 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9762) : f.call(null,G__9762));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9763 = cljs.core.first(s1);
var G__9764 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9763,G__9764) : f.call(null,G__9763,G__9764));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9765 = cljs.core.first(s1);
var G__9766 = cljs.core.first(s2);
var G__9767 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9765,G__9766,G__9767) : f.call(null,G__9765,G__9766,G__9767));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__9778__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9715_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9715_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9778 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9779__i = 0, G__9779__a = new Array(arguments.length -  4);
while (G__9779__i < G__9779__a.length) {G__9779__a[G__9779__i] = arguments[G__9779__i + 4]; ++G__9779__i;}
  colls = new cljs.core.IndexedSeq(G__9779__a,0);
} 
return G__9778__delegate.call(this,f,c1,c2,c3,colls);};
G__9778.cljs$lang$maxFixedArity = 4;
G__9778.cljs$lang$applyTo = (function (arglist__9780){
var f = cljs.core.first(arglist__9780);
arglist__9780 = cljs.core.next(arglist__9780);
var c1 = cljs.core.first(arglist__9780);
arglist__9780 = cljs.core.next(arglist__9780);
var c2 = cljs.core.first(arglist__9780);
arglist__9780 = cljs.core.next(arglist__9780);
var c3 = cljs.core.first(arglist__9780);
var colls = cljs.core.rest(arglist__9780);
return G__9778__delegate(f,c1,c2,c3,colls);
});
G__9778.cljs$core$IFn$_invoke$arity$variadic = G__9778__delegate;
return G__9778;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__9781 = null;
if (arguments.length > 4) {
var G__9782__i = 0, G__9782__a = new Array(arguments.length -  4);
while (G__9782__i < G__9782__a.length) {G__9782__a[G__9782__i] = arguments[G__9782__i + 4]; ++G__9782__i;}
G__9781 = new cljs.core.IndexedSeq(G__9782__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9791 = null;
var G__9791__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9791__1 = (function (result){
var G__9788 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9788) : rf.call(null,G__9788));
});
var G__9791__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9789 = result;
var G__9790 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9789,G__9790) : rf.call(null,G__9789,G__9790));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9791 = function(result,input){
switch(arguments.length){
case 0:
return G__9791__0.call(this);
case 1:
return G__9791__1.call(this,result);
case 2:
return G__9791__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9791.cljs$core$IFn$_invoke$arity$0 = G__9791__0;
G__9791.cljs$core$IFn$_invoke$arity$1 = G__9791__1;
G__9791.cljs$core$IFn$_invoke$arity$2 = G__9791__2;
return G__9791;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9798 = null;
var G__9798__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9798__1 = (function (result){
var G__9795 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9795) : rf.call(null,G__9795));
});
var G__9798__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9796 = result;
var G__9797 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9796,G__9797) : rf.call(null,G__9796,G__9797));
}
});
G__9798 = function(result,input){
switch(arguments.length){
case 0:
return G__9798__0.call(this);
case 1:
return G__9798__1.call(this,result);
case 2:
return G__9798__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9798.cljs$core$IFn$_invoke$arity$0 = G__9798__0;
G__9798.cljs$core$IFn$_invoke$arity$1 = G__9798__1;
G__9798.cljs$core$IFn$_invoke$arity$2 = G__9798__2;
return G__9798;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9799 = (n__$1 - (1));
var G__9800 = cljs.core.rest(s);
n__$1 = G__9799;
coll__$1 = G__9800;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9803 = cljs.core.next(s);
var G__9804 = cljs.core.next(lead);
s = G__9803;
lead = G__9804;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9817 = null;
var G__9817__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9817__1 = (function (result){
var G__9811 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9811) : rf.call(null,G__9811));
});
var G__9817__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__4604__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__4604__auto__)){
var G__9812 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9812) : pred.call(null,G__9812));
} else {
return and__4604__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9813 = result;
var G__9814 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9813,G__9814) : rf.call(null,G__9813,G__9814));
}
});
G__9817 = function(result,input){
switch(arguments.length){
case 0:
return G__9817__0.call(this);
case 1:
return G__9817__1.call(this,result);
case 2:
return G__9817__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9817.cljs$core$IFn$_invoke$arity$0 = G__9817__0;
G__9817.cljs$core$IFn$_invoke$arity$1 = G__9817__1;
G__9817.cljs$core$IFn$_invoke$arity$2 = G__9817__2;
return G__9817;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__4604__auto__ = s;
if(and__4604__auto__){
var G__9816 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9816) : pred__$1.call(null,G__9816));
} else {
return and__4604__auto__;
}
})())){
var G__9818 = pred__$1;
var G__9819 = cljs.core.rest(s);
pred__$1 = G__9818;
coll__$1 = G__9819;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__9828 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9828) : f.call(null,G__9828));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__9831__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9831 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9832__i = 0, G__9832__a = new Array(arguments.length -  2);
while (G__9832__i < G__9832__a.length) {G__9832__a[G__9832__i] = arguments[G__9832__i + 2]; ++G__9832__i;}
  colls = new cljs.core.IndexedSeq(G__9832__a,0);
} 
return G__9831__delegate.call(this,c1,c2,colls);};
G__9831.cljs$lang$maxFixedArity = 2;
G__9831.cljs$lang$applyTo = (function (arglist__9833){
var c1 = cljs.core.first(arglist__9833);
arglist__9833 = cljs.core.next(arglist__9833);
var c2 = cljs.core.first(arglist__9833);
var colls = cljs.core.rest(arglist__9833);
return G__9831__delegate(c1,c2,colls);
});
G__9831.cljs$core$IFn$_invoke$arity$variadic = G__9831__delegate;
return G__9831;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__9834 = null;
if (arguments.length > 2) {
var G__9835__i = 0, G__9835__a = new Array(arguments.length -  2);
while (G__9835__i < G__9835__a.length) {G__9835__a[G__9835__i] = arguments[G__9835__i + 2]; ++G__9835__i;}
G__9834 = new cljs.core.IndexedSeq(G__9835__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9834);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9850 = null;
var G__9850__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9850__1 = (function (result){
var G__9843 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9843) : rf.call(null,G__9843));
});
var G__9850__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9844 = result;
var G__9845 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9844,G__9845) : rf.call(null,G__9844,G__9845));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9846 = sepr;
var G__9847 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9846,G__9847) : rf.call(null,G__9846,G__9847));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9848 = result;
var G__9849 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9848,G__9849) : rf.call(null,G__9848,G__9849));
}
});
G__9850 = function(result,input){
switch(arguments.length){
case 0:
return G__9850__0.call(this);
case 1:
return G__9850__1.call(this,result);
case 2:
return G__9850__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9850.cljs$core$IFn$_invoke$arity$0 = G__9850__0;
G__9850.cljs$core$IFn$_invoke$arity$1 = G__9850__1;
G__9850.cljs$core$IFn$_invoke$arity$2 = G__9850__2;
return G__9850;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__9859__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9859 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9860__i = 0, G__9860__a = new Array(arguments.length -  1);
while (G__9860__i < G__9860__a.length) {G__9860__a[G__9860__i] = arguments[G__9860__i + 1]; ++G__9860__i;}
  colls = new cljs.core.IndexedSeq(G__9860__a,0);
} 
return G__9859__delegate.call(this,f,colls);};
G__9859.cljs$lang$maxFixedArity = 1;
G__9859.cljs$lang$applyTo = (function (arglist__9861){
var f = cljs.core.first(arglist__9861);
var colls = cljs.core.rest(arglist__9861);
return G__9859__delegate(f,colls);
});
G__9859.cljs$core$IFn$_invoke$arity$variadic = G__9859__delegate;
return G__9859;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__9862 = null;
if (arguments.length > 1) {
var G__9863__i = 0, G__9863__a = new Array(arguments.length -  1);
while (G__9863__i < G__9863__a.length) {G__9863__a[G__9863__i] = arguments[G__9863__i + 1]; ++G__9863__i;}
G__9862 = new cljs.core.IndexedSeq(G__9863__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9862);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9882 = null;
var G__9882__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9882__1 = (function (result){
var G__9876 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9876) : rf.call(null,G__9876));
});
var G__9882__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9877 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9877) : pred.call(null,G__9877));
})())){
var G__9878 = result;
var G__9879 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9878,G__9879) : rf.call(null,G__9878,G__9879));
} else {
return result;
}
});
G__9882 = function(result,input){
switch(arguments.length){
case 0:
return G__9882__0.call(this);
case 1:
return G__9882__1.call(this,result);
case 2:
return G__9882__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9882.cljs$core$IFn$_invoke$arity$0 = G__9882__0;
G__9882.cljs$core$IFn$_invoke$arity$1 = G__9882__1;
G__9882.cljs$core$IFn$_invoke$arity$2 = G__9882__2;
return G__9882;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__5501__auto___9883 = size;
var i_9884 = (0);
while(true){
if((i_9884 < n__5501__auto___9883)){
if(cljs.core.truth_((function (){var G__9880 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9884);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9880) : pred.call(null,G__9880));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9884));
} else {
}

var G__9885 = (i_9884 + (1));
i_9884 = G__9885;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9881 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9881) : pred.call(null,G__9881));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9892 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9892) : branch_QMARK_.call(null,G__9892));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__9893 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9893) : children.call(null,G__9893));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9894_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9894_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9897 = to;
if(G__9897){
var bit__5283__auto__ = (G__9897.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__5283__auto__) || (G__9897.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__9898 = to;
if(G__9898){
var bit__5283__auto__ = (G__9898.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__5283__auto__) || (G__9898.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9900 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9900) : f.call(null,G__9900));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__9901__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9901 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9902__i = 0, G__9902__a = new Array(arguments.length -  4);
while (G__9902__i < G__9902__a.length) {G__9902__a[G__9902__i] = arguments[G__9902__i + 4]; ++G__9902__i;}
  colls = new cljs.core.IndexedSeq(G__9902__a,0);
} 
return G__9901__delegate.call(this,f,c1,c2,c3,colls);};
G__9901.cljs$lang$maxFixedArity = 4;
G__9901.cljs$lang$applyTo = (function (arglist__9903){
var f = cljs.core.first(arglist__9903);
arglist__9903 = cljs.core.next(arglist__9903);
var c1 = cljs.core.first(arglist__9903);
arglist__9903 = cljs.core.next(arglist__9903);
var c2 = cljs.core.first(arglist__9903);
arglist__9903 = cljs.core.next(arglist__9903);
var c3 = cljs.core.first(arglist__9903);
var colls = cljs.core.rest(arglist__9903);
return G__9901__delegate(f,c1,c2,c3,colls);
});
G__9901.cljs$core$IFn$_invoke$arity$variadic = G__9901__delegate;
return G__9901;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__9904 = null;
if (arguments.length > 4) {
var G__9905__i = 0, G__9905__a = new Array(arguments.length -  4);
while (G__9905__i < G__9905__a.length) {G__9905__a[G__9905__i] = arguments[G__9905__i + 4]; ++G__9905__i;}
G__9904 = new cljs.core.IndexedSeq(G__9905__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9907 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9907) : pred.call(null,G__9907));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9922 = m__$1;
if(G__9922){
var bit__5290__auto__ = (G__9922.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__5290__auto__) || (G__9922.cljs$core$ILookup$)){
return true;
} else {
if((!G__9922.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9922);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9922);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9923 = sentinel;
var G__9924 = m__$2;
var G__9925 = cljs.core.next(ks__$1);
sentinel = G__9923;
m__$1 = G__9924;
ks__$1 = G__9925;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__9926,v){
var vec__9931 = p__9926;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9931,(0),null);
var ks = cljs.core.nthnext(vec__9931,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__9932,f){
var vec__9970 = p__9932;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9970,(0),null);
var ks = cljs.core.nthnext(vec__9970,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9971 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9971) : f.call(null,G__9971));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__9933,f,a){
var vec__9972 = p__9933;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9972,(0),null);
var ks = cljs.core.nthnext(vec__9972,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9973 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9974 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9973,G__9974) : f.call(null,G__9973,G__9974));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__9934,f,a,b){
var vec__9975 = p__9934;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9975,(0),null);
var ks = cljs.core.nthnext(vec__9975,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9976 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9977 = a;
var G__9978 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9976,G__9977,G__9978) : f.call(null,G__9976,G__9977,G__9978));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__9935,f,a,b,c){
var vec__9979 = p__9935;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9979,(0),null);
var ks = cljs.core.nthnext(vec__9979,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9980 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9981 = a;
var G__9982 = b;
var G__9983 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9980,G__9981,G__9982,G__9983) : f.call(null,G__9980,G__9981,G__9982,G__9983));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__9985__delegate = function (m,p__9936,f,a,b,c,args){
var vec__9984 = p__9936;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9984,(0),null);
var ks = cljs.core.nthnext(vec__9984,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9985 = function (m,p__9936,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9986__i = 0, G__9986__a = new Array(arguments.length -  6);
while (G__9986__i < G__9986__a.length) {G__9986__a[G__9986__i] = arguments[G__9986__i + 6]; ++G__9986__i;}
  args = new cljs.core.IndexedSeq(G__9986__a,0);
} 
return G__9985__delegate.call(this,m,p__9936,f,a,b,c,args);};
G__9985.cljs$lang$maxFixedArity = 6;
G__9985.cljs$lang$applyTo = (function (arglist__9987){
var m = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var p__9936 = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var f = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var a = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var b = cljs.core.first(arglist__9987);
arglist__9987 = cljs.core.next(arglist__9987);
var c = cljs.core.first(arglist__9987);
var args = cljs.core.rest(arglist__9987);
return G__9985__delegate(m,p__9936,f,a,b,c,args);
});
G__9985.cljs$core$IFn$_invoke$arity$variadic = G__9985__delegate;
return G__9985;
})()
;
cljs$core$update_in = function(m,p__9936,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__9936,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__9936,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__9936,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__9936,f,a,b,c);
default:
var G__9988 = null;
if (arguments.length > 6) {
var G__9989__i = 0, G__9989__a = new Array(arguments.length -  6);
while (G__9989__i < G__9989__a.length) {G__9989__a[G__9989__i] = arguments[G__9989__i + 6]; ++G__9989__i;}
G__9988 = new cljs.core.IndexedSeq(G__9989__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9936,f,a,b,c, G__9988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10000 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10000) : f.call(null,G__10000));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10001 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10002 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10001,G__10002) : f.call(null,G__10001,G__10002));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10003 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10004 = x;
var G__10005 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10003,G__10004,G__10005) : f.call(null,G__10003,G__10004,G__10005));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10006 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10007 = x;
var G__10008 = y;
var G__10009 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10006,G__10007,G__10008,G__10009) : f.call(null,G__10006,G__10007,G__10008,G__10009));
})());
});
var cljs$core$update__7 = (function() { 
var G__10010__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__10010 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__10011__i = 0, G__10011__a = new Array(arguments.length -  6);
while (G__10011__i < G__10011__a.length) {G__10011__a[G__10011__i] = arguments[G__10011__i + 6]; ++G__10011__i;}
  more = new cljs.core.IndexedSeq(G__10011__a,0);
} 
return G__10010__delegate.call(this,m,k,f,x,y,z,more);};
G__10010.cljs$lang$maxFixedArity = 6;
G__10010.cljs$lang$applyTo = (function (arglist__10012){
var m = cljs.core.first(arglist__10012);
arglist__10012 = cljs.core.next(arglist__10012);
var k = cljs.core.first(arglist__10012);
arglist__10012 = cljs.core.next(arglist__10012);
var f = cljs.core.first(arglist__10012);
arglist__10012 = cljs.core.next(arglist__10012);
var x = cljs.core.first(arglist__10012);
arglist__10012 = cljs.core.next(arglist__10012);
var y = cljs.core.first(arglist__10012);
arglist__10012 = cljs.core.next(arglist__10012);
var z = cljs.core.first(arglist__10012);
var more = cljs.core.rest(arglist__10012);
return G__10010__delegate(m,k,f,x,y,z,more);
});
G__10010.cljs$core$IFn$_invoke$arity$variadic = G__10010__delegate;
return G__10010;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__10013 = null;
if (arguments.length > 6) {
var G__10014__i = 0, G__10014__a = new Array(arguments.length -  6);
while (G__10014__i < G__10014__a.length) {G__10014__a[G__10014__i] = arguments[G__10014__i + 6]; ++G__10014__i;}
G__10013 = new cljs.core.IndexedSeq(G__10014__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__10013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__10015 = (ll - (5));
var G__10016 = r;
ll = G__10015;
ret = G__10016;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10021 = cljs.core.pv_aget(node,(0));
var G__10022 = (level - (5));
node = G__10021;
level = G__10022;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__10023 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__10024 = (level - (5));
node = G__10023;
level = G__10024;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10034 = init__$2;
var G__10035 = (j + i);
var G__10036 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10034,G__10035,G__10036) : f.call(null,G__10034,G__10035,G__10036));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10047 = (j + (1));
var G__10048 = init__$3;
j = G__10047;
init__$2 = G__10048;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10037 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10037) : cljs.core.deref.call(null,G__10037));
} else {
var G__10049 = (i + len);
var G__10050 = init__$2;
i = G__10049;
init__$1 = G__10050;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__10038 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__10038) : cljs.core.tv_editable_root.call(null,G__10038));
})(),(function (){var G__10039 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__10039) : cljs.core.tv_editable_tail.call(null,G__10039));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__10040 = init__$2;
var G__10041 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10040,G__10041) : f.call(null,G__10040,G__10041));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__10051 = (j + (1));
var G__10052 = init__$3;
j = G__10051;
init__$2 = G__10052;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10042 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10042) : cljs.core.deref.call(null,G__10042));
} else {
var G__10053 = (i + len);
var G__10054 = init__$2;
i = G__10053;
init__$1 = G__10054;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__10043 = coll__$1;
var G__10044 = cljs.core.first_array_for_longvec(coll__$1);
var G__10045 = (0);
var G__10046 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10043,G__10044,G__10045,G__10046) : cljs.core.chunked_seq.call(null,G__10043,G__10044,G__10045,G__10046));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__5501__auto___10055 = len;
var i_10056 = (0);
while(true){
if((i_10056 < n__5501__auto___10055)){
(new_tail[i_10056] = (self__.tail[i_10056]));

var G__10057 = (i_10056 + (1));
i_10056 = G__10057;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__10058 = null;
var G__10058__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10058__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10058 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10058__2.call(this,self__,k);
case 3:
return G__10058__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10058.cljs$core$IFn$_invoke$arity$2 = G__10058__2;
G__10058.cljs$core$IFn$_invoke$arity$3 = G__10058__3;
return G__10058;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args10033){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10033)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__10059 = (i + (1));
var G__10060 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__10059;
out = G__10060;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10061__i = 0, G__10061__a = new Array(arguments.length -  0);
while (G__10061__i < G__10061__a.length) {G__10061__a[G__10061__i] = arguments[G__10061__i + 0]; ++G__10061__i;}
  args = new cljs.core.IndexedSeq(G__10061__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__10062){
var args = cljs.core.seq(arglist__10062);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10063 = self__.vec;
var G__10064 = self__.node;
var G__10065 = self__.i;
var G__10066 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10063,G__10064,G__10065,G__10066) : cljs.core.chunked_seq.call(null,G__10063,G__10064,G__10065,G__10066));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__10067 = self__.vec;
var G__10068 = (self__.i + self__.off);
var G__10069 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10067,G__10068,G__10069) : cljs.core.subvec.call(null,G__10067,G__10068,G__10069));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__10070 = self__.vec;
var G__10071 = (self__.i + self__.off);
var G__10072 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10070,G__10071,G__10072) : cljs.core.subvec.call(null,G__10070,G__10071,G__10072));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__10073 = self__.vec;
var G__10074 = self__.node;
var G__10075 = self__.i;
var G__10076 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10073,G__10074,G__10075,G__10076) : cljs.core.chunked_seq.call(null,G__10073,G__10074,G__10075,G__10076));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10077 = self__.vec;
var G__10078 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10079 = end;
var G__10080 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10077,G__10078,G__10079,G__10080) : cljs.core.chunked_seq.call(null,G__10077,G__10078,G__10079,G__10080));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__10081 = self__.vec;
var G__10082 = self__.node;
var G__10083 = self__.i;
var G__10084 = self__.off;
var G__10085 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__10081,G__10082,G__10083,G__10084,G__10085) : cljs.core.chunked_seq.call(null,G__10081,G__10082,G__10083,G__10084,G__10085));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__10086 = self__.vec;
var G__10087 = cljs.core.unchecked_array_for(self__.vec,end);
var G__10088 = end;
var G__10089 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10086,G__10087,G__10088,G__10089) : cljs.core.chunked_seq.call(null,G__10086,G__10087,G__10088,G__10089));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__10091 = init__$1;
var G__10092 = j;
var G__10093 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10091,G__10092,G__10093) : f.call(null,G__10091,G__10092,G__10093));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10094 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10094) : cljs.core.deref.call(null,G__10094));
} else {
var G__10116 = (i + (1));
var G__10117 = (j + (1));
var G__10118 = init__$2;
i = G__10116;
j = G__10117;
init__$1 = G__10118;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__10095 = self__.meta;
var G__10096 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__10097 = self__.start;
var G__10098 = (function (){var x__4928__auto__ = self__.end;
var y__4929__auto__ = (v_pos + (1));
return ((x__4928__auto__ > y__4929__auto__) ? x__4928__auto__ : y__4929__auto__);
})();
var G__10099 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10095,G__10096,G__10097,G__10098,G__10099) : cljs.core.build_subvec.call(null,G__10095,G__10096,G__10097,G__10098,G__10099));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__10100 = self__.meta;
var G__10101 = self__.v;
var G__10102 = self__.start;
var G__10103 = (self__.end - (1));
var G__10104 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10100,G__10101,G__10102,G__10103,G__10104) : cljs.core.build_subvec.call(null,G__10100,G__10101,G__10102,G__10103,G__10104));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__10106 = meta__$1;
var G__10107 = self__.v;
var G__10108 = self__.start;
var G__10109 = self__.end;
var G__10110 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10106,G__10107,G__10108,G__10109,G__10110) : cljs.core.build_subvec.call(null,G__10106,G__10107,G__10108,G__10109,G__10110));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10111 = self__.meta;
var G__10112 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__10113 = self__.start;
var G__10114 = (self__.end + (1));
var G__10115 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10111,G__10112,G__10113,G__10114,G__10115) : cljs.core.build_subvec.call(null,G__10111,G__10112,G__10113,G__10114,G__10115));
});

cljs.core.Subvec.prototype.call = (function() {
var G__10119 = null;
var G__10119__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__10119__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__10119 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10119__2.call(this,self__,k);
case 3:
return G__10119__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10119.cljs$core$IFn$_invoke$arity$2 = G__10119__2;
G__10119.cljs$core$IFn$_invoke$arity$3 = G__10119__3;
return G__10119;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args10090){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10090)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__10120 = meta;
var G__10121 = v.v;
var G__10122 = (v.start + start);
var G__10123 = (v.start + end);
var G__10124 = __hash;
meta = G__10120;
v = G__10121;
start = G__10122;
end = G__10123;
__hash = G__10124;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj10131 = {};
return obj10131;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__10139 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__10140 = (level - (5));
node = G__10139;
level = G__10140;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10144 = null;
var G__10144__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10144__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10144 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10144__2.call(this,self__,k);
case 3:
return G__10144__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10144.cljs$core$IFn$_invoke$arity$2 = G__10144__2;
G__10144.cljs$core$IFn$_invoke$arity$3 = G__10144__3;
return G__10144;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10141){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10141)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__4616__auto__ = self__.front;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4616__auto__ = self__.rear;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10145 = (i + incr);
i = G__10145;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10146 = (i + (1));
var G__10147 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10146;
out = G__10147;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj10151 = {};
return obj10151;
})();
var l = ks.length;
var i_10152 = (0);
while(true){
if((i_10152 < l)){
var k_10153 = (ks[i_10152]);
(new_obj[k_10153] = (obj[k_10153]));

var G__10154 = (i_10152 + (1));
i_10152 = G__10154;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4604__auto__ = (function (){var G__10158 = k;
return goog.isString(G__10158);
})();
if(cljs.core.truth_(and__4604__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4604__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10159 = init__$1;
var G__10160 = k;
var G__10161 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10159,G__10160,G__10161) : f.call(null,G__10159,G__10160,G__10161));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10162 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10162) : cljs.core.deref.call(null,G__10162));
} else {
var G__10168 = cljs.core.rest(keys__$1);
var G__10169 = init__$2;
keys__$1 = G__10168;
init__$1 = G__10169;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4604__auto__ = (function (){var G__10164 = k;
return goog.isString(G__10164);
})();
if(cljs.core.truth_(and__4604__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4604__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10165 = k;
return goog.isString(G__10165);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__4604__auto__ = (function (){var G__10167 = k;
return goog.isString(G__10167);
})();
if(cljs.core.truth_(and__4604__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__4604__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10155_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10155_SHARP_,(self__.strobj[p1__10155_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10170 = null;
var G__10170__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10170__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10170 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10170__2.call(this,self__,k);
case 3:
return G__10170__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10170.cljs$core$IFn$_invoke$arity$2 = G__10170__2;
G__10170.cljs$core$IFn$_invoke$arity$3 = G__10170__3;
return G__10170;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10156){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10156)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10172 = {};
return obj10172;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10173 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10173,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10173,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10174 = (i + (2));
i = G__10174;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10175 = (i + (2));
i = G__10175;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10176 = (i + (2));
i = G__10176;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10177 = (i + (2));
i = G__10177;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10178 = (i + (2));
i = G__10178;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__4616__auto__ = (function (){var G__10182 = k;
return goog.isString(G__10182);
})();
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10183 = (0);
while(true){
if((i_10183 < l)){
(narr[i_10183] = (arr[i_10183]));

var G__10184 = (i_10183 + (1));
i_10183 = G__10184;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10186 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10186) : cljs.core.keys.call(null,G__10186));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10187 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10187) : cljs.core.vals.call(null,G__10187));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10188 = cljs.core.seq(coll);
var chunk__10189 = null;
var count__10190 = (0);
var i__10191 = (0);
while(true){
if((i__10191 < count__10190)){
var vec__10192 = chunk__10189.cljs$core$IIndexed$_nth$arity$2(null,i__10191);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10192,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10192,(1),null);
var G__10193_10206 = v;
var G__10194_10207 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10193_10206,G__10194_10207) : f.call(null,G__10193_10206,G__10194_10207));

var G__10208 = seq__10188;
var G__10209 = chunk__10189;
var G__10210 = count__10190;
var G__10211 = (i__10191 + (1));
seq__10188 = G__10208;
chunk__10189 = G__10209;
count__10190 = G__10210;
i__10191 = G__10211;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10188);
if(temp__4126__auto__){
var seq__10188__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10188__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10188__$1);
var G__10212 = cljs.core.chunk_rest(seq__10188__$1);
var G__10213 = c__5401__auto__;
var G__10214 = cljs.core.count(c__5401__auto__);
var G__10215 = (0);
seq__10188 = G__10212;
chunk__10189 = G__10213;
count__10190 = G__10214;
i__10191 = G__10215;
continue;
} else {
var vec__10195 = cljs.core.first(seq__10188__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10195,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10195,(1),null);
var G__10196_10216 = v;
var G__10197_10217 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10196_10216,G__10197_10217) : f.call(null,G__10196_10216,G__10197_10217));

var G__10218 = cljs.core.next(seq__10188__$1);
var G__10219 = null;
var G__10220 = (0);
var G__10221 = (0);
seq__10188 = G__10218;
chunk__10189 = G__10219;
count__10190 = G__10220;
i__10191 = G__10221;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10198 = init__$1;
var G__10199 = (self__.arr[i]);
var G__10200 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10198,G__10199,G__10200) : f.call(null,G__10198,G__10199,G__10200));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10201 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10201) : cljs.core.deref.call(null,G__10201));
} else {
var G__10222 = (i + (2));
var G__10223 = init__$2;
i = G__10222;
init__$1 = G__10223;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10202 = other;
if(G__10202){
var bit__5283__auto__ = (G__10202.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__5283__auto__) || (G__10202.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10224 = (i + (2));
i = G__10224;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10204 = {};
return obj10204;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10225 = (s + (2));
var G__10226 = d;
s = G__10225;
d = G__10226;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10227 = (s + (2));
var G__10228 = (d + (2));
s = G__10227;
d = G__10228;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10205 = cljs.core.aclone(self__.arr);
(G__10205[(idx + (1))] = v);

return G__10205;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10229 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10230 = cljs.core.next(es);
ret = G__10229;
es = G__10230;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10231 = null;
var G__10231__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10231__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10231 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10231__2.call(this,self__,k);
case 3:
return G__10231__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10231.cljs$core$IFn$_invoke$arity$2 = G__10231__2;
G__10231.cljs$core$IFn$_invoke$arity$3 = G__10231__3;
return G__10231;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10185){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10185)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10232 = (i + (2));
var G__10233 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10232;
ret = G__10233;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10234_10242 = self__.arr;
G__10234_10242.pop();

G__10234_10242.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10235 = self__.len;
var G__10236 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10235,G__10236) : cljs.core.array__GT_transient_hash_map.call(null,G__10235,G__10236));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10237 = o;
if(G__10237){
var bit__5290__auto__ = (G__10237.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__5290__auto__) || (G__10237.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10237.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10237);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10237);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10238 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10238) : cljs.core.key.call(null,G__10238));
})(),(function (){var G__10239 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10239) : cljs.core.val.call(null,G__10239));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10243 = cljs.core.next(es);
var G__10244 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10240 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10240) : cljs.core.key.call(null,G__10240));
})(),(function (){var G__10241 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10241) : cljs.core.val.call(null,G__10241));
})());
es = G__10243;
tcoll__$2 = G__10244;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10245 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10246 = (i + (2));
out = G__10245;
i = G__10246;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__10249 = cljs.core.aclone(arr);
(G__10249[i] = a);

return G__10249;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__10250 = cljs.core.aclone(arr);
(G__10250[i] = a);

(G__10250[j] = b);

return G__10250;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10255 = init__$1;
var G__10256 = k;
var G__10257 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10255,G__10256,G__10257) : f.call(null,G__10255,G__10256,G__10257));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10258 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10258) : cljs.core.deref.call(null,G__10258));
} else {
var G__10259 = (i + (2));
var G__10260 = init__$2;
i = G__10259;
init__$1 = G__10260;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10261 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10261) : cljs.core.create_inode_seq.call(null,G__10261));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10275 = (0);
var j_10276 = (0);
while(true){
if((i_10275 < (32))){
if((((self__.bitmap >>> i_10275) & (1)) === (0))){
var G__10277 = (i_10275 + (1));
var G__10278 = j_10276;
i_10275 = G__10277;
j_10276 = G__10278;
continue;
} else {
(nodes[i_10275] = ((!(((self__.arr[j_10276]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10276])),(self__.arr[j_10276]),(self__.arr[(j_10276 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10276 + (1))])));

var G__10279 = (i_10275 + (1));
var G__10280 = (j_10276 + (2));
i_10275 = G__10279;
j_10276 = G__10280;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10262 = edit__$1;
var G__10263 = (shift + (5));
var G__10264 = key_or_nil;
var G__10265 = val_or_node;
var G__10266 = hash;
var G__10267 = key;
var G__10268 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268) : cljs.core.create_node.call(null,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10281 = (0);
var j_10282 = (0);
while(true){
if((i_10281 < (32))){
if((((self__.bitmap >>> i_10281) & (1)) === (0))){
var G__10283 = (i_10281 + (1));
var G__10284 = j_10282;
i_10281 = G__10283;
j_10282 = G__10284;
continue;
} else {
(nodes[i_10281] = ((!(((self__.arr[j_10282]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10282])),(self__.arr[j_10282]),(self__.arr[(j_10282 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10282 + (1))])));

var G__10285 = (i_10281 + (1));
var G__10286 = (j_10282 + (2));
i_10281 = G__10285;
j_10282 = G__10286;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10269 = (shift + (5));
var G__10270 = key_or_nil;
var G__10271 = val_or_node;
var G__10272 = hash;
var G__10273 = key;
var G__10274 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10269,G__10270,G__10271,G__10272,G__10273,G__10274) : cljs.core.create_node.call(null,G__10269,G__10270,G__10271,G__10272,G__10273,G__10274));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10287 = (i + (1));
var G__10288 = (j + (2));
var G__10289 = (bitmap | ((1) << i));
i = G__10287;
j = G__10288;
bitmap = G__10289;
continue;
} else {
var G__10290 = (i + (1));
var G__10291 = j;
var G__10292 = bitmap;
i = G__10290;
j = G__10291;
bitmap = G__10292;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10293 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10293) : cljs.core.create_array_node_seq.call(null,G__10293));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10294 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10294) : cljs.core.deref.call(null,G__10294));
} else {
var G__10295 = (i + (1));
var G__10296 = init__$2;
i = G__10295;
init__$1 = G__10296;
continue;
}
} else {
var G__10297 = (i + (1));
var G__10298 = init__$1;
i = G__10297;
init__$1 = G__10298;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10299 = (i + (2));
i = G__10299;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10300 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10300) : cljs.core.create_inode_seq.call(null,G__10300));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10301 = self__.nodes;
var G__10302 = (self__.i + (2));
var G__10303 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10301,G__10302,G__10303) : cljs.core.create_inode_seq.call(null,G__10301,G__10302,G__10303));
} else {
var G__10304 = self__.nodes;
var G__10305 = self__.i;
var G__10306 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10304,G__10305,G__10306) : cljs.core.create_inode_seq.call(null,G__10304,G__10305,G__10306));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10310 = (j + (2));
j = G__10310;
continue;
}
} else {
var G__10311 = (j + (2));
j = G__10311;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10312 = null;
var G__10313 = self__.nodes;
var G__10314 = self__.i;
var G__10315 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10312,G__10313,G__10314,G__10315) : cljs.core.create_array_node_seq.call(null,G__10312,G__10313,G__10314,G__10315));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10320 = (j + (1));
j = G__10320;
continue;
}
} else {
var G__10321 = (j + (1));
j = G__10321;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10323 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10323) : cljs.core.keys.call(null,G__10323));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10324 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10324) : cljs.core.vals.call(null,G__10324));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10325 = cljs.core.seq(coll);
var chunk__10326 = null;
var count__10327 = (0);
var i__10328 = (0);
while(true){
if((i__10328 < count__10327)){
var vec__10329 = chunk__10326.cljs$core$IIndexed$_nth$arity$2(null,i__10328);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10329,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10329,(1),null);
var G__10330_10341 = v;
var G__10331_10342 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10330_10341,G__10331_10342) : f.call(null,G__10330_10341,G__10331_10342));

var G__10343 = seq__10325;
var G__10344 = chunk__10326;
var G__10345 = count__10327;
var G__10346 = (i__10328 + (1));
seq__10325 = G__10343;
chunk__10326 = G__10344;
count__10327 = G__10345;
i__10328 = G__10346;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10325);
if(temp__4126__auto__){
var seq__10325__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10325__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10325__$1);
var G__10347 = cljs.core.chunk_rest(seq__10325__$1);
var G__10348 = c__5401__auto__;
var G__10349 = cljs.core.count(c__5401__auto__);
var G__10350 = (0);
seq__10325 = G__10347;
chunk__10326 = G__10348;
count__10327 = G__10349;
i__10328 = G__10350;
continue;
} else {
var vec__10332 = cljs.core.first(seq__10325__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10332,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10332,(1),null);
var G__10333_10351 = v;
var G__10334_10352 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10333_10351,G__10334_10352) : f.call(null,G__10333_10351,G__10334_10352));

var G__10353 = cljs.core.next(seq__10325__$1);
var G__10354 = null;
var G__10355 = (0);
var G__10356 = (0);
seq__10325 = G__10353;
chunk__10326 = G__10354;
count__10327 = G__10355;
i__10328 = G__10356;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10335 = init;
var G__10336 = null;
var G__10337 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10335,G__10336,G__10337) : f.call(null,G__10335,G__10336,G__10337));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10338 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10338) : cljs.core.deref.call(null,G__10338));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10340 = {};
return obj10340;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10357 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10358 = cljs.core.next(es);
ret = G__10357;
es = G__10358;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10359 = null;
var G__10359__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10359__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10359 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10359__2.call(this,self__,k);
case 3:
return G__10359__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10359.cljs$core$IFn$_invoke$arity$2 = G__10359__2;
G__10359.cljs$core$IFn$_invoke$arity$3 = G__10359__3;
return G__10359;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10322){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10322)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10360 = (i + (2));
var G__10361 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10360;
ret = G__10361;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10362 = (i + (1));
var G__10363 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10362;
out = G__10363;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10364 = o;
if(G__10364){
var bit__5290__auto__ = (G__10364.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__5290__auto__) || (G__10364.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10364.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10364);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10364);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10365 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10365) : cljs.core.key.call(null,G__10365));
})(),(function (){var G__10366 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10366) : cljs.core.val.call(null,G__10366));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10369 = cljs.core.next(es);
var G__10370 = tcoll__$1.assoc_BANG_((function (){var G__10367 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10367) : cljs.core.key.call(null,G__10367));
})(),(function (){var G__10368 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10368) : cljs.core.val.call(null,G__10368));
})());
es = G__10369;
tcoll__$1 = G__10370;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10371 = ((ascending_QMARK_)?t.left:t.right);
var G__10372 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10371;
stack__$1 = G__10372;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10385 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10385) : cljs.core.deref.call(null,G__10385));
} else {
var init__$2 = (function (){var G__10386 = init__$1;
var G__10387 = node.key;
var G__10388 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10386,G__10387,G__10388) : f.call(null,G__10386,G__10387,G__10388));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10389 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10389) : cljs.core.deref.call(null,G__10389));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10390 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10390) : cljs.core.deref.call(null,G__10390));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10392 = null;
var G__10392__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10392__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10392 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10392__2.call(this,self__,k);
case 3:
return G__10392__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10392.cljs$core$IFn$_invoke$arity$2 = G__10392__2;
G__10392.cljs$core$IFn$_invoke$arity$3 = G__10392__3;
return G__10392;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10391){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10391)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10394 = null;
var G__10394__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10394__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10394 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10394__2.call(this,self__,k);
case 3:
return G__10394__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10394.cljs$core$IFn$_invoke$arity$2 = G__10394__2;
G__10394.cljs$core$IFn$_invoke$arity$3 = G__10394__3;
return G__10394;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10393){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10393)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10407 = k;
var G__10408 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10407,G__10408) : comp.call(null,G__10407,G__10408));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10427 = k;
var G__10428 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10427,G__10428) : comp.call(null,G__10427,G__10428));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10439 = k;
var G__10440 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10439,G__10440) : comp.call(null,G__10439,G__10440));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10442 = cljs.core.seq(coll);
var chunk__10443 = null;
var count__10444 = (0);
var i__10445 = (0);
while(true){
if((i__10445 < count__10444)){
var vec__10446 = chunk__10443.cljs$core$IIndexed$_nth$arity$2(null,i__10445);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10446,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10446,(1),null);
var G__10447_10459 = v;
var G__10448_10460 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10447_10459,G__10448_10460) : f.call(null,G__10447_10459,G__10448_10460));

var G__10461 = seq__10442;
var G__10462 = chunk__10443;
var G__10463 = count__10444;
var G__10464 = (i__10445 + (1));
seq__10442 = G__10461;
chunk__10443 = G__10462;
count__10444 = G__10463;
i__10445 = G__10464;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10442);
if(temp__4126__auto__){
var seq__10442__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10442__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10442__$1);
var G__10465 = cljs.core.chunk_rest(seq__10442__$1);
var G__10466 = c__5401__auto__;
var G__10467 = cljs.core.count(c__5401__auto__);
var G__10468 = (0);
seq__10442 = G__10465;
chunk__10443 = G__10466;
count__10444 = G__10467;
i__10445 = G__10468;
continue;
} else {
var vec__10449 = cljs.core.first(seq__10442__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10449,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10449,(1),null);
var G__10450_10469 = v;
var G__10451_10470 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10450_10469,G__10451_10470) : f.call(null,G__10450_10469,G__10451_10470));

var G__10471 = cljs.core.next(seq__10442__$1);
var G__10472 = null;
var G__10473 = (0);
var G__10474 = (0);
seq__10442 = G__10471;
chunk__10443 = G__10472;
count__10444 = G__10473;
i__10445 = G__10474;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10452 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10452) : cljs.core.keys.call(null,G__10452));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10453 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10453) : cljs.core.vals.call(null,G__10453));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10454 = k;
var G__10455 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10454,G__10455) : self__.comp.call(null,G__10454,G__10455));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10475 = t.left;
t = G__10475;
continue;
} else {
var G__10476 = t.right;
t = G__10476;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10477 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10478 = cljs.core.next(es);
ret = G__10477;
es = G__10478;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10479 = null;
var G__10479__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10479__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10479 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10479__2.call(this,self__,k);
case 3:
return G__10479__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10479.cljs$core$IFn$_invoke$arity$2 = G__10479__2;
G__10479.cljs$core$IFn$_invoke$arity$3 = G__10479__3;
return G__10479;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10441){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10441)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10456 = k;
var G__10457 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10456,G__10457) : self__.comp.call(null,G__10456,G__10457));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10480 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10481 = t.left;
stack = G__10480;
t = G__10481;
continue;
} else {
var G__10482 = stack;
var G__10483 = t.right;
stack = G__10482;
t = G__10483;
continue;
}
} else {
if((c > (0))){
var G__10484 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10485 = t.right;
stack = G__10484;
t = G__10485;
continue;
} else {
var G__10486 = stack;
var G__10487 = t.left;
stack = G__10486;
t = G__10487;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10458 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10458) : cljs.core.key.call(null,G__10458));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10488 = cljs.core.nnext(in$);
var G__10489 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10488;
out = G__10489;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10490__i = 0, G__10490__a = new Array(arguments.length -  0);
while (G__10490__i < G__10490__a.length) {G__10490__a[G__10490__i] = arguments[G__10490__i + 0]; ++G__10490__i;}
  keyvals = new cljs.core.IndexedSeq(G__10490__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__10491){
var keyvals = cljs.core.seq(arglist__10491);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10492__i = 0, G__10492__a = new Array(arguments.length -  0);
while (G__10492__i < G__10492__a.length) {G__10492__a[G__10492__i] = arguments[G__10492__i + 0]; ++G__10492__i;}
  keyvals = new cljs.core.IndexedSeq(G__10492__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__10493){
var keyvals = cljs.core.seq(arglist__10493);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10497 = {};
return obj10497;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10498 = cljs.core.nnext(kvs);
kvs = G__10498;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10499__i = 0, G__10499__a = new Array(arguments.length -  0);
while (G__10499__i < G__10499__a.length) {G__10499__a[G__10499__i] = arguments[G__10499__i + 0]; ++G__10499__i;}
  keyvals = new cljs.core.IndexedSeq(G__10499__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__10500){
var keyvals = cljs.core.seq(arglist__10500);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10501 = cljs.core.nnext(in$);
var G__10502 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10501;
out = G__10502;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10503__i = 0, G__10503__a = new Array(arguments.length -  0);
while (G__10503__i < G__10503__a.length) {G__10503__a[G__10503__i] = arguments[G__10503__i + 0]; ++G__10503__i;}
  keyvals = new cljs.core.IndexedSeq(G__10503__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__10504){
var keyvals = cljs.core.seq(arglist__10504);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10505 = cljs.core.nnext(in$);
var G__10506 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10505;
out = G__10506;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10507__i = 0, G__10507__a = new Array(arguments.length -  1);
while (G__10507__i < G__10507__a.length) {G__10507__a[G__10507__i] = arguments[G__10507__i + 1]; ++G__10507__i;}
  keyvals = new cljs.core.IndexedSeq(G__10507__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__10508){
var comparator = cljs.core.first(arglist__10508);
var keyvals = cljs.core.rest(arglist__10508);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10509 = self__.mseq;
if(G__10509){
var bit__5290__auto__ = (G__10509.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5290__auto__) || (G__10509.cljs$core$INext$)){
return true;
} else {
if((!G__10509.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10509);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10510 = self__.mseq;
if(G__10510){
var bit__5290__auto__ = (G__10510.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5290__auto__) || (G__10510.cljs$core$INext$)){
return true;
} else {
if((!G__10510.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10510);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10510);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10511 = self__.mseq;
if(G__10511){
var bit__5290__auto__ = (G__10511.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5290__auto__) || (G__10511.cljs$core$INext$)){
return true;
} else {
if((!G__10511.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10511);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10511);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10512 = self__.mseq;
if(G__10512){
var bit__5290__auto__ = (G__10512.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__5290__auto__) || (G__10512.cljs$core$INext$)){
return true;
} else {
if((!G__10512.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10512);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10512);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10513_SHARP_,p2__10514_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__4616__auto__ = p1__10513_SHARP_;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10514_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10515__i = 0, G__10515__a = new Array(arguments.length -  0);
while (G__10515__i < G__10515__a.length) {G__10515__a[G__10515__i] = arguments[G__10515__i + 0]; ++G__10515__i;}
  maps = new cljs.core.IndexedSeq(G__10515__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__10516){
var maps = cljs.core.seq(arglist__10516);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10520 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10519,G__10520) : f.call(null,G__10519,G__10520));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__4616__auto__ = m1;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10521__i = 0, G__10521__a = new Array(arguments.length -  1);
while (G__10521__i < G__10521__a.length) {G__10521__a[G__10521__i] = arguments[G__10521__i + 1]; ++G__10521__i;}
  maps = new cljs.core.IndexedSeq(G__10521__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__10522){
var f = cljs.core.first(arglist__10522);
var maps = cljs.core.rest(arglist__10522);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10523 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10524 = cljs.core.next(keys);
ret = G__10523;
keys = G__10524;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10527 = cljs.core.seq(coll);
var chunk__10528 = null;
var count__10529 = (0);
var i__10530 = (0);
while(true){
if((i__10530 < count__10529)){
var vec__10531 = chunk__10528.cljs$core$IIndexed$_nth$arity$2(null,i__10530);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10531,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10531,(1),null);
var G__10532_10537 = v;
var G__10533_10538 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10532_10537,G__10533_10538) : f.call(null,G__10532_10537,G__10533_10538));

var G__10539 = seq__10527;
var G__10540 = chunk__10528;
var G__10541 = count__10529;
var G__10542 = (i__10530 + (1));
seq__10527 = G__10539;
chunk__10528 = G__10540;
count__10529 = G__10541;
i__10530 = G__10542;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10527);
if(temp__4126__auto__){
var seq__10527__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10527__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10527__$1);
var G__10543 = cljs.core.chunk_rest(seq__10527__$1);
var G__10544 = c__5401__auto__;
var G__10545 = cljs.core.count(c__5401__auto__);
var G__10546 = (0);
seq__10527 = G__10543;
chunk__10528 = G__10544;
count__10529 = G__10545;
i__10530 = G__10546;
continue;
} else {
var vec__10534 = cljs.core.first(seq__10527__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10534,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10534,(1),null);
var G__10535_10547 = v;
var G__10536_10548 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10535_10547,G__10536_10548) : f.call(null,G__10535_10547,G__10536_10548));

var G__10549 = cljs.core.next(seq__10527__$1);
var G__10550 = null;
var G__10551 = (0);
var G__10552 = (0);
seq__10527 = G__10549;
chunk__10528 = G__10550;
count__10529 = G__10551;
i__10530 = G__10552;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10525_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10525_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10553 = null;
var G__10553__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10553__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10553 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10553__2.call(this,self__,k);
case 3:
return G__10553__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10553.cljs$core$IFn$_invoke$arity$2 = G__10553__2;
G__10553.cljs$core$IFn$_invoke$arity$3 = G__10553__3;
return G__10553;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10526){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10526)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10554 = (i + (1));
var G__10555 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10554;
out = G__10555;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10556 = (i + (1));
var G__10557 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10556;
out = G__10557;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10559 = null;
var G__10559__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10559__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10559 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10559__2.call(this,self__,k);
case 3:
return G__10559__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10559.cljs$core$IFn$_invoke$arity$2 = G__10559__2;
G__10559.cljs$core$IFn$_invoke$arity$3 = G__10559__3;
return G__10559;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10558){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10558)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10562 = cljs.core.seq(coll);
var chunk__10563 = null;
var count__10564 = (0);
var i__10565 = (0);
while(true){
if((i__10565 < count__10564)){
var vec__10566 = chunk__10563.cljs$core$IIndexed$_nth$arity$2(null,i__10565);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10566,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10566,(1),null);
var G__10567_10572 = v;
var G__10568_10573 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10567_10572,G__10568_10573) : f.call(null,G__10567_10572,G__10568_10573));

var G__10574 = seq__10562;
var G__10575 = chunk__10563;
var G__10576 = count__10564;
var G__10577 = (i__10565 + (1));
seq__10562 = G__10574;
chunk__10563 = G__10575;
count__10564 = G__10576;
i__10565 = G__10577;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10562);
if(temp__4126__auto__){
var seq__10562__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10562__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10562__$1);
var G__10578 = cljs.core.chunk_rest(seq__10562__$1);
var G__10579 = c__5401__auto__;
var G__10580 = cljs.core.count(c__5401__auto__);
var G__10581 = (0);
seq__10562 = G__10578;
chunk__10563 = G__10579;
count__10564 = G__10580;
i__10565 = G__10581;
continue;
} else {
var vec__10569 = cljs.core.first(seq__10562__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10569,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10569,(1),null);
var G__10570_10582 = v;
var G__10571_10583 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10570_10582,G__10571_10583) : f.call(null,G__10570_10582,G__10571_10583));

var G__10584 = cljs.core.next(seq__10562__$1);
var G__10585 = null;
var G__10586 = (0);
var G__10587 = (0);
seq__10562 = G__10584;
chunk__10563 = G__10585;
count__10564 = G__10586;
i__10565 = G__10587;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10560_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10560_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10588 = null;
var G__10588__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10588__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10588 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10588__2.call(this,self__,k);
case 3:
return G__10588__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10588.cljs$core$IFn$_invoke$arity$2 = G__10588__2;
G__10588.cljs$core$IFn$_invoke$arity$3 = G__10588__3;
return G__10588;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10561){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10561)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__5495__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__5495__auto__.length)){
var G__10589 = (i + (1));
var G__10590 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10589;
res = G__10590;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10591 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10592 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10591;
out = G__10592;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__10593__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10593 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10594__i = 0, G__10594__a = new Array(arguments.length -  0);
while (G__10594__i < G__10594__a.length) {G__10594__a[G__10594__i] = arguments[G__10594__i + 0]; ++G__10594__i;}
  keys = new cljs.core.IndexedSeq(G__10594__a,0);
} 
return G__10593__delegate.call(this,keys);};
G__10593.cljs$lang$maxFixedArity = 0;
G__10593.cljs$lang$applyTo = (function (arglist__10595){
var keys = cljs.core.seq(arglist__10595);
return G__10593__delegate(keys);
});
G__10593.cljs$core$IFn$_invoke$arity$variadic = G__10593__delegate;
return G__10593;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__10596 = null;
if (arguments.length > 0) {
var G__10597__i = 0, G__10597__a = new Array(arguments.length -  0);
while (G__10597__i < G__10597__a.length) {G__10597__a[G__10597__i] = arguments[G__10597__i + 0]; ++G__10597__i;}
G__10596 = new cljs.core.IndexedSeq(G__10597__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10598__i = 0, G__10598__a = new Array(arguments.length -  0);
while (G__10598__i < G__10598__a.length) {G__10598__a[G__10598__i] = arguments[G__10598__i + 0]; ++G__10598__i;}
  keys = new cljs.core.IndexedSeq(G__10598__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__10599){
var keys = cljs.core.seq(arglist__10599);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10600__i = 0, G__10600__a = new Array(arguments.length -  1);
while (G__10600__i < G__10600__a.length) {G__10600__a[G__10600__i] = arguments[G__10600__i + 1]; ++G__10600__i;}
  keys = new cljs.core.IndexedSeq(G__10600__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__10601){
var comparator = cljs.core.first(arglist__10601);
var keys = cljs.core.rest(arglist__10601);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10602_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10602_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10602_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10603_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10603_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10603_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10624 = null;
var G__10624__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10624__1 = (function (result){
var G__10614 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10614) : rf.call(null,G__10614));
});
var G__10624__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10615 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10615) : cljs.core.deref.call(null,G__10615));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10616 = result;
var G__10617 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10616,G__10617) : rf.call(null,G__10616,G__10617));
}
});
G__10624 = function(result,input){
switch(arguments.length){
case 0:
return G__10624__0.call(this);
case 1:
return G__10624__1.call(this,result);
case 2:
return G__10624__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10624.cljs$core$IFn$_invoke$arity$0 = G__10624__0;
G__10624.cljs$core$IFn$_invoke$arity$1 = G__10624__1;
G__10624.cljs$core$IFn$_invoke$arity$2 = G__10624__2;
return G__10624;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10622,seen__$1){
while(true){
var vec__10623 = p__10622;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10623,(0),null);
var xs__$1 = vec__10623;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10625 = cljs.core.rest(s);
var G__10626 = seen__$1;
p__10622 = G__10625;
seen__$1 = G__10626;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10627 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10628 = cljs.core.next(s__$1);
ret = G__10627;
s__$1 = G__10628;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__10630 = x;
if(G__10630){
var bit__5283__auto__ = (G__10630.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__5283__auto__) || (G__10630.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10631 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10632 = cljs.core.next(ks);
var G__10633 = cljs.core.next(vs);
map = G__10631;
ks = G__10632;
vs = G__10633;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__10644 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10644) : k.call(null,G__10644));
})() > (function (){var G__10645 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10645) : k.call(null,G__10645));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__10646__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10634_SHARP_,p2__10635_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10634_SHARP_,p2__10635_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10646 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10647__i = 0, G__10647__a = new Array(arguments.length -  3);
while (G__10647__i < G__10647__a.length) {G__10647__a[G__10647__i] = arguments[G__10647__i + 3]; ++G__10647__i;}
  more = new cljs.core.IndexedSeq(G__10647__a,0);
} 
return G__10646__delegate.call(this,k,x,y,more);};
G__10646.cljs$lang$maxFixedArity = 3;
G__10646.cljs$lang$applyTo = (function (arglist__10648){
var k = cljs.core.first(arglist__10648);
arglist__10648 = cljs.core.next(arglist__10648);
var x = cljs.core.first(arglist__10648);
arglist__10648 = cljs.core.next(arglist__10648);
var y = cljs.core.first(arglist__10648);
var more = cljs.core.rest(arglist__10648);
return G__10646__delegate(k,x,y,more);
});
G__10646.cljs$core$IFn$_invoke$arity$variadic = G__10646__delegate;
return G__10646;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__10649 = null;
if (arguments.length > 3) {
var G__10650__i = 0, G__10650__a = new Array(arguments.length -  3);
while (G__10650__i < G__10650__a.length) {G__10650__a[G__10650__i] = arguments[G__10650__i + 3]; ++G__10650__i;}
G__10649 = new cljs.core.IndexedSeq(G__10650__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__10661 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10661) : k.call(null,G__10661));
})() < (function (){var G__10662 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10662) : k.call(null,G__10662));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__10663__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10651_SHARP_,p2__10652_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10651_SHARP_,p2__10652_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10663 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10664__i = 0, G__10664__a = new Array(arguments.length -  3);
while (G__10664__i < G__10664__a.length) {G__10664__a[G__10664__i] = arguments[G__10664__i + 3]; ++G__10664__i;}
  more = new cljs.core.IndexedSeq(G__10664__a,0);
} 
return G__10663__delegate.call(this,k,x,y,more);};
G__10663.cljs$lang$maxFixedArity = 3;
G__10663.cljs$lang$applyTo = (function (arglist__10665){
var k = cljs.core.first(arglist__10665);
arglist__10665 = cljs.core.next(arglist__10665);
var x = cljs.core.first(arglist__10665);
arglist__10665 = cljs.core.next(arglist__10665);
var y = cljs.core.first(arglist__10665);
var more = cljs.core.rest(arglist__10665);
return G__10663__delegate(k,x,y,more);
});
G__10663.cljs$core$IFn$_invoke$arity$variadic = G__10663__delegate;
return G__10663;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__10666 = null;
if (arguments.length > 3) {
var G__10667__i = 0, G__10667__a = new Array(arguments.length -  3);
while (G__10667__i < G__10667__a.length) {G__10667__a[G__10667__i] = arguments[G__10667__i + 3]; ++G__10667__i;}
G__10666 = new cljs.core.IndexedSeq(G__10667__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10684 = null;
var G__10684__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10684__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10679 = result;
var G__10680 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10679,G__10680) : rf.call(null,G__10679,G__10680));
})());
})());
var G__10681 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10681) : rf.call(null,G__10681));
});
var G__10684__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10682 = result;
var G__10683 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10682,G__10683) : rf.call(null,G__10682,G__10683));
} else {
return result;
}
});
G__10684 = function(result,input){
switch(arguments.length){
case 0:
return G__10684__0.call(this);
case 1:
return G__10684__1.call(this,result);
case 2:
return G__10684__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10684.cljs$core$IFn$_invoke$arity$0 = G__10684__0;
G__10684.cljs$core$IFn$_invoke$arity$1 = G__10684__1;
G__10684.cljs$core$IFn$_invoke$arity$2 = G__10684__2;
return G__10684;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10697 = null;
var G__10697__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10697__1 = (function (result){
var G__10692 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10692) : rf.call(null,G__10692));
});
var G__10697__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10693 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10693) : pred.call(null,G__10693));
})())){
var G__10694 = result;
var G__10695 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10694,G__10695) : rf.call(null,G__10694,G__10695));
} else {
return cljs.core.reduced(result);
}
});
G__10697 = function(result,input){
switch(arguments.length){
case 0:
return G__10697__0.call(this);
case 1:
return G__10697__1.call(this,result);
case 2:
return G__10697__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10697.cljs$core$IFn$_invoke$arity$0 = G__10697__0;
G__10697.cljs$core$IFn$_invoke$arity$1 = G__10697__1;
G__10697.cljs$core$IFn$_invoke$arity$2 = G__10697__2;
return G__10697;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10696 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10696) : pred.call(null,G__10696));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10702 = (function (){var G__10704 = cljs.core._entry_key(sc,e);
var G__10705 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10704,G__10705) : comp.call(null,G__10704,G__10705));
})();
var G__10703 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10702,G__10703) : test.call(null,G__10702,G__10703));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10709 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10709,(0),null);
var s = vec__10709;
if(cljs.core.truth_((function (){var G__10710 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10710) : include.call(null,G__10710));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10711 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10711,(0),null);
var s = vec__10711;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10715 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10715,(0),null);
var s = vec__10715;
if(cljs.core.truth_((function (){var G__10716 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10716) : include.call(null,G__10716));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10717 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10717,(0),null);
var s = vec__10717;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10718 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10718) : Math.ceil.call(null,G__10718));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__5032__auto__ = self__.__hash;
if(!((h__5032__auto__ == null))){
return h__5032__auto__;
} else {
var h__5032__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__5032__auto____$1;

return h__5032__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10719 = ret;
var G__10720 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10719,G__10720) : f.call(null,G__10719,G__10720));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10721 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10721) : cljs.core.deref.call(null,G__10721));
} else {
var G__10722 = (i + self__.step);
var G__10723 = ret__$1;
i = G__10722;
ret = G__10723;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10741 = null;
var G__10741__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10741__1 = (function (result){
var G__10738 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10738) : rf.call(null,G__10738));
});
var G__10741__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10739 = result;
var G__10740 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10739,G__10740) : rf.call(null,G__10739,G__10740));
} else {
return result;
}
});
G__10741 = function(result,input){
switch(arguments.length){
case 0:
return G__10741__0.call(this);
case 1:
return G__10741__1.call(this,result);
case 2:
return G__10741__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10741.cljs$core$IFn$_invoke$arity$0 = G__10741__0;
G__10741.cljs$core$IFn$_invoke$arity$1 = G__10741__1;
G__10741.cljs$core$IFn$_invoke$arity$2 = G__10741__2;
return G__10741;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10763 = null;
var G__10763__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10763__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10754 = result;
var G__10755 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10754,G__10755) : rf.call(null,G__10754,G__10755));
})());
})());
var G__10756 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10756) : rf.call(null,G__10756));
});
var G__10763__2 = (function (result,input){
var pval = (function (){var G__10757 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10757) : cljs.core.deref.call(null,G__10757));
})();
var val = (function (){var G__10758 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10758) : f.call(null,G__10758));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10759 = result;
var G__10760 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10759,G__10760) : rf.call(null,G__10759,G__10760));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10763 = function(result,input){
switch(arguments.length){
case 0:
return G__10763__0.call(this);
case 1:
return G__10763__1.call(this,result);
case 2:
return G__10763__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10763.cljs$core$IFn$_invoke$arity$0 = G__10763__0;
G__10763.cljs$core$IFn$_invoke$arity$1 = G__10763__1;
G__10763.cljs$core$IFn$_invoke$arity$2 = G__10763__2;
return G__10763;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10761 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10761) : f.call(null,G__10761));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10742_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10762 = p1__10742_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10762) : f.call(null,G__10762));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10772 = init;
var G__10773 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10772,G__10773) : f.call(null,G__10772,G__10773));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__10868 = null;
var G__10868__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10868__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10826 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10826) : f.call(null,G__10826));
})()],null));
});
var G__10868__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10827 = x;
var G__10828 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10827,G__10828) : f.call(null,G__10827,G__10828));
})()],null));
});
var G__10868__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10829 = x;
var G__10830 = y;
var G__10831 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10829,G__10830,G__10831) : f.call(null,G__10829,G__10830,G__10831));
})()],null));
});
var G__10868__4 = (function() { 
var G__10869__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10869 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10870__i = 0, G__10870__a = new Array(arguments.length -  3);
while (G__10870__i < G__10870__a.length) {G__10870__a[G__10870__i] = arguments[G__10870__i + 3]; ++G__10870__i;}
  args = new cljs.core.IndexedSeq(G__10870__a,0);
} 
return G__10869__delegate.call(this,x,y,z,args);};
G__10869.cljs$lang$maxFixedArity = 3;
G__10869.cljs$lang$applyTo = (function (arglist__10871){
var x = cljs.core.first(arglist__10871);
arglist__10871 = cljs.core.next(arglist__10871);
var y = cljs.core.first(arglist__10871);
arglist__10871 = cljs.core.next(arglist__10871);
var z = cljs.core.first(arglist__10871);
var args = cljs.core.rest(arglist__10871);
return G__10869__delegate(x,y,z,args);
});
G__10869.cljs$core$IFn$_invoke$arity$variadic = G__10869__delegate;
return G__10869;
})()
;
G__10868 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10868__0.call(this);
case 1:
return G__10868__1.call(this,x);
case 2:
return G__10868__2.call(this,x,y);
case 3:
return G__10868__3.call(this,x,y,z);
default:
var G__10872 = null;
if (arguments.length > 3) {
var G__10873__i = 0, G__10873__a = new Array(arguments.length -  3);
while (G__10873__i < G__10873__a.length) {G__10873__a[G__10873__i] = arguments[G__10873__i + 3]; ++G__10873__i;}
G__10872 = new cljs.core.IndexedSeq(G__10873__a,0);
}
return G__10868__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10868.cljs$lang$maxFixedArity = 3;
G__10868.cljs$lang$applyTo = G__10868__4.cljs$lang$applyTo;
G__10868.cljs$core$IFn$_invoke$arity$0 = G__10868__0;
G__10868.cljs$core$IFn$_invoke$arity$1 = G__10868__1;
G__10868.cljs$core$IFn$_invoke$arity$2 = G__10868__2;
G__10868.cljs$core$IFn$_invoke$arity$3 = G__10868__3;
G__10868.cljs$core$IFn$_invoke$arity$variadic = G__10868__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10868;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__10874 = null;
var G__10874__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10874__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10832 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10832) : f.call(null,G__10832));
})(),(function (){var G__10833 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10833) : g.call(null,G__10833));
})()],null));
});
var G__10874__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10834 = x;
var G__10835 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10834,G__10835) : f.call(null,G__10834,G__10835));
})(),(function (){var G__10836 = x;
var G__10837 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10836,G__10837) : g.call(null,G__10836,G__10837));
})()],null));
});
var G__10874__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10838 = x;
var G__10839 = y;
var G__10840 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10838,G__10839,G__10840) : f.call(null,G__10838,G__10839,G__10840));
})(),(function (){var G__10841 = x;
var G__10842 = y;
var G__10843 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10841,G__10842,G__10843) : g.call(null,G__10841,G__10842,G__10843));
})()],null));
});
var G__10874__4 = (function() { 
var G__10875__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10875 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10876__i = 0, G__10876__a = new Array(arguments.length -  3);
while (G__10876__i < G__10876__a.length) {G__10876__a[G__10876__i] = arguments[G__10876__i + 3]; ++G__10876__i;}
  args = new cljs.core.IndexedSeq(G__10876__a,0);
} 
return G__10875__delegate.call(this,x,y,z,args);};
G__10875.cljs$lang$maxFixedArity = 3;
G__10875.cljs$lang$applyTo = (function (arglist__10877){
var x = cljs.core.first(arglist__10877);
arglist__10877 = cljs.core.next(arglist__10877);
var y = cljs.core.first(arglist__10877);
arglist__10877 = cljs.core.next(arglist__10877);
var z = cljs.core.first(arglist__10877);
var args = cljs.core.rest(arglist__10877);
return G__10875__delegate(x,y,z,args);
});
G__10875.cljs$core$IFn$_invoke$arity$variadic = G__10875__delegate;
return G__10875;
})()
;
G__10874 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10874__0.call(this);
case 1:
return G__10874__1.call(this,x);
case 2:
return G__10874__2.call(this,x,y);
case 3:
return G__10874__3.call(this,x,y,z);
default:
var G__10878 = null;
if (arguments.length > 3) {
var G__10879__i = 0, G__10879__a = new Array(arguments.length -  3);
while (G__10879__i < G__10879__a.length) {G__10879__a[G__10879__i] = arguments[G__10879__i + 3]; ++G__10879__i;}
G__10878 = new cljs.core.IndexedSeq(G__10879__a,0);
}
return G__10874__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10874.cljs$lang$maxFixedArity = 3;
G__10874.cljs$lang$applyTo = G__10874__4.cljs$lang$applyTo;
G__10874.cljs$core$IFn$_invoke$arity$0 = G__10874__0;
G__10874.cljs$core$IFn$_invoke$arity$1 = G__10874__1;
G__10874.cljs$core$IFn$_invoke$arity$2 = G__10874__2;
G__10874.cljs$core$IFn$_invoke$arity$3 = G__10874__3;
G__10874.cljs$core$IFn$_invoke$arity$variadic = G__10874__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10874;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__10880 = null;
var G__10880__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10880__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10844 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10844) : f.call(null,G__10844));
})(),(function (){var G__10845 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10845) : g.call(null,G__10845));
})(),(function (){var G__10846 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10846) : h.call(null,G__10846));
})()],null));
});
var G__10880__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10847 = x;
var G__10848 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10847,G__10848) : f.call(null,G__10847,G__10848));
})(),(function (){var G__10849 = x;
var G__10850 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10849,G__10850) : g.call(null,G__10849,G__10850));
})(),(function (){var G__10851 = x;
var G__10852 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10851,G__10852) : h.call(null,G__10851,G__10852));
})()],null));
});
var G__10880__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10853 = x;
var G__10854 = y;
var G__10855 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10853,G__10854,G__10855) : f.call(null,G__10853,G__10854,G__10855));
})(),(function (){var G__10856 = x;
var G__10857 = y;
var G__10858 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10856,G__10857,G__10858) : g.call(null,G__10856,G__10857,G__10858));
})(),(function (){var G__10859 = x;
var G__10860 = y;
var G__10861 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10859,G__10860,G__10861) : h.call(null,G__10859,G__10860,G__10861));
})()],null));
});
var G__10880__4 = (function() { 
var G__10881__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10881 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10882__i = 0, G__10882__a = new Array(arguments.length -  3);
while (G__10882__i < G__10882__a.length) {G__10882__a[G__10882__i] = arguments[G__10882__i + 3]; ++G__10882__i;}
  args = new cljs.core.IndexedSeq(G__10882__a,0);
} 
return G__10881__delegate.call(this,x,y,z,args);};
G__10881.cljs$lang$maxFixedArity = 3;
G__10881.cljs$lang$applyTo = (function (arglist__10883){
var x = cljs.core.first(arglist__10883);
arglist__10883 = cljs.core.next(arglist__10883);
var y = cljs.core.first(arglist__10883);
arglist__10883 = cljs.core.next(arglist__10883);
var z = cljs.core.first(arglist__10883);
var args = cljs.core.rest(arglist__10883);
return G__10881__delegate(x,y,z,args);
});
G__10881.cljs$core$IFn$_invoke$arity$variadic = G__10881__delegate;
return G__10881;
})()
;
G__10880 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10880__0.call(this);
case 1:
return G__10880__1.call(this,x);
case 2:
return G__10880__2.call(this,x,y);
case 3:
return G__10880__3.call(this,x,y,z);
default:
var G__10884 = null;
if (arguments.length > 3) {
var G__10885__i = 0, G__10885__a = new Array(arguments.length -  3);
while (G__10885__i < G__10885__a.length) {G__10885__a[G__10885__i] = arguments[G__10885__i + 3]; ++G__10885__i;}
G__10884 = new cljs.core.IndexedSeq(G__10885__a,0);
}
return G__10880__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10880.cljs$lang$maxFixedArity = 3;
G__10880.cljs$lang$applyTo = G__10880__4.cljs$lang$applyTo;
G__10880.cljs$core$IFn$_invoke$arity$0 = G__10880__0;
G__10880.cljs$core$IFn$_invoke$arity$1 = G__10880__1;
G__10880.cljs$core$IFn$_invoke$arity$2 = G__10880__2;
G__10880.cljs$core$IFn$_invoke$arity$3 = G__10880__3;
G__10880.cljs$core$IFn$_invoke$arity$variadic = G__10880__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10880;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__10886__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10887 = null;
var G__10887__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10774_SHARP_,p2__10775_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10774_SHARP_,(function (){return (p2__10775_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10775_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10775_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10887__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10776_SHARP_,p2__10777_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10776_SHARP_,(function (){var G__10862 = x;
return (p2__10777_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10777_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10862) : p2__10777_SHARP_.call(null,G__10862));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10887__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10778_SHARP_,p2__10779_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10778_SHARP_,(function (){var G__10863 = x;
var G__10864 = y;
return (p2__10779_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10779_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10863,G__10864) : p2__10779_SHARP_.call(null,G__10863,G__10864));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10887__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10780_SHARP_,p2__10781_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10780_SHARP_,(function (){var G__10865 = x;
var G__10866 = y;
var G__10867 = z;
return (p2__10781_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10781_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10865,G__10866,G__10867) : p2__10781_SHARP_.call(null,G__10865,G__10866,G__10867));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10887__4 = (function() { 
var G__10888__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10782_SHARP_,p2__10783_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10782_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10783_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10888 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10889__i = 0, G__10889__a = new Array(arguments.length -  3);
while (G__10889__i < G__10889__a.length) {G__10889__a[G__10889__i] = arguments[G__10889__i + 3]; ++G__10889__i;}
  args = new cljs.core.IndexedSeq(G__10889__a,0);
} 
return G__10888__delegate.call(this,x,y,z,args);};
G__10888.cljs$lang$maxFixedArity = 3;
G__10888.cljs$lang$applyTo = (function (arglist__10890){
var x = cljs.core.first(arglist__10890);
arglist__10890 = cljs.core.next(arglist__10890);
var y = cljs.core.first(arglist__10890);
arglist__10890 = cljs.core.next(arglist__10890);
var z = cljs.core.first(arglist__10890);
var args = cljs.core.rest(arglist__10890);
return G__10888__delegate(x,y,z,args);
});
G__10888.cljs$core$IFn$_invoke$arity$variadic = G__10888__delegate;
return G__10888;
})()
;
G__10887 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10887__0.call(this);
case 1:
return G__10887__1.call(this,x);
case 2:
return G__10887__2.call(this,x,y);
case 3:
return G__10887__3.call(this,x,y,z);
default:
var G__10891 = null;
if (arguments.length > 3) {
var G__10892__i = 0, G__10892__a = new Array(arguments.length -  3);
while (G__10892__i < G__10892__a.length) {G__10892__a[G__10892__i] = arguments[G__10892__i + 3]; ++G__10892__i;}
G__10891 = new cljs.core.IndexedSeq(G__10892__a,0);
}
return G__10887__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10887.cljs$lang$maxFixedArity = 3;
G__10887.cljs$lang$applyTo = G__10887__4.cljs$lang$applyTo;
G__10887.cljs$core$IFn$_invoke$arity$0 = G__10887__0;
G__10887.cljs$core$IFn$_invoke$arity$1 = G__10887__1;
G__10887.cljs$core$IFn$_invoke$arity$2 = G__10887__2;
G__10887.cljs$core$IFn$_invoke$arity$3 = G__10887__3;
G__10887.cljs$core$IFn$_invoke$arity$variadic = G__10887__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10887;
})()
;})(fs__$1))
};
var G__10886 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10893__i = 0, G__10893__a = new Array(arguments.length -  3);
while (G__10893__i < G__10893__a.length) {G__10893__a[G__10893__i] = arguments[G__10893__i + 3]; ++G__10893__i;}
  fs = new cljs.core.IndexedSeq(G__10893__a,0);
} 
return G__10886__delegate.call(this,f,g,h,fs);};
G__10886.cljs$lang$maxFixedArity = 3;
G__10886.cljs$lang$applyTo = (function (arglist__10894){
var f = cljs.core.first(arglist__10894);
arglist__10894 = cljs.core.next(arglist__10894);
var g = cljs.core.first(arglist__10894);
arglist__10894 = cljs.core.next(arglist__10894);
var h = cljs.core.first(arglist__10894);
var fs = cljs.core.rest(arglist__10894);
return G__10886__delegate(f,g,h,fs);
});
G__10886.cljs$core$IFn$_invoke$arity$variadic = G__10886__delegate;
return G__10886;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__10895 = null;
if (arguments.length > 3) {
var G__10896__i = 0, G__10896__a = new Array(arguments.length -  3);
while (G__10896__i < G__10896__a.length) {G__10896__a[G__10896__i] = arguments[G__10896__i + 3]; ++G__10896__i;}
G__10895 = new cljs.core.IndexedSeq(G__10896__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10897 = cljs.core.next(coll);
coll = G__10897;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10898 = (n - (1));
var G__10899 = cljs.core.next(coll);
n = G__10898;
coll = G__10899;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10903 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10903,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10903,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__4616__auto__ = flags;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10911 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__4616__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__10912_10918 = cljs.core.first(coll);
var G__10913_10919 = writer;
var G__10914_10920 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10912_10918,G__10913_10919,G__10914_10920) : print_one.call(null,G__10912_10918,G__10913_10919,G__10914_10920));
} else {
}

var coll_10921__$1 = cljs.core.next(coll);
var n_10922 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10921__$1) && (((n_10922 == null)) || (!((n_10922 === (0)))))){
cljs.core._write(writer,sep);

var G__10915_10923 = cljs.core.first(coll_10921__$1);
var G__10916_10924 = writer;
var G__10917_10925 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10915_10923,G__10916_10924,G__10917_10925) : print_one.call(null,G__10915_10923,G__10916_10924,G__10917_10925));

var G__10926 = cljs.core.next(coll_10921__$1);
var G__10927 = (n_10922 - (1));
coll_10921__$1 = G__10926;
n_10922 = G__10927;
continue;
} else {
if((cljs.core.seq(coll_10921__$1)) && ((n_10922 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__4616__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10911;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__10932 = cljs.core.seq(ss);
var chunk__10933 = null;
var count__10934 = (0);
var i__10935 = (0);
while(true){
if((i__10935 < count__10934)){
var s = chunk__10933.cljs$core$IIndexed$_nth$arity$2(null,i__10935);
cljs.core._write(writer,s);

var G__10936 = seq__10932;
var G__10937 = chunk__10933;
var G__10938 = count__10934;
var G__10939 = (i__10935 + (1));
seq__10932 = G__10936;
chunk__10933 = G__10937;
count__10934 = G__10938;
i__10935 = G__10939;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10932);
if(temp__4126__auto__){
var seq__10932__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10932__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10932__$1);
var G__10940 = cljs.core.chunk_rest(seq__10932__$1);
var G__10941 = c__5401__auto__;
var G__10942 = cljs.core.count(c__5401__auto__);
var G__10943 = (0);
seq__10932 = G__10940;
chunk__10933 = G__10941;
count__10934 = G__10942;
i__10935 = G__10943;
continue;
} else {
var s = cljs.core.first(seq__10932__$1);
cljs.core._write(writer,s);

var G__10944 = cljs.core.next(seq__10932__$1);
var G__10945 = null;
var G__10946 = (0);
var G__10947 = (0);
seq__10932 = G__10944;
chunk__10933 = G__10945;
count__10934 = G__10946;
i__10935 = G__10947;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10948__i = 0, G__10948__a = new Array(arguments.length -  1);
while (G__10948__i < G__10948__a.length) {G__10948__a[G__10948__i] = arguments[G__10948__i + 1]; ++G__10948__i;}
  ss = new cljs.core.IndexedSeq(G__10948__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__10949){
var writer = cljs.core.first(arglist__10949);
var ss = cljs.core.rest(arglist__10949);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10951 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10951;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10954 = "[\\\\\"\b\f\n\r\t]";
var G__10955 = "g";
return RegExp(G__10954,G__10955);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__4604__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__4604__auto__)){
var and__4604__auto____$1 = (function (){var G__10969 = obj;
if(G__10969){
var bit__5290__auto__ = (G__10969.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__5290__auto__) || (G__10969.cljs$core$IMeta$)){
return true;
} else {
if((!G__10969.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10969);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10969);
}
})();
if(and__4604__auto____$1){
return cljs.core.meta(obj);
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__10970_10980 = cljs.core.meta(obj);
var G__10971_10981 = writer;
var G__10972_10982 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10970_10980,G__10971_10981,G__10972_10982) : cljs.core.pr_writer.call(null,G__10970_10980,G__10971_10981,G__10972_10982));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10973 = obj;
if(G__10973){
var bit__5283__auto__ = (G__10973.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__5283__auto__) || (G__10973.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10974 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10975 = cljs.core.pr_writer;
var G__10976 = writer;
var G__10977 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10974,G__10975,G__10976,G__10977) : cljs.core.print_map.call(null,G__10974,G__10975,G__10976,G__10977));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10978 = obj;
return goog.isString(G__10978);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10983 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10983;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10979 = obj;
if(G__10979){
var bit__5290__auto__ = (G__10979.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__5290__auto__) || (G__10979.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10979);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__10987 = obj;
var G__10988 = writer;
var G__10989 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10987,G__10988,G__10989) : alt_impl.call(null,G__10987,G__10988,G__10989));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10994 = cljs.core.seq(cljs.core.next(objs));
var chunk__10995 = null;
var count__10996 = (0);
var i__10997 = (0);
while(true){
if((i__10997 < count__10996)){
var obj = chunk__10995.cljs$core$IIndexed$_nth$arity$2(null,i__10997);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10998 = seq__10994;
var G__10999 = chunk__10995;
var G__11000 = count__10996;
var G__11001 = (i__10997 + (1));
seq__10994 = G__10998;
chunk__10995 = G__10999;
count__10996 = G__11000;
i__10997 = G__11001;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10994);
if(temp__4126__auto__){
var seq__10994__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10994__$1)){
var c__5401__auto__ = cljs.core.chunk_first(seq__10994__$1);
var G__11002 = cljs.core.chunk_rest(seq__10994__$1);
var G__11003 = c__5401__auto__;
var G__11004 = cljs.core.count(c__5401__auto__);
var G__11005 = (0);
seq__10994 = G__11002;
chunk__10995 = G__11003;
count__10996 = G__11004;
i__10997 = G__11005;
continue;
} else {
var obj = cljs.core.first(seq__10994__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__11006 = cljs.core.next(seq__10994__$1);
var G__11007 = null;
var G__11008 = (0);
var G__11009 = (0);
seq__10994 = G__11006;
chunk__10995 = G__11007;
count__10996 = G__11008;
i__10997 = G__11009;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11010__i = 0, G__11010__a = new Array(arguments.length -  0);
while (G__11010__i < G__11010__a.length) {G__11010__a[G__11010__i] = arguments[G__11010__i + 0]; ++G__11010__i;}
  objs = new cljs.core.IndexedSeq(G__11010__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__11011){
var objs = cljs.core.seq(arglist__11011);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11012__i = 0, G__11012__a = new Array(arguments.length -  0);
while (G__11012__i < G__11012__a.length) {G__11012__a[G__11012__i] = arguments[G__11012__i + 0]; ++G__11012__i;}
  objs = new cljs.core.IndexedSeq(G__11012__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__11013){
var objs = cljs.core.seq(arglist__11013);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11014__i = 0, G__11014__a = new Array(arguments.length -  0);
while (G__11014__i < G__11014__a.length) {G__11014__a[G__11014__i] = arguments[G__11014__i + 0]; ++G__11014__i;}
  objs = new cljs.core.IndexedSeq(G__11014__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__11015){
var objs = cljs.core.seq(arglist__11015);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11016__i = 0, G__11016__a = new Array(arguments.length -  0);
while (G__11016__i < G__11016__a.length) {G__11016__a[G__11016__i] = arguments[G__11016__i + 0]; ++G__11016__i;}
  objs = new cljs.core.IndexedSeq(G__11016__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__11017){
var objs = cljs.core.seq(arglist__11017);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11018__i = 0, G__11018__a = new Array(arguments.length -  0);
while (G__11018__i < G__11018__a.length) {G__11018__a[G__11018__i] = arguments[G__11018__i + 0]; ++G__11018__i;}
  objs = new cljs.core.IndexedSeq(G__11018__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__11019){
var objs = cljs.core.seq(arglist__11019);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11020__i = 0, G__11020__a = new Array(arguments.length -  0);
while (G__11020__i < G__11020__a.length) {G__11020__a[G__11020__i] = arguments[G__11020__i + 0]; ++G__11020__i;}
  objs = new cljs.core.IndexedSeq(G__11020__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__11021){
var objs = cljs.core.seq(arglist__11021);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11022__i = 0, G__11022__a = new Array(arguments.length -  0);
while (G__11022__i < G__11022__a.length) {G__11022__a[G__11022__i] = arguments[G__11022__i + 0]; ++G__11022__i;}
  objs = new cljs.core.IndexedSeq(G__11022__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__11023){
var objs = cljs.core.seq(arglist__11023);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__11024__i = 0, G__11024__a = new Array(arguments.length -  0);
while (G__11024__i < G__11024__a.length) {G__11024__a[G__11024__i] = arguments[G__11024__i + 0]; ++G__11024__i;}
  objs = new cljs.core.IndexedSeq(G__11024__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__11025){
var objs = cljs.core.seq(arglist__11025);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__11032_11038 = cljs.core.key(e);
var G__11033_11039 = w;
var G__11034_11040 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11032_11038,G__11033_11039,G__11034_11040) : print_one.call(null,G__11032_11038,G__11033_11039,G__11034_11040));

cljs.core._write(w," ");

var G__11035 = cljs.core.val(e);
var G__11036 = w;
var G__11037 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11035,G__11036,G__11037) : print_one.call(null,G__11035,G__11036,G__11037));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__11041__i = 0, G__11041__a = new Array(arguments.length -  2);
while (G__11041__i < G__11041__a.length) {G__11041__a[G__11041__i] = arguments[G__11041__i + 2]; ++G__11041__i;}
  args = new cljs.core.IndexedSeq(G__11041__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__11042){
var iref = cljs.core.first(arglist__11042);
arglist__11042 = cljs.core.next(arglist__11042);
var f = cljs.core.first(arglist__11042);
var args = cljs.core.rest(arglist__11042);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__11045 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11045) : cljs.core.atom.call(null,G__11045));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__11047 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11047) : cljs.core.deref.call(null,G__11047));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__11048_SHARP_,p2__11049_SHARP_){
var ret = (function (){var G__11052 = p1__11048_SHARP_;
var G__11053 = p2__11049_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11052,G__11053) : rf.call(null,G__11052,G__11053));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__11056 = null;
var G__11056__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11056__1 = (function (result){
var G__11055 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11055) : rf.call(null,G__11055));
});
var G__11056__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__11056 = function(result,input){
switch(arguments.length){
case 0:
return G__11056__0.call(this);
case 1:
return G__11056__1.call(this,result);
case 2:
return G__11056__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11056.cljs$core$IFn$_invoke$arity$0 = G__11056__0;
G__11056.cljs$core$IFn$_invoke$arity$1 = G__11056__1;
G__11056.cljs$core$IFn$_invoke$arity$2 = G__11056__2;
return G__11056;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__11065 = null;
var G__11065__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11065__1 = (function (result){
var G__11061 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11061) : rf.call(null,G__11061));
});
var G__11065__2 = (function (result,input){
var prior = (function (){var G__11062 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11062) : cljs.core.deref.call(null,G__11062));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__11063 = result;
var G__11064 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11063,G__11064) : rf.call(null,G__11063,G__11064));
}
});
G__11065 = function(result,input){
switch(arguments.length){
case 0:
return G__11065__0.call(this);
case 1:
return G__11065__1.call(this,result);
case 2:
return G__11065__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11065.cljs$core$IFn$_invoke$arity$0 = G__11065__0;
G__11065.cljs$core$IFn$_invoke$arity$1 = G__11065__1;
G__11065.cljs$core$IFn$_invoke$arity$2 = G__11065__2;
return G__11065;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__5592__auto__ = this;
return cljs.core.es6_iterator(this__5592__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11067_SHARP_,p2__11066_SHARP_){
var G__11069 = p2__11066_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__11069) : proc.call(null,G__11069));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj11071 = {};
return obj11071;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__4604__auto__ = x;
if(and__4604__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__4604__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__5252__auto__ = (((x == null))?null:x);
return (function (){var or__4616__auto__ = (cljs.core._clj__GT_js[(function (){var G__11075 = x__5252__auto__;
return goog.typeOf(G__11075);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__4604__auto__ = x;
if(and__4604__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__4604__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__5252__auto__ = (((x == null))?null:x);
return (function (){var or__4616__auto__ = (cljs.core._key__GT_js[(function (){var G__11079 = x__5252__auto__;
return goog.typeOf(G__11079);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__11082 = k;
if(G__11082){
var bit__5290__auto__ = null;
if(cljs.core.truth_((function (){var or__4616__auto__ = bit__5290__auto__;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return G__11082.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11082.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11082);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11082);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__11083 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__11083) : cljs.core.clj__GT_js.call(null,G__11083));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__11099 = x;
if(G__11099){
var bit__5290__auto__ = null;
if(cljs.core.truth_((function (){var or__4616__auto__ = bit__5290__auto__;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return G__11099.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__11099.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11099);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__11099);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj11101 = {};
return obj11101;
})();
var seq__11102_11112 = cljs.core.seq(x);
var chunk__11103_11113 = null;
var count__11104_11114 = (0);
var i__11105_11115 = (0);
while(true){
if((i__11105_11115 < count__11104_11114)){
var vec__11106_11116 = chunk__11103_11113.cljs$core$IIndexed$_nth$arity$2(null,i__11105_11115);
var k_11117 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11106_11116,(0),null);
var v_11118 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11106_11116,(1),null);
(m[cljs.core.key__GT_js(k_11117)] = cljs$core$clj__GT_js(v_11118));

var G__11119 = seq__11102_11112;
var G__11120 = chunk__11103_11113;
var G__11121 = count__11104_11114;
var G__11122 = (i__11105_11115 + (1));
seq__11102_11112 = G__11119;
chunk__11103_11113 = G__11120;
count__11104_11114 = G__11121;
i__11105_11115 = G__11122;
continue;
} else {
var temp__4126__auto___11123 = cljs.core.seq(seq__11102_11112);
if(temp__4126__auto___11123){
var seq__11102_11124__$1 = temp__4126__auto___11123;
if(cljs.core.chunked_seq_QMARK_(seq__11102_11124__$1)){
var c__5401__auto___11125 = cljs.core.chunk_first(seq__11102_11124__$1);
var G__11126 = cljs.core.chunk_rest(seq__11102_11124__$1);
var G__11127 = c__5401__auto___11125;
var G__11128 = cljs.core.count(c__5401__auto___11125);
var G__11129 = (0);
seq__11102_11112 = G__11126;
chunk__11103_11113 = G__11127;
count__11104_11114 = G__11128;
i__11105_11115 = G__11129;
continue;
} else {
var vec__11107_11130 = cljs.core.first(seq__11102_11124__$1);
var k_11131 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11107_11130,(0),null);
var v_11132 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11107_11130,(1),null);
(m[cljs.core.key__GT_js(k_11131)] = cljs$core$clj__GT_js(v_11132));

var G__11133 = cljs.core.next(seq__11102_11124__$1);
var G__11134 = null;
var G__11135 = (0);
var G__11136 = (0);
seq__11102_11112 = G__11133;
chunk__11103_11113 = G__11134;
count__11104_11114 = G__11135;
i__11105_11115 = G__11136;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__11108_11137 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__11109_11138 = null;
var count__11110_11139 = (0);
var i__11111_11140 = (0);
while(true){
if((i__11111_11140 < count__11110_11139)){
var x_11141__$1 = chunk__11109_11138.cljs$core$IIndexed$_nth$arity$2(null,i__11111_11140);
arr.push(x_11141__$1);

var G__11142 = seq__11108_11137;
var G__11143 = chunk__11109_11138;
var G__11144 = count__11110_11139;
var G__11145 = (i__11111_11140 + (1));
seq__11108_11137 = G__11142;
chunk__11109_11138 = G__11143;
count__11110_11139 = G__11144;
i__11111_11140 = G__11145;
continue;
} else {
var temp__4126__auto___11146 = cljs.core.seq(seq__11108_11137);
if(temp__4126__auto___11146){
var seq__11108_11147__$1 = temp__4126__auto___11146;
if(cljs.core.chunked_seq_QMARK_(seq__11108_11147__$1)){
var c__5401__auto___11148 = cljs.core.chunk_first(seq__11108_11147__$1);
var G__11149 = cljs.core.chunk_rest(seq__11108_11147__$1);
var G__11150 = c__5401__auto___11148;
var G__11151 = cljs.core.count(c__5401__auto___11148);
var G__11152 = (0);
seq__11108_11137 = G__11149;
chunk__11109_11138 = G__11150;
count__11110_11139 = G__11151;
i__11111_11140 = G__11152;
continue;
} else {
var x_11153__$1 = cljs.core.first(seq__11108_11147__$1);
arr.push(x_11153__$1);

var G__11154 = cljs.core.next(seq__11108_11147__$1);
var G__11155 = null;
var G__11156 = (0);
var G__11157 = (0);
seq__11108_11137 = G__11154;
chunk__11109_11138 = G__11155;
count__11110_11139 = G__11156;
i__11111_11140 = G__11157;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11159 = {};
return obj11159;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__4604__auto__ = x;
if(and__4604__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__4604__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__5252__auto__ = (((x == null))?null:x);
return (function (){var or__4616__auto__ = (cljs.core._js__GT_clj[(function (){var G__11163 = x__5252__auto__;
return goog.typeOf(G__11163);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__11220__delegate = function (x,opts){
var map__11193 = opts;
var map__11193__$1 = ((cljs.core.seq_QMARK_(map__11193))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11193):map__11193);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11193__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11193,map__11193__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__11209 = x__$1;
if(G__11209){
var bit__5290__auto__ = null;
if(cljs.core.truth_((function (){var or__4616__auto__ = bit__5290__auto__;
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return G__11209.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11209.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11209);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11209);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5370__auto__ = ((function (map__11193,map__11193__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__11210(s__11211){
return (new cljs.core.LazySeq(null,((function (map__11193,map__11193__$1,keywordize_keys,keyfn){
return (function (){
var s__11211__$1 = s__11211;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11211__$1);
if(temp__4126__auto__){
var s__11211__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11211__$2)){
var c__5368__auto__ = cljs.core.chunk_first(s__11211__$2);
var size__5369__auto__ = cljs.core.count(c__5368__auto__);
var b__11213 = cljs.core.chunk_buffer(size__5369__auto__);
if((function (){var i__11212 = (0);
while(true){
if((i__11212 < size__5369__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5368__auto__,i__11212);
cljs.core.chunk_append(b__11213,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11218 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11218) : keyfn.call(null,G__11218));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__11221 = (i__11212 + (1));
i__11212 = G__11221;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11213),cljs$core$js__GT_clj_$_thisfn_$_iter__11210(cljs.core.chunk_rest(s__11211__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11213),null);
}
} else {
var k = cljs.core.first(s__11211__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11219 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11219) : keyfn.call(null,G__11219));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__11210(cljs.core.rest(s__11211__$2)));
}
} else {
return null;
}
break;
}
});})(map__11193,map__11193__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11193,map__11193__$1,keywordize_keys,keyfn))
;
return iter__5370__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11193,map__11193__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11220 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11222__i = 0, G__11222__a = new Array(arguments.length -  1);
while (G__11222__i < G__11222__a.length) {G__11222__a[G__11222__i] = arguments[G__11222__i + 1]; ++G__11222__i;}
  opts = new cljs.core.IndexedSeq(G__11222__a,0);
} 
return G__11220__delegate.call(this,x,opts);};
G__11220.cljs$lang$maxFixedArity = 1;
G__11220.cljs$lang$applyTo = (function (arglist__11223){
var x = cljs.core.first(arglist__11223);
var opts = cljs.core.rest(arglist__11223);
return G__11220__delegate(x,opts);
});
G__11220.cljs$core$IFn$_invoke$arity$variadic = G__11220__delegate;
return G__11220;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__11224 = null;
if (arguments.length > 1) {
var G__11225__i = 0, G__11225__a = new Array(arguments.length -  1);
while (G__11225__i < G__11225__a.length) {G__11225__a[G__11225__i] = arguments[G__11225__i + 1]; ++G__11225__i;}
G__11224 = new cljs.core.IndexedSeq(G__11225__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__11228 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11228) : cljs.core.atom.call(null,G__11228));
})();
return ((function (mem){
return (function() { 
var G__11230__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11229 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11229) : cljs.core.deref.call(null,G__11229));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11230 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11231__i = 0, G__11231__a = new Array(arguments.length -  0);
while (G__11231__i < G__11231__a.length) {G__11231__a[G__11231__i] = arguments[G__11231__i + 0]; ++G__11231__i;}
  args = new cljs.core.IndexedSeq(G__11231__a,0);
} 
return G__11230__delegate.call(this,args);};
G__11230.cljs$lang$maxFixedArity = 0;
G__11230.cljs$lang$applyTo = (function (arglist__11232){
var args = cljs.core.seq(arglist__11232);
return G__11230__delegate(args);
});
G__11230.cljs$core$IFn$_invoke$arity$variadic = G__11230__delegate;
return G__11230;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11234 = ret;
f = G__11234;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__11235__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11235 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11236__i = 0, G__11236__a = new Array(arguments.length -  1);
while (G__11236__i < G__11236__a.length) {G__11236__a[G__11236__i] = arguments[G__11236__i + 1]; ++G__11236__i;}
  args = new cljs.core.IndexedSeq(G__11236__a,0);
} 
return G__11235__delegate.call(this,f,args);};
G__11235.cljs$lang$maxFixedArity = 1;
G__11235.cljs$lang$applyTo = (function (arglist__11237){
var f = cljs.core.first(arglist__11237);
var args = cljs.core.rest(arglist__11237);
return G__11235__delegate(f,args);
});
G__11235.cljs$core$IFn$_invoke$arity$variadic = G__11235__delegate;
return G__11235;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__11238 = null;
if (arguments.length > 1) {
var G__11239__i = 0, G__11239__a = new Array(arguments.length -  1);
while (G__11239__i < G__11239__a.length) {G__11239__a[G__11239__i] = arguments[G__11239__i + 1]; ++G__11239__i;}
G__11238 = new cljs.core.IndexedSeq(G__11239__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__11242 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11242) : Math.floor.call(null,G__11242));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11244 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11244) : f.call(null,G__11244));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11246 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11246) : cljs.core.atom.call(null,G__11246));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11247__i = 0, G__11247__a = new Array(arguments.length -  1);
while (G__11247__i < G__11247__a.length) {G__11247__a[G__11247__i] = arguments[G__11247__i + 1]; ++G__11247__i;}
  args = new cljs.core.IndexedSeq(G__11247__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11248){
var f = cljs.core.first(arglist__11248);
var args = cljs.core.rest(arglist__11248);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11313 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11313) : cljs.core.deref.call(null,G__11313));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__4616__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
var and__4604__auto__ = cljs.core.vector_QMARK_(parent);
if(and__4604__auto__){
var and__4604__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__4604__auto____$1){
var and__4604__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__4604__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11338 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11336 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11336) : child.call(null,G__11336));
})(),(function (){var G__11337 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11337) : parent.call(null,G__11337));
})());
var G__11339 = (i + (1));
ret = G__11338;
i = G__11339;
continue;
}
break;
}
} else {
return and__4604__auto____$2;
}
} else {
return and__4604__auto____$1;
}
} else {
return and__4604__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11343 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11343) : cljs.core.deref.call(null,G__11343));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11347 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11347) : cljs.core.deref.call(null,G__11347));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11351 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11351) : cljs.core.deref.call(null,G__11351));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11360 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11360) : targets.call(null,G__11360));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11361 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11361) : sources.call(null,G__11361));
})()));
});})(tp,td,ta))
;
var or__4616__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11365 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11365) : tp.call(null,G__11365));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11366 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11366) : ta.call(null,G__11366));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11367 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11367) : ta.call(null,G__11367));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11374 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11374) : parentMap.call(null,G__11374));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11375 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11375) : parentMap.call(null,G__11375));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11368_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11368_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11368_SHARP_),cljs.core.second(p1__11368_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11376 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11376) : parentMap.call(null,G__11376));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11369_SHARP_,p2__11370_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11369_SHARP_,p2__11370_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11379 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11379) : cljs.core.deref.call(null,G__11379));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11380 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11380) : cljs.core.deref.call(null,G__11380));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11396 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11396) : cljs.core.deref.call(null,G__11396));
})().call(null,x);
var or__4616__auto__ = (cljs.core.truth_((function (){var and__4604__auto__ = xprefs;
if(cljs.core.truth_(and__4604__auto__)){
var G__11398 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11398) : xprefs.call(null,G__11398));
} else {
return and__4604__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11399 = cljs.core.rest(ps);
ps = G__11399;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4616__auto____$1)){
return or__4616__auto____$1;
} else {
var or__4616__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11400 = cljs.core.rest(ps);
ps = G__11400;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__4616__auto____$2)){
return or__4616__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__4616__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__4616__auto__)){
return or__4616__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11414){
var vec__11415 = p__11414;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11415,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11415,(1),null);
var e = vec__11415;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11416 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11416) : cljs.core.deref.call(null,G__11416));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__4616__auto__ = (be == null);
if(or__4616__auto__){
return or__4616__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11417 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11417) : cljs.core.deref.call(null,G__11417));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11418 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11418) : cljs.core.deref.call(null,G__11418));
})(),(function (){var G__11419 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11419) : cljs.core.deref.call(null,G__11419));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11421 = {};
return obj11421;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._reset[(function (){var G__11425 = x__5252__auto__;
return goog.typeOf(G__11425);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._reset["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._add_method[(function (){var G__11429 = x__5252__auto__;
return goog.typeOf(G__11429);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._add_method["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._remove_method[(function (){var G__11433 = x__5252__auto__;
return goog.typeOf(G__11433);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._remove_method["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._prefer_method[(function (){var G__11437 = x__5252__auto__;
return goog.typeOf(G__11437);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._get_method[(function (){var G__11441 = x__5252__auto__;
return goog.typeOf(G__11441);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._get_method["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._methods[(function (){var G__11445 = x__5252__auto__;
return goog.typeOf(G__11445);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._methods["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__4604__auto__ = mf;
if(and__4604__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__4604__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__5252__auto__ = (((mf == null))?null:mf);
return (function (){var or__4616__auto__ = (cljs.core._prefers[(function (){var G__11449 = x__5252__auto__;
return goog.typeOf(G__11449);
})()]);
if(or__4616__auto__){
return or__4616__auto__;
} else {
var or__4616__auto____$1 = (cljs.core._prefers["_"]);
if(or__4616__auto____$1){
return or__4616__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11451 = this$__$1;
return goog.getUid(G__11451);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11452 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11452) : cljs.core.deref.call(null,G__11452));
})(),(function (){var G__11453 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11453) : cljs.core.deref.call(null,G__11453));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11454 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11454) : cljs.core.deref.call(null,G__11454));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11455 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11455) : cljs.core.deref.call(null,G__11455));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11456 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11456) : cljs.core.deref.call(null,G__11456));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11457 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11457) : cljs.core.deref.call(null,G__11457));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12298 = null;
var G__12298__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12298__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11458 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11458) : self__.dispatch_fn.call(null,G__11458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11459 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11459) : target_fn.call(null,G__11459));
});
var G__12298__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11460 = a;
var G__11461 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11460,G__11461) : self__.dispatch_fn.call(null,G__11460,G__11461));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11462 = a;
var G__11463 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11462,G__11463) : target_fn.call(null,G__11462,G__11463));
});
var G__12298__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11464 = a;
var G__11465 = b;
var G__11466 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11464,G__11465,G__11466) : self__.dispatch_fn.call(null,G__11464,G__11465,G__11466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11467 = a;
var G__11468 = b;
var G__11469 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11467,G__11468,G__11469) : target_fn.call(null,G__11467,G__11468,G__11469));
});
var G__12298__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11470 = a;
var G__11471 = b;
var G__11472 = c;
var G__11473 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11470,G__11471,G__11472,G__11473) : self__.dispatch_fn.call(null,G__11470,G__11471,G__11472,G__11473));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11474 = a;
var G__11475 = b;
var G__11476 = c;
var G__11477 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11474,G__11475,G__11476,G__11477) : target_fn.call(null,G__11474,G__11475,G__11476,G__11477));
});
var G__12298__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11478 = a;
var G__11479 = b;
var G__11480 = c;
var G__11481 = d;
var G__11482 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11478,G__11479,G__11480,G__11481,G__11482) : self__.dispatch_fn.call(null,G__11478,G__11479,G__11480,G__11481,G__11482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11483 = a;
var G__11484 = b;
var G__11485 = c;
var G__11486 = d;
var G__11487 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11483,G__11484,G__11485,G__11486,G__11487) : target_fn.call(null,G__11483,G__11484,G__11485,G__11486,G__11487));
});
var G__12298__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11488 = a;
var G__11489 = b;
var G__11490 = c;
var G__11491 = d;
var G__11492 = e;
var G__11493 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11488,G__11489,G__11490,G__11491,G__11492,G__11493) : self__.dispatch_fn.call(null,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11494 = a;
var G__11495 = b;
var G__11496 = c;
var G__11497 = d;
var G__11498 = e;
var G__11499 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11494,G__11495,G__11496,G__11497,G__11498,G__11499) : target_fn.call(null,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499));
});
var G__12298__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11500 = a;
var G__11501 = b;
var G__11502 = c;
var G__11503 = d;
var G__11504 = e;
var G__11505 = f;
var G__11506 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506) : self__.dispatch_fn.call(null,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11507 = a;
var G__11508 = b;
var G__11509 = c;
var G__11510 = d;
var G__11511 = e;
var G__11512 = f;
var G__11513 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513) : target_fn.call(null,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513));
});
var G__12298__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11514 = a;
var G__11515 = b;
var G__11516 = c;
var G__11517 = d;
var G__11518 = e;
var G__11519 = f;
var G__11520 = g;
var G__11521 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521) : self__.dispatch_fn.call(null,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11522 = a;
var G__11523 = b;
var G__11524 = c;
var G__11525 = d;
var G__11526 = e;
var G__11527 = f;
var G__11528 = g;
var G__11529 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529) : target_fn.call(null,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529));
});
var G__12298__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11530 = a;
var G__11531 = b;
var G__11532 = c;
var G__11533 = d;
var G__11534 = e;
var G__11535 = f;
var G__11536 = g;
var G__11537 = h;
var G__11538 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538) : self__.dispatch_fn.call(null,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11539 = a;
var G__11540 = b;
var G__11541 = c;
var G__11542 = d;
var G__11543 = e;
var G__11544 = f;
var G__11545 = g;
var G__11546 = h;
var G__11547 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547) : target_fn.call(null,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547));
});
var G__12298__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11548 = a;
var G__11549 = b;
var G__11550 = c;
var G__11551 = d;
var G__11552 = e;
var G__11553 = f;
var G__11554 = g;
var G__11555 = h;
var G__11556 = i;
var G__11557 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557) : self__.dispatch_fn.call(null,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11558 = a;
var G__11559 = b;
var G__11560 = c;
var G__11561 = d;
var G__11562 = e;
var G__11563 = f;
var G__11564 = g;
var G__11565 = h;
var G__11566 = i;
var G__11567 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567) : target_fn.call(null,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567));
});
var G__12298__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11568 = a;
var G__11569 = b;
var G__11570 = c;
var G__11571 = d;
var G__11572 = e;
var G__11573 = f;
var G__11574 = g;
var G__11575 = h;
var G__11576 = i;
var G__11577 = j;
var G__11578 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578) : self__.dispatch_fn.call(null,G__11568,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11579 = a;
var G__11580 = b;
var G__11581 = c;
var G__11582 = d;
var G__11583 = e;
var G__11584 = f;
var G__11585 = g;
var G__11586 = h;
var G__11587 = i;
var G__11588 = j;
var G__11589 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589) : target_fn.call(null,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589));
});
var G__12298__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11590 = a;
var G__11591 = b;
var G__11592 = c;
var G__11593 = d;
var G__11594 = e;
var G__11595 = f;
var G__11596 = g;
var G__11597 = h;
var G__11598 = i;
var G__11599 = j;
var G__11600 = k;
var G__11601 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601) : self__.dispatch_fn.call(null,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11602 = a;
var G__11603 = b;
var G__11604 = c;
var G__11605 = d;
var G__11606 = e;
var G__11607 = f;
var G__11608 = g;
var G__11609 = h;
var G__11610 = i;
var G__11611 = j;
var G__11612 = k;
var G__11613 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613) : target_fn.call(null,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613));
});
var G__12298__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11614 = a;
var G__11615 = b;
var G__11616 = c;
var G__11617 = d;
var G__11618 = e;
var G__11619 = f;
var G__11620 = g;
var G__11621 = h;
var G__11622 = i;
var G__11623 = j;
var G__11624 = k;
var G__11625 = l;
var G__11626 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626) : self__.dispatch_fn.call(null,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11627 = a;
var G__11628 = b;
var G__11629 = c;
var G__11630 = d;
var G__11631 = e;
var G__11632 = f;
var G__11633 = g;
var G__11634 = h;
var G__11635 = i;
var G__11636 = j;
var G__11637 = k;
var G__11638 = l;
var G__11639 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639) : target_fn.call(null,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639));
});
var G__12298__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11640 = a;
var G__11641 = b;
var G__11642 = c;
var G__11643 = d;
var G__11644 = e;
var G__11645 = f;
var G__11646 = g;
var G__11647 = h;
var G__11648 = i;
var G__11649 = j;
var G__11650 = k;
var G__11651 = l;
var G__11652 = m;
var G__11653 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653) : self__.dispatch_fn.call(null,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11654 = a;
var G__11655 = b;
var G__11656 = c;
var G__11657 = d;
var G__11658 = e;
var G__11659 = f;
var G__11660 = g;
var G__11661 = h;
var G__11662 = i;
var G__11663 = j;
var G__11664 = k;
var G__11665 = l;
var G__11666 = m;
var G__11667 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667) : target_fn.call(null,G__11654,G__11655,G__11656,G__11657,G__11658,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667));
});
var G__12298__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11668 = a;
var G__11669 = b;
var G__11670 = c;
var G__11671 = d;
var G__11672 = e;
var G__11673 = f;
var G__11674 = g;
var G__11675 = h;
var G__11676 = i;
var G__11677 = j;
var G__11678 = k;
var G__11679 = l;
var G__11680 = m;
var G__11681 = n;
var G__11682 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682) : self__.dispatch_fn.call(null,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11683 = a;
var G__11684 = b;
var G__11685 = c;
var G__11686 = d;
var G__11687 = e;
var G__11688 = f;
var G__11689 = g;
var G__11690 = h;
var G__11691 = i;
var G__11692 = j;
var G__11693 = k;
var G__11694 = l;
var G__11695 = m;
var G__11696 = n;
var G__11697 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697) : target_fn.call(null,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696,G__11697));
});
var G__12298__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11698 = a;
var G__11699 = b;
var G__11700 = c;
var G__11701 = d;
var G__11702 = e;
var G__11703 = f;
var G__11704 = g;
var G__11705 = h;
var G__11706 = i;
var G__11707 = j;
var G__11708 = k;
var G__11709 = l;
var G__11710 = m;
var G__11711 = n;
var G__11712 = o;
var G__11713 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713) : self__.dispatch_fn.call(null,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11714 = a;
var G__11715 = b;
var G__11716 = c;
var G__11717 = d;
var G__11718 = e;
var G__11719 = f;
var G__11720 = g;
var G__11721 = h;
var G__11722 = i;
var G__11723 = j;
var G__11724 = k;
var G__11725 = l;
var G__11726 = m;
var G__11727 = n;
var G__11728 = o;
var G__11729 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729) : target_fn.call(null,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729));
});
var G__12298__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11730 = a;
var G__11731 = b;
var G__11732 = c;
var G__11733 = d;
var G__11734 = e;
var G__11735 = f;
var G__11736 = g;
var G__11737 = h;
var G__11738 = i;
var G__11739 = j;
var G__11740 = k;
var G__11741 = l;
var G__11742 = m;
var G__11743 = n;
var G__11744 = o;
var G__11745 = p;
var G__11746 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746) : self__.dispatch_fn.call(null,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11747 = a;
var G__11748 = b;
var G__11749 = c;
var G__11750 = d;
var G__11751 = e;
var G__11752 = f;
var G__11753 = g;
var G__11754 = h;
var G__11755 = i;
var G__11756 = j;
var G__11757 = k;
var G__11758 = l;
var G__11759 = m;
var G__11760 = n;
var G__11761 = o;
var G__11762 = p;
var G__11763 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763) : target_fn.call(null,G__11747,G__11748,G__11749,G__11750,G__11751,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763));
});
var G__12298__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11764 = a;
var G__11765 = b;
var G__11766 = c;
var G__11767 = d;
var G__11768 = e;
var G__11769 = f;
var G__11770 = g;
var G__11771 = h;
var G__11772 = i;
var G__11773 = j;
var G__11774 = k;
var G__11775 = l;
var G__11776 = m;
var G__11777 = n;
var G__11778 = o;
var G__11779 = p;
var G__11780 = q;
var G__11781 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781) : self__.dispatch_fn.call(null,G__11764,G__11765,G__11766,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11782 = a;
var G__11783 = b;
var G__11784 = c;
var G__11785 = d;
var G__11786 = e;
var G__11787 = f;
var G__11788 = g;
var G__11789 = h;
var G__11790 = i;
var G__11791 = j;
var G__11792 = k;
var G__11793 = l;
var G__11794 = m;
var G__11795 = n;
var G__11796 = o;
var G__11797 = p;
var G__11798 = q;
var G__11799 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799) : target_fn.call(null,G__11782,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799));
});
var G__12298__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11800 = a;
var G__11801 = b;
var G__11802 = c;
var G__11803 = d;
var G__11804 = e;
var G__11805 = f;
var G__11806 = g;
var G__11807 = h;
var G__11808 = i;
var G__11809 = j;
var G__11810 = k;
var G__11811 = l;
var G__11812 = m;
var G__11813 = n;
var G__11814 = o;
var G__11815 = p;
var G__11816 = q;
var G__11817 = r;
var G__11818 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818) : self__.dispatch_fn.call(null,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817,G__11818));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11819 = a;
var G__11820 = b;
var G__11821 = c;
var G__11822 = d;
var G__11823 = e;
var G__11824 = f;
var G__11825 = g;
var G__11826 = h;
var G__11827 = i;
var G__11828 = j;
var G__11829 = k;
var G__11830 = l;
var G__11831 = m;
var G__11832 = n;
var G__11833 = o;
var G__11834 = p;
var G__11835 = q;
var G__11836 = r;
var G__11837 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837) : target_fn.call(null,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836,G__11837));
});
var G__12298__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11838 = a;
var G__11839 = b;
var G__11840 = c;
var G__11841 = d;
var G__11842 = e;
var G__11843 = f;
var G__11844 = g;
var G__11845 = h;
var G__11846 = i;
var G__11847 = j;
var G__11848 = k;
var G__11849 = l;
var G__11850 = m;
var G__11851 = n;
var G__11852 = o;
var G__11853 = p;
var G__11854 = q;
var G__11855 = r;
var G__11856 = s;
var G__11857 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857) : self__.dispatch_fn.call(null,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11858 = a;
var G__11859 = b;
var G__11860 = c;
var G__11861 = d;
var G__11862 = e;
var G__11863 = f;
var G__11864 = g;
var G__11865 = h;
var G__11866 = i;
var G__11867 = j;
var G__11868 = k;
var G__11869 = l;
var G__11870 = m;
var G__11871 = n;
var G__11872 = o;
var G__11873 = p;
var G__11874 = q;
var G__11875 = r;
var G__11876 = s;
var G__11877 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877) : target_fn.call(null,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877));
});
var G__12298__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12298 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12298__1.call(this,self__);
case 2:
return G__12298__2.call(this,self__,a);
case 3:
return G__12298__3.call(this,self__,a,b);
case 4:
return G__12298__4.call(this,self__,a,b,c);
case 5:
return G__12298__5.call(this,self__,a,b,c,d);
case 6:
return G__12298__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12298__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12298__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12298__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12298__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12298__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12298__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12298__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12298__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12298__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12298__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12298__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12298__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12298__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12298__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12298__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12298__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12298.cljs$core$IFn$_invoke$arity$1 = G__12298__1;
G__12298.cljs$core$IFn$_invoke$arity$2 = G__12298__2;
G__12298.cljs$core$IFn$_invoke$arity$3 = G__12298__3;
G__12298.cljs$core$IFn$_invoke$arity$4 = G__12298__4;
G__12298.cljs$core$IFn$_invoke$arity$5 = G__12298__5;
G__12298.cljs$core$IFn$_invoke$arity$6 = G__12298__6;
G__12298.cljs$core$IFn$_invoke$arity$7 = G__12298__7;
G__12298.cljs$core$IFn$_invoke$arity$8 = G__12298__8;
G__12298.cljs$core$IFn$_invoke$arity$9 = G__12298__9;
G__12298.cljs$core$IFn$_invoke$arity$10 = G__12298__10;
G__12298.cljs$core$IFn$_invoke$arity$11 = G__12298__11;
G__12298.cljs$core$IFn$_invoke$arity$12 = G__12298__12;
G__12298.cljs$core$IFn$_invoke$arity$13 = G__12298__13;
G__12298.cljs$core$IFn$_invoke$arity$14 = G__12298__14;
G__12298.cljs$core$IFn$_invoke$arity$15 = G__12298__15;
G__12298.cljs$core$IFn$_invoke$arity$16 = G__12298__16;
G__12298.cljs$core$IFn$_invoke$arity$17 = G__12298__17;
G__12298.cljs$core$IFn$_invoke$arity$18 = G__12298__18;
G__12298.cljs$core$IFn$_invoke$arity$19 = G__12298__19;
G__12298.cljs$core$IFn$_invoke$arity$20 = G__12298__20;
G__12298.cljs$core$IFn$_invoke$arity$21 = G__12298__21;
G__12298.cljs$core$IFn$_invoke$arity$22 = G__12298__22;
return G__12298;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11450){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11450)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11878 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11878) : self__.dispatch_fn.call(null,G__11878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11879 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11879) : target_fn.call(null,G__11879));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11880 = a;
var G__11881 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11880,G__11881) : self__.dispatch_fn.call(null,G__11880,G__11881));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11882 = a;
var G__11883 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11882,G__11883) : target_fn.call(null,G__11882,G__11883));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11884 = a;
var G__11885 = b;
var G__11886 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11884,G__11885,G__11886) : self__.dispatch_fn.call(null,G__11884,G__11885,G__11886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11887 = a;
var G__11888 = b;
var G__11889 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11887,G__11888,G__11889) : target_fn.call(null,G__11887,G__11888,G__11889));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11890 = a;
var G__11891 = b;
var G__11892 = c;
var G__11893 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11890,G__11891,G__11892,G__11893) : self__.dispatch_fn.call(null,G__11890,G__11891,G__11892,G__11893));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11894 = a;
var G__11895 = b;
var G__11896 = c;
var G__11897 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11894,G__11895,G__11896,G__11897) : target_fn.call(null,G__11894,G__11895,G__11896,G__11897));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11898 = a;
var G__11899 = b;
var G__11900 = c;
var G__11901 = d;
var G__11902 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11898,G__11899,G__11900,G__11901,G__11902) : self__.dispatch_fn.call(null,G__11898,G__11899,G__11900,G__11901,G__11902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11903 = a;
var G__11904 = b;
var G__11905 = c;
var G__11906 = d;
var G__11907 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11903,G__11904,G__11905,G__11906,G__11907) : target_fn.call(null,G__11903,G__11904,G__11905,G__11906,G__11907));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11908 = a;
var G__11909 = b;
var G__11910 = c;
var G__11911 = d;
var G__11912 = e;
var G__11913 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11908,G__11909,G__11910,G__11911,G__11912,G__11913) : self__.dispatch_fn.call(null,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11914 = a;
var G__11915 = b;
var G__11916 = c;
var G__11917 = d;
var G__11918 = e;
var G__11919 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11914,G__11915,G__11916,G__11917,G__11918,G__11919) : target_fn.call(null,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11920 = a;
var G__11921 = b;
var G__11922 = c;
var G__11923 = d;
var G__11924 = e;
var G__11925 = f;
var G__11926 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926) : self__.dispatch_fn.call(null,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11927 = a;
var G__11928 = b;
var G__11929 = c;
var G__11930 = d;
var G__11931 = e;
var G__11932 = f;
var G__11933 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933) : target_fn.call(null,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11934 = a;
var G__11935 = b;
var G__11936 = c;
var G__11937 = d;
var G__11938 = e;
var G__11939 = f;
var G__11940 = g;
var G__11941 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941) : self__.dispatch_fn.call(null,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11942 = a;
var G__11943 = b;
var G__11944 = c;
var G__11945 = d;
var G__11946 = e;
var G__11947 = f;
var G__11948 = g;
var G__11949 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949) : target_fn.call(null,G__11942,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11950 = a;
var G__11951 = b;
var G__11952 = c;
var G__11953 = d;
var G__11954 = e;
var G__11955 = f;
var G__11956 = g;
var G__11957 = h;
var G__11958 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958) : self__.dispatch_fn.call(null,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11959 = a;
var G__11960 = b;
var G__11961 = c;
var G__11962 = d;
var G__11963 = e;
var G__11964 = f;
var G__11965 = g;
var G__11966 = h;
var G__11967 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967) : target_fn.call(null,G__11959,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11968 = a;
var G__11969 = b;
var G__11970 = c;
var G__11971 = d;
var G__11972 = e;
var G__11973 = f;
var G__11974 = g;
var G__11975 = h;
var G__11976 = i;
var G__11977 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977) : self__.dispatch_fn.call(null,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11978 = a;
var G__11979 = b;
var G__11980 = c;
var G__11981 = d;
var G__11982 = e;
var G__11983 = f;
var G__11984 = g;
var G__11985 = h;
var G__11986 = i;
var G__11987 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987) : target_fn.call(null,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11988 = a;
var G__11989 = b;
var G__11990 = c;
var G__11991 = d;
var G__11992 = e;
var G__11993 = f;
var G__11994 = g;
var G__11995 = h;
var G__11996 = i;
var G__11997 = j;
var G__11998 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998) : self__.dispatch_fn.call(null,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11999 = a;
var G__12000 = b;
var G__12001 = c;
var G__12002 = d;
var G__12003 = e;
var G__12004 = f;
var G__12005 = g;
var G__12006 = h;
var G__12007 = i;
var G__12008 = j;
var G__12009 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009) : target_fn.call(null,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12010 = a;
var G__12011 = b;
var G__12012 = c;
var G__12013 = d;
var G__12014 = e;
var G__12015 = f;
var G__12016 = g;
var G__12017 = h;
var G__12018 = i;
var G__12019 = j;
var G__12020 = k;
var G__12021 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021) : self__.dispatch_fn.call(null,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12022 = a;
var G__12023 = b;
var G__12024 = c;
var G__12025 = d;
var G__12026 = e;
var G__12027 = f;
var G__12028 = g;
var G__12029 = h;
var G__12030 = i;
var G__12031 = j;
var G__12032 = k;
var G__12033 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033) : target_fn.call(null,G__12022,G__12023,G__12024,G__12025,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12034 = a;
var G__12035 = b;
var G__12036 = c;
var G__12037 = d;
var G__12038 = e;
var G__12039 = f;
var G__12040 = g;
var G__12041 = h;
var G__12042 = i;
var G__12043 = j;
var G__12044 = k;
var G__12045 = l;
var G__12046 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046) : self__.dispatch_fn.call(null,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042,G__12043,G__12044,G__12045,G__12046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12047 = a;
var G__12048 = b;
var G__12049 = c;
var G__12050 = d;
var G__12051 = e;
var G__12052 = f;
var G__12053 = g;
var G__12054 = h;
var G__12055 = i;
var G__12056 = j;
var G__12057 = k;
var G__12058 = l;
var G__12059 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059) : target_fn.call(null,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12060 = a;
var G__12061 = b;
var G__12062 = c;
var G__12063 = d;
var G__12064 = e;
var G__12065 = f;
var G__12066 = g;
var G__12067 = h;
var G__12068 = i;
var G__12069 = j;
var G__12070 = k;
var G__12071 = l;
var G__12072 = m;
var G__12073 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073) : self__.dispatch_fn.call(null,G__12060,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12074 = a;
var G__12075 = b;
var G__12076 = c;
var G__12077 = d;
var G__12078 = e;
var G__12079 = f;
var G__12080 = g;
var G__12081 = h;
var G__12082 = i;
var G__12083 = j;
var G__12084 = k;
var G__12085 = l;
var G__12086 = m;
var G__12087 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087) : target_fn.call(null,G__12074,G__12075,G__12076,G__12077,G__12078,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12088 = a;
var G__12089 = b;
var G__12090 = c;
var G__12091 = d;
var G__12092 = e;
var G__12093 = f;
var G__12094 = g;
var G__12095 = h;
var G__12096 = i;
var G__12097 = j;
var G__12098 = k;
var G__12099 = l;
var G__12100 = m;
var G__12101 = n;
var G__12102 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102) : self__.dispatch_fn.call(null,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097,G__12098,G__12099,G__12100,G__12101,G__12102));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12103 = a;
var G__12104 = b;
var G__12105 = c;
var G__12106 = d;
var G__12107 = e;
var G__12108 = f;
var G__12109 = g;
var G__12110 = h;
var G__12111 = i;
var G__12112 = j;
var G__12113 = k;
var G__12114 = l;
var G__12115 = m;
var G__12116 = n;
var G__12117 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117) : target_fn.call(null,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116,G__12117));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12118 = a;
var G__12119 = b;
var G__12120 = c;
var G__12121 = d;
var G__12122 = e;
var G__12123 = f;
var G__12124 = g;
var G__12125 = h;
var G__12126 = i;
var G__12127 = j;
var G__12128 = k;
var G__12129 = l;
var G__12130 = m;
var G__12131 = n;
var G__12132 = o;
var G__12133 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133) : self__.dispatch_fn.call(null,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12134 = a;
var G__12135 = b;
var G__12136 = c;
var G__12137 = d;
var G__12138 = e;
var G__12139 = f;
var G__12140 = g;
var G__12141 = h;
var G__12142 = i;
var G__12143 = j;
var G__12144 = k;
var G__12145 = l;
var G__12146 = m;
var G__12147 = n;
var G__12148 = o;
var G__12149 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149) : target_fn.call(null,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12150 = a;
var G__12151 = b;
var G__12152 = c;
var G__12153 = d;
var G__12154 = e;
var G__12155 = f;
var G__12156 = g;
var G__12157 = h;
var G__12158 = i;
var G__12159 = j;
var G__12160 = k;
var G__12161 = l;
var G__12162 = m;
var G__12163 = n;
var G__12164 = o;
var G__12165 = p;
var G__12166 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166) : self__.dispatch_fn.call(null,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12167 = a;
var G__12168 = b;
var G__12169 = c;
var G__12170 = d;
var G__12171 = e;
var G__12172 = f;
var G__12173 = g;
var G__12174 = h;
var G__12175 = i;
var G__12176 = j;
var G__12177 = k;
var G__12178 = l;
var G__12179 = m;
var G__12180 = n;
var G__12181 = o;
var G__12182 = p;
var G__12183 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183) : target_fn.call(null,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12184 = a;
var G__12185 = b;
var G__12186 = c;
var G__12187 = d;
var G__12188 = e;
var G__12189 = f;
var G__12190 = g;
var G__12191 = h;
var G__12192 = i;
var G__12193 = j;
var G__12194 = k;
var G__12195 = l;
var G__12196 = m;
var G__12197 = n;
var G__12198 = o;
var G__12199 = p;
var G__12200 = q;
var G__12201 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201) : self__.dispatch_fn.call(null,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12202 = a;
var G__12203 = b;
var G__12204 = c;
var G__12205 = d;
var G__12206 = e;
var G__12207 = f;
var G__12208 = g;
var G__12209 = h;
var G__12210 = i;
var G__12211 = j;
var G__12212 = k;
var G__12213 = l;
var G__12214 = m;
var G__12215 = n;
var G__12216 = o;
var G__12217 = p;
var G__12218 = q;
var G__12219 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219) : target_fn.call(null,G__12202,G__12203,G__12204,G__12205,G__12206,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12220 = a;
var G__12221 = b;
var G__12222 = c;
var G__12223 = d;
var G__12224 = e;
var G__12225 = f;
var G__12226 = g;
var G__12227 = h;
var G__12228 = i;
var G__12229 = j;
var G__12230 = k;
var G__12231 = l;
var G__12232 = m;
var G__12233 = n;
var G__12234 = o;
var G__12235 = p;
var G__12236 = q;
var G__12237 = r;
var G__12238 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238) : self__.dispatch_fn.call(null,G__12220,G__12221,G__12222,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12239 = a;
var G__12240 = b;
var G__12241 = c;
var G__12242 = d;
var G__12243 = e;
var G__12244 = f;
var G__12245 = g;
var G__12246 = h;
var G__12247 = i;
var G__12248 = j;
var G__12249 = k;
var G__12250 = l;
var G__12251 = m;
var G__12252 = n;
var G__12253 = o;
var G__12254 = p;
var G__12255 = q;
var G__12256 = r;
var G__12257 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257) : target_fn.call(null,G__12239,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12258 = a;
var G__12259 = b;
var G__12260 = c;
var G__12261 = d;
var G__12262 = e;
var G__12263 = f;
var G__12264 = g;
var G__12265 = h;
var G__12266 = i;
var G__12267 = j;
var G__12268 = k;
var G__12269 = l;
var G__12270 = m;
var G__12271 = n;
var G__12272 = o;
var G__12273 = p;
var G__12274 = q;
var G__12275 = r;
var G__12276 = s;
var G__12277 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277) : self__.dispatch_fn.call(null,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276,G__12277));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12278 = a;
var G__12279 = b;
var G__12280 = c;
var G__12281 = d;
var G__12282 = e;
var G__12283 = f;
var G__12284 = g;
var G__12285 = h;
var G__12286 = i;
var G__12287 = j;
var G__12288 = k;
var G__12289 = l;
var G__12290 = m;
var G__12291 = n;
var G__12292 = o;
var G__12293 = p;
var G__12294 = q;
var G__12295 = r;
var G__12296 = s;
var G__12297 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297) : target_fn.call(null,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__12299 = self__.uuid;
var G__12300 = other.uuid;
return goog.array.defaultCompare(G__12299,G__12300);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12301 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12301);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__5195__auto__,writer__5196__auto__,opt__5197__auto__){
return cljs.core._write(writer__5196__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12309 = x;
var G__12310 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12309,G__12310) : pred.call(null,G__12309,G__12310));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12311 = y;
var G__12312 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12311,G__12312) : pred.call(null,G__12311,G__12312));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
